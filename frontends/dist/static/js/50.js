(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[50],{

/***/ "./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/components/stress/stressHome.vue?vue&type=script&lang=js&":
/*!**************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/stress/stressHome.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _router_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../router/api */ \"./src/router/api.js\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//import NProgress from 'nprogress'\n // import ElRow from \"element-ui/packages/row/src/row\";\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  // components: {ElRow},\n  data() {\n    return {\n      filters: {\n        name: ''\n      },\n      project: [],\n      total: 0,\n      page: 1,\n      listLoading: false,\n      sels: [],\n      //列表选中列\n      editFormVisible: false,\n      //编辑界面是否显示\n      editLoading: false,\n      options: [{\n        label: \"Web\",\n        value: \"Web\"\n      }, {\n        label: \"App\",\n        value: \"App\"\n      }],\n      editFormRules: {\n        projectname: [{\n          required: true,\n          message: '请输入名称',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 50,\n          message: '长度在 1 到 50 个字符',\n          trigger: 'blur'\n        }],\n        testdata: [{\n          required: true,\n          message: '请选择模型',\n          trigger: 'blur'\n        }],\n        version: [{\n          required: true,\n          message: '请输入版本号',\n          trigger: 'change'\n        }, {\n          pattern: /^\\d+\\.\\d+\\.\\d+$/,\n          message: '请输入合法的版本号（x.x.x）'\n        }]\n      },\n      //编辑界面数据\n      editForm: {\n        projectname: '',\n        version: '',\n        thread: 1,\n        type: false\n      },\n      addFormVisible: false,\n      //新增界面是否显示\n      addLoading: false,\n      addFormRules: {\n        projectname: [{\n          required: true,\n          message: '请输入名称',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 50,\n          message: '长度在 1 到 50 个字符',\n          trigger: 'blur'\n        }],\n        testdata: [{\n          required: true,\n          message: '请选择模型类型',\n          trigger: 'blur'\n        }],\n        version: [{\n          required: true,\n          message: '请输入版本号',\n          trigger: 'change'\n        }, {\n          pattern: /^\\d+\\.\\d+\\.\\d+$/,\n          message: '请输入合法的版本号（x.x.x）'\n        }]\n      },\n      //新增界面数据\n      addForm: {\n        projectname: '晨曦',\n        loadserver: '192.168.1.208',\n        version: '',\n        type: ''\n      }\n    };\n  },\n\n  methods: {\n    //展示风险项\n    showdetail(index, row) {\n      this.$router.push({\n        path: '/stressdetail',\n        query: {\n          id: row.id,\n          name: row.name\n        }\n      });\n    },\n\n    // 获取host数据列表\n    gethost() {\n      this.listLoading = true;\n      let self = this;\n      const params = {};\n      const headers = {\n        Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n      };\n      Object(_router_api__WEBPACK_IMPORTED_MODULE_0__[\"getHost\"])(headers, params).then(res => {\n        this.listLoading = false;\n        const {\n          msg,\n          code,\n          data\n        } = res;\n\n        if (code === '0') {\n          this.total = data.total;\n          this.list = data.data;\n          var json = JSON.stringify(this.list);\n          this.hosts = JSON.parse(json);\n        } else {\n          self.$message.error({\n            message: msg,\n            center: true\n          });\n        }\n      });\n    },\n\n    // 获取getBase列表\n    getBase() {\n      this.listLoading = true;\n      const self = this;\n      const params = {\n        status: 1,\n        type: 'model'\n      };\n      const headers = {\n        Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n      };\n      Object(_router_api__WEBPACK_IMPORTED_MODULE_0__[\"getDictionary\"])(headers, params).then(res => {\n        self.listLoading = false;\n        const {\n          msg,\n          code,\n          data\n        } = res;\n\n        if (code === '0') {\n          self.total = data.total;\n          self.list = data.data;\n          var json = JSON.stringify(self.list);\n          this.model = JSON.parse(json);\n        } else {\n          self.$message.error({\n            message: msg,\n            center: true\n          });\n        }\n      });\n    },\n\n    // 运行压力测试\n    stressRun: function (index, row) {\n      this.$confirm('确认执行测试?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        this.listLoading = true; //NProgress.start();\n\n        let self = this;\n        let params = {\n          id: row.id,\n          type: false\n        };\n        let header = {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n        };\n        Object(_router_api__WEBPACK_IMPORTED_MODULE_0__[\"stressTool\"])(header, params).then(_data => {\n          let {\n            msg,\n            code,\n            data\n          } = _data;\n\n          if (code === '0') {\n            self.$message({\n              message: '成功',\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            });\n          }\n\n          self.stresslistList();\n        });\n      });\n    },\n\n    // 获取项目列表\n    stresslistList() {\n      this.listLoading = true;\n      let self = this;\n      let params = {\n        page: self.page,\n        name: self.filters.name,\n        type: \"\"\n      };\n      let headers = {\n        Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n      };\n      Object(_router_api__WEBPACK_IMPORTED_MODULE_0__[\"stresslist\"])(headers, params).then(res => {\n        self.listLoading = false;\n        let {\n          msg,\n          code,\n          data\n        } = res;\n\n        if (code === '0') {\n          self.total = data.total;\n          self.project = data.data;\n        } else {\n          self.$message.error({\n            message: msg,\n            center: true\n          });\n        }\n      });\n    },\n\n    //保存\n    handleSave: function (index, row) {\n      this.$confirm('确认测试完成了吗?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        this.listLoading = true; //NProgress.start();\n\n        let self = this;\n        let params = {\n          id: row.id\n        };\n        let header = {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n        };\n        Object(_router_api__WEBPACK_IMPORTED_MODULE_0__[\"stresssave\"])(header, params).then(_data => {\n          let {\n            msg,\n            code,\n            data\n          } = _data;\n\n          if (code === '0') {\n            self.$message({\n              message: '成功',\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            });\n          }\n\n          self.stresslistList();\n        });\n      });\n    },\n    //删除\n    handleDel: function (index, row) {\n      this.$confirm('确认删除该记录吗?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        this.listLoading = true; //NProgress.start();\n\n        let self = this;\n        let params = {\n          ids: [row.id]\n        };\n        let header = {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n        };\n        delProject(header, params).then(_data => {\n          let {\n            msg,\n            code,\n            data\n          } = _data;\n\n          if (code === '0') {\n            self.$message({\n              message: '删除成功',\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            });\n          }\n\n          self.stresslistList();\n        });\n      });\n    },\n\n    handleChange(value) {\n      console.log(value);\n    },\n\n    // 改变项目状态\n    handleChangeStatus: function (index, row) {\n      let self = this;\n      this.listLoading = true;\n      let params = {\n        project_id: row.id\n      };\n      let headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n      };\n\n      if (row.status) {\n        Object(_router_api__WEBPACK_IMPORTED_MODULE_0__[\"disableStress\"])(headers, params).then(_data => {\n          let {\n            msg,\n            code,\n            data\n          } = _data;\n          self.listLoading = false;\n\n          if (code === '0') {\n            self.$message({\n              message: '禁用成功',\n              center: true,\n              type: 'success'\n            });\n            row.status = !row.status;\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            });\n          }\n        });\n      } else {\n        Object(_router_api__WEBPACK_IMPORTED_MODULE_0__[\"enableStress\"])(headers, params).then(_data => {\n          let {\n            msg,\n            code,\n            data\n          } = _data;\n          self.listLoading = false;\n\n          if (code === '0') {\n            self.$message({\n              message: '启用成功',\n              center: true,\n              type: 'success'\n            });\n            row.status = !row.status;\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            });\n          }\n        });\n      }\n    },\n\n    handleCurrentChange(val) {\n      this.page = val;\n      this.stresslistList();\n    },\n\n    //显示编辑界面\n    handleEdit: function (index, row) {\n      this.editFormVisible = true;\n      this.editForm = Object.assign({}, row);\n    },\n    //显示新增界面\n    handleAdd: function () {\n      this.addFormVisible = true;\n      this.addForm = {\n        version: null,\n        projectname: \"晨曦\",\n        loadserver: '192.168.1.208',\n        thread: 1,\n        synchroniz: 0,\n        ramp: 0,\n        loop_count: 1\n      };\n    },\n    //run 性能测试\n    run: function () {\n      let self = this;\n      this.$refs.editForm.validate(valid => {\n        if (valid) {\n          this.$confirm('确认执行？', '提示', {}).then(() => {\n            self.editLoading = true; //NProgress.start();\n\n            let params = {\n              id: self.editForm.id,\n              type: self.editForm.type\n            };\n            let header = {\n              \"Content-Type\": \"application/json\",\n              Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n            };\n            Object(_router_api__WEBPACK_IMPORTED_MODULE_0__[\"stressTool\"])(header, params).then(_data => {\n              let {\n                msg,\n                code,\n                data\n              } = _data;\n              self.editLoading = false;\n\n              if (code === '0') {\n                self.$message({\n                  message: '已执行',\n                  center: true,\n                  type: 'success'\n                });\n                self.$refs['editForm'].resetFields();\n                self.editFormVisible = false;\n                self.stresslistList();\n              } else if (code === '999997') {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                });\n              } else {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    //编辑修改\n    editSubmit: function () {\n      let self = this;\n      this.$refs.editForm.validate(valid => {\n        if (valid) {\n          this.$confirm('确认保存吗？', '提示', {}).then(() => {\n            self.editLoading = true; //NProgress.start();\n\n            let params = {\n              id: self.editForm.id,\n              projectname: self.editForm.projectname,\n              loadserver: self.editForm.loadserver,\n              version: self.editForm.version,\n              testdata: self.editForm.testdata,\n              thread: this.editForm.thread,\n              synchroniz: this.editForm.synchroniz,\n              ramp: this.editForm.ramp,\n              loop_count: this.editForm.loop_count,\n              loop_time: this.editForm.loop_time,\n              status: true\n            };\n            let header = {\n              \"Content-Type\": \"application/json\",\n              Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n            };\n            Object(_router_api__WEBPACK_IMPORTED_MODULE_0__[\"updateStress\"])(header, params).then(_data => {\n              let {\n                msg,\n                code,\n                data\n              } = _data;\n              self.editLoading = false;\n\n              if (code === '0') {\n                self.$message({\n                  message: '修改成功',\n                  center: true,\n                  type: 'success'\n                });\n                self.$refs['editForm'].resetFields();\n                self.editFormVisible = false;\n                self.stresslistList();\n              } else if (code === '999997') {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                });\n              } else {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    //新增\n    addSubmit: function () {\n      this.$refs.addForm.validate(valid => {\n        if (valid) {\n          let self = this;\n          this.$confirm('确认保存吗？', '提示', {}).then(() => {\n            self.addLoading = true; //NProgress.start();\n\n            let params = JSON.stringify({\n              projectname: self.addForm.projectname,\n              loadserver: self.addForm.loadserver,\n              version: self.addForm.version,\n              testdata: self.addForm.testdata,\n              thread: this.addForm.thread,\n              synchroniz: this.addForm.synchroniz,\n              ramp: this.addForm.ramp,\n              loop_count: this.addForm.loop_count,\n              loop_time: this.addForm.loop_time,\n              status: true\n            });\n            let header = {\n              \"Content-Type\": \"application/json\",\n              Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n            };\n            Object(_router_api__WEBPACK_IMPORTED_MODULE_0__[\"addStress\"])(header, params).then(_data => {\n              let {\n                msg,\n                code,\n                data\n              } = _data;\n              self.addLoading = false;\n\n              if (code === '0') {\n                self.$message({\n                  message: '添加成功',\n                  center: true,\n                  type: 'success'\n                });\n                self.$refs['addForm'].resetFields();\n                self.addFormVisible = false;\n                self.stresslistList();\n              } else if (code === '999997') {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                });\n              } else {\n                self.$message.error({\n                  message: msg,\n                  center: true\n                });\n                self.$refs['addForm'].resetFields();\n                self.addFormVisible = false;\n                self.stresslistList();\n              }\n            });\n          });\n        }\n      });\n    },\n    selsChange: function (sels) {\n      this.sels = sels;\n    },\n    //批量删除\n    batchRemove: function () {\n      let ids = this.sels.map(item => item.id);\n      let self = this;\n      this.$confirm('确认删除选中记录吗？', '提示', {\n        type: 'warning'\n      }).then(() => {\n        this.listLoading = true; //NProgress.start();\n\n        let self = this;\n        let params = {\n          ids: ids\n        };\n        let header = {\n          \"Content-Type\": \"application/json\",\n          Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n        };\n        Object(_router_api__WEBPACK_IMPORTED_MODULE_0__[\"delStress\"])(header, params).then(_data => {\n          let {\n            msg,\n            code,\n            data\n          } = _data;\n\n          if (code === '0') {\n            self.$message({\n              message: '删除成功',\n              center: true,\n              type: 'success'\n            });\n          } else {\n            self.$message.error({\n              message: msg,\n              center: true\n            });\n          }\n\n          self.stresslistList();\n        });\n      });\n    }\n  },\n\n  mounted() {\n    this.stresslistList();\n  }\n\n});\n\n//# sourceURL=webpack:///./src/components/stress/stressHome.vue?./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options");

/***/ }),

/***/ "./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/.cache/vue-loader\",\"cacheIdentifier\":\"4fd9a866-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/components/stress/stressHome.vue?vue&type=template&id=62c9fde4&":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"4fd9a866-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/stress/stressHome.vue?vue&type=template&id=62c9fde4& ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"section\",\n    [\n      _c(\n        \"el-col\",\n        {\n          staticClass: \"toolbar\",\n          staticStyle: { \"padding-bottom\": \"0px\" },\n          attrs: { span: 24 }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              attrs: { inline: true, model: _vm.filters },\n              nativeOn: {\n                submit: function($event) {\n                  $event.preventDefault()\n                }\n              }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                [\n                  _c(\"el-input\", {\n                    attrs: { placeholder: \"名称\" },\n                    nativeOn: {\n                      keyup: function($event) {\n                        if (\n                          !$event.type.indexOf(\"key\") &&\n                          _vm._k(\n                            $event.keyCode,\n                            \"enter\",\n                            13,\n                            $event.key,\n                            \"Enter\"\n                          )\n                        ) {\n                          return null\n                        }\n                        return _vm.stresslistList($event)\n                      }\n                    },\n                    model: {\n                      value: _vm.filters.name,\n                      callback: function($$v) {\n                        _vm.$set(_vm.filters, \"name\", $$v)\n                      },\n                      expression: \"filters.name\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"primary\" },\n                      on: { click: _vm.stresslistList }\n                    },\n                    [_vm._v(\"查询\")]\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"primary\" },\n                      on: { click: _vm.handleAdd }\n                    },\n                    [_vm._v(\"创建测试\")]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-table\",\n        {\n          directives: [\n            {\n              name: \"loading\",\n              rawName: \"v-loading\",\n              value: _vm.listLoading,\n              expression: \"listLoading\"\n            }\n          ],\n          staticStyle: { width: \"100%\" },\n          attrs: { data: _vm.project, \"highlight-current-row\": \"\" },\n          on: { \"selection-change\": _vm.selsChange }\n        },\n        [\n          _c(\"el-table-column\", {\n            attrs: { type: \"selection\", \"min-width\": \"5%\" }\n          }),\n          _c(\"el-table-column\", {\n            attrs: {\n              prop: \"version\",\n              label: \"项目\",\n              \"min-width\": \"12%\",\n              sortable: \"\"\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\"span\", { staticStyle: { \"margin-left\": \"10px\" } }, [\n                      _vm._v(_vm._s(scope.row.projectname))\n                    ])\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"el-table-column\", {\n            attrs: {\n              prop: \"version\",\n              label: \"版本\",\n              \"min-width\": \"12%\",\n              sortable: \"\",\n              \"show-overflow-tooltip\": \"\"\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\"el-icon\", { attrs: { name: \"name\" } }),\n                    scope.row.status\n                      ? _c(\n                          \"router-link\",\n                          {\n                            staticStyle: {\n                              \"text-decoration\": \"none\",\n                              color: \"#000000\"\n                            },\n                            attrs: {\n                              to: {\n                                version: \"概况\",\n                                params: { id: scope.row.id }\n                              }\n                            }\n                          },\n                          [_vm._v(\" \" + _vm._s(scope.row.version) + \" \")]\n                        )\n                      : _vm._e(),\n                    _vm._v(\n                      \" \" +\n                        _vm._s(!scope.row.status ? scope.row.version : \"\") +\n                        \" \"\n                    )\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"el-table-column\", {\n            attrs: {\n              prop: \"version\",\n              label: \"服务\",\n              \"min-width\": \"12%\",\n              sortable: \"\"\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\"span\", { staticStyle: { \"margin-left\": \"10px\" } }, [\n                      _vm._v(_vm._s(scope.row.loadserver))\n                    ])\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"el-table-column\", {\n            attrs: { prop: \"type\", label: \"线程数\", \"min-width\": \"9%\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\"span\", { staticStyle: { \"margin-left\": \"10px\" } }, [\n                      _vm._v(_vm._s(scope.row.thread))\n                    ])\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"el-table-column\", {\n            attrs: { prop: \"type\", label: \"规则\", \"min-width\": \"30%\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\"span\", { staticStyle: { \"margin-left\": \"10px\" } }, [\n                      _vm._v(_vm._s(scope.row.testdata))\n                    ])\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"el-table-column\", {\n            attrs: { label: \"开始时间\", \"min-width\": \"16%\", sortable: \"\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\"span\", { staticStyle: { \"margin-left\": \"10px\" } }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm._f(\"dateformat\")(\n                            scope.row.start_date,\n                            \"YYYY-MM-DD HH:mm:SS\"\n                          )\n                        )\n                      )\n                    ])\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"el-table-column\", {\n            attrs: { label: \"结束时间\", \"min-width\": \"16%\", sortable: \"\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\"span\", { staticStyle: { \"margin-left\": \"10px\" } }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm._f(\"dateformat\")(\n                            scope.row.end_date,\n                            \"YYYY-MM-DD HH:mm:SS\"\n                          )\n                        )\n                      )\n                    ])\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"el-table-column\", {\n            attrs: { prop: \"status\", label: \"状态\", \"min-width\": \"9%\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\"img\", {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: scope.row.status,\n                          expression: \"scope.row.status\"\n                        }\n                      ],\n                      staticStyle: {\n                        width: \"18px\",\n                        height: \"18px\",\n                        \"margin-right\": \"5px\",\n                        \"margin-bottom\": \"5px\"\n                      },\n                      attrs: { src: __webpack_require__(/*! ../../assets/img/qiyong.png */ \"./src/assets/img/qiyong.png\") }\n                    }),\n                    _c(\"img\", {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: !scope.row.status,\n                          expression: \"!scope.row.status\"\n                        }\n                      ],\n                      staticStyle: {\n                        width: \"18px\",\n                        height: \"18px\",\n                        \"margin-right\": \"5px\",\n                        \"margin-bottom\": \"5px\"\n                      },\n                      attrs: { src: __webpack_require__(/*! ../../assets/img/fou.png */ \"./src/assets/img/fou.png\") }\n                    })\n                  ]\n                }\n              }\n            ])\n          }),\n          _c(\"el-table-column\", {\n            attrs: { label: \"操作\", \"min-width\": \"30%\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\n                      \"el-button\",\n                      {\n                        attrs: { type: \"warning\", size: \"small\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.handleEdit(scope.$index, scope.row)\n                          }\n                        }\n                      },\n                      [_vm._v(\"查看\")]\n                    ),\n                    _c(\n                      \"el-button\",\n                      {\n                        attrs: { type: \"primary\", size: \"small\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.stressRun(scope.$index, scope.row)\n                          }\n                        }\n                      },\n                      [_vm._v(\"运行\")]\n                    ),\n                    _c(\n                      \"el-button\",\n                      {\n                        attrs: { type: \"danger\", size: \"small\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.handleSave(scope.$index, scope.row)\n                          }\n                        }\n                      },\n                      [_vm._v(\"测试报告\")]\n                    ),\n                    _c(\n                      \"el-button\",\n                      {\n                        attrs: { type: \"info\", size: \"small\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.handleChangeStatus(\n                              scope.$index,\n                              scope.row\n                            )\n                          }\n                        }\n                      },\n                      [\n                        _vm._v(\n                          \" \" +\n                            _vm._s(\n                              scope.row.status === false ? \"启用\" : \"禁用\"\n                            ) +\n                            \" \"\n                        )\n                      ]\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      ),\n      _c(\n        \"el-col\",\n        { staticClass: \"toolbar\", attrs: { span: 24 } },\n        [\n          _c(\n            \"el-button\",\n            {\n              attrs: { type: \"danger\", disabled: this.sels.length === 0 },\n              on: { click: _vm.batchRemove }\n            },\n            [_vm._v(\"批量删除\")]\n          ),\n          _c(\"el-pagination\", {\n            staticStyle: { float: \"right\" },\n            attrs: {\n              layout: \"prev, pager, next\",\n              \"page-size\": 20,\n              \"page-count\": _vm.total\n            },\n            on: { \"current-change\": _vm.handleCurrentChange }\n          })\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          staticStyle: { width: \"100%\", left: \"5.5%\" },\n          attrs: {\n            visible: _vm.editFormVisible,\n            \"close-on-click-modal\": false\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.editFormVisible = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"editForm\",\n              attrs: {\n                model: _vm.editForm,\n                \"label-width\": \"80px\",\n                rules: _vm.editFormRules\n              }\n            },\n            [\n              _c(\"el-divider\", [_vm._v(\"基本配置\")]),\n              _c(\n                \"el-row\",\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"项目\", prop: \"name\" } },\n                        [\n                          _c(\n                            \"el-select\",\n                            {\n                              attrs: { placeholder: \"请选择\" },\n                              model: {\n                                value: _vm.editForm.projectname,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.editForm, \"projectname\", $$v)\n                                },\n                                expression: \"editForm.projectname\"\n                              }\n                            },\n                            [\n                              _c(\"el-option\", {\n                                key: \"晨曦\",\n                                attrs: { label: \"晨曦\", value: \"晨曦\" }\n                              }),\n                              _c(\"el-option\", {\n                                key: \"肺炎\",\n                                attrs: { label: \"肺炎\", value: \"肺炎\" }\n                              })\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 6 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"版本\", prop: \"version\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { \"auto-complete\": \"off\" },\n                            model: {\n                              value: _vm.editForm.version,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.editForm,\n                                  \"version\",\n                                  typeof $$v === \"string\" ? $$v.trim() : $$v\n                                )\n                              },\n                              expression: \"editForm.version\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 24 } },\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"服务器\", prop: \"server\" } },\n                        [\n                          _c(\n                            \"el-select\",\n                            {\n                              attrs: { placeholder: \"请选择服务器\" },\n                              nativeOn: {\n                                click: function($event) {\n                                  return _vm.gethost()\n                                }\n                              },\n                              model: {\n                                value: _vm.editForm.loadserver,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.editForm, \"loadserver\", $$v)\n                                },\n                                expression: \"editForm.loadserver\"\n                              }\n                            },\n                            _vm._l(_vm.hosts, function(item, index) {\n                              return _c(\"el-option\", {\n                                key: item.host,\n                                attrs: { label: item.name, value: item.host }\n                              })\n                            }),\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 6 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"时间\", prop: \"loop_time\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { \"auto-complete\": \"off\" },\n                            model: {\n                              value: _vm.editForm.loop_time,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.editForm,\n                                  \"loop_time\",\n                                  typeof $$v === \"string\" ? $$v.trim() : $$v\n                                )\n                              },\n                              expression: \"editForm.loop_time\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 24 } },\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"模型\", prop: \"testdata\" } },\n                        [\n                          _c(\n                            \"el-select\",\n                            {\n                              attrs: { multiple: \"\", placeholder: \"请选择\" },\n                              nativeOn: {\n                                click: function($event) {\n                                  return _vm.getBase()\n                                }\n                              },\n                              model: {\n                                value: _vm.editForm.testdata,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.editForm, \"testdata\", $$v)\n                                },\n                                expression: \"editForm.testdata\"\n                              }\n                            },\n                            _vm._l(_vm.model, function(item, index) {\n                              return _c(\"el-option\", {\n                                key: item.id,\n                                attrs: { label: item.value, value: item.id }\n                              })\n                            }),\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\"el-divider\", [_vm._v(\"参数配置\")]),\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 24 } },\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 8 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"线程数\", prop: \"thread\" } },\n                        [\n                          _c(\"el-input-number\", {\n                            attrs: { min: 1, max: 5000, label: \"线程数\" },\n                            on: { change: _vm.handleChange },\n                            model: {\n                              value: _vm.editForm.thread,\n                              callback: function($$v) {\n                                _vm.$set(_vm.editForm, \"thread\", $$v)\n                              },\n                              expression: \"editForm.thread\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 8 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"循环次数\", prop: \"loop_count\" } },\n                        [\n                          _c(\"el-input-number\", {\n                            attrs: { min: 1, max: 5000, label: \"循环次数\" },\n                            on: { change: _vm.handleChange },\n                            model: {\n                              value: _vm.editForm.loop_count,\n                              callback: function($$v) {\n                                _vm.$set(_vm.editForm, \"loop_count\", $$v)\n                              },\n                              expression: \"editForm.loop_count\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 8 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"并发数\", prop: \"synchroniz\" } },\n                        [\n                          _c(\"el-input-number\", {\n                            attrs: { min: 0, max: 5000, label: \"循环次数\" },\n                            on: { change: _vm.handleChange },\n                            model: {\n                              value: _vm.editForm.synchroniz,\n                              callback: function($$v) {\n                                _vm.$set(_vm.editForm, \"synchroniz\", $$v)\n                              },\n                              expression: \"editForm.synchroniz\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 24 } },\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"ramp\", prop: \"ramp\" } },\n                        [\n                          _c(\"el-input-number\", {\n                            attrs: { min: 0, max: 5000, label: \"循环次数\" },\n                            on: { change: _vm.handleChange },\n                            model: {\n                              value: _vm.editForm.ramp,\n                              callback: function($$v) {\n                                _vm.$set(_vm.editForm, \"ramp\", $$v)\n                              },\n                              expression: \"editForm.ramp\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 10 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"dicom\", prop: \"switch\" } },\n                        [\n                          _c(\"el-switch\", {\n                            attrs: {\n                              \"active-color\": \"#13ce66\",\n                              \"inactive-color\": \"#ff4949\"\n                            },\n                            model: {\n                              value: _vm.editForm.switch,\n                              callback: function($$v) {\n                                _vm.$set(_vm.editForm, \"switch\", $$v)\n                              },\n                              expression: \"editForm.switch\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\"i\", {\n                staticClass: \"el-icon-close\",\n                staticStyle: {\n                  position: \"absolute\",\n                  top: \"-8px\",\n                  left: \"60px\",\n                  cursor: \"pointer\"\n                },\n                on: {\n                  click: function($event) {\n                    return _vm.deleteClick(_vm.item)\n                  }\n                }\n              }),\n              _c(\n                \"el-row\",\n                [\n                  _c(\"el-divider\", [_vm._v(\"文件上传\")]),\n                  _c(\n                    \"el-upload\",\n                    {\n                      staticClass: \"upload-demo\",\n                      attrs: {\n                        drag: \"\",\n                        action: \"/api/stress/upload\",\n                        multiple: \"\"\n                      }\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"el-icon-upload\" }),\n                      _c(\"div\", { staticClass: \"el-upload__text\" }, [\n                        _vm._v(\"将文件拖到此处，或\"),\n                        _c(\"em\", [_vm._v(\"点击上传\")])\n                      ]),\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"el-upload__tip\",\n                          attrs: { slot: \"tip\" },\n                          slot: \"tip\"\n                        },\n                        [_vm._v(\"只能上传jmx/.py文件\")]\n                      )\n                    ]\n                  )\n                ],\n                1\n              ),\n              _c(\"el-divider\", [_vm._v(\"-\")]),\n              _c(\n                \"el-row\",\n                [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"基准测试\", prop: \"switch\" } },\n                    [\n                      _c(\"el-switch\", {\n                        attrs: {\n                          \"active-color\": \"#13ce66\",\n                          \"inactive-color\": \"#ff4949\"\n                        },\n                        model: {\n                          value: _vm.editForm.type,\n                          callback: function($$v) {\n                            _vm.$set(_vm.editForm, \"type\", $$v)\n                          },\n                          expression: \"editForm.type\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  nativeOn: {\n                    click: function($event) {\n                      _vm.editFormVisible = false\n                    }\n                  }\n                },\n                [_vm._v(\"关闭\")]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\", loading: _vm.editLoading },\n                  nativeOn: {\n                    click: function($event) {\n                      return _vm.run($event)\n                    }\n                  }\n                },\n                [_vm._v(\"运行\")]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\", loading: _vm.editLoading },\n                  nativeOn: {\n                    click: function($event) {\n                      return _vm.editSubmit($event)\n                    }\n                  }\n                },\n                [_vm._v(\"修改\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          staticStyle: { width: \"75%\", left: \"12.5%\" },\n          attrs: {\n            title: \"新增测试\",\n            visible: _vm.addFormVisible,\n            \"close-on-click-modal\": false\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.addFormVisible = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"addForm\",\n              attrs: {\n                model: _vm.addForm,\n                \"label-width\": \"80px\",\n                rules: _vm.addFormRules\n              }\n            },\n            [\n              _c(\"el-divider\", [_vm._v(\"基本配置\")]),\n              _c(\n                \"el-row\",\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"项目\", prop: \"name\" } },\n                        [\n                          _c(\n                            \"el-select\",\n                            {\n                              attrs: { placeholder: \"请选择\" },\n                              model: {\n                                value: _vm.addForm.projectname,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.addForm, \"projectname\", $$v)\n                                },\n                                expression: \"addForm.projectname\"\n                              }\n                            },\n                            [\n                              _c(\"el-option\", {\n                                key: \"晨曦\",\n                                attrs: { label: \"晨曦\", value: \"晨曦\" }\n                              }),\n                              _c(\"el-option\", {\n                                key: \"肺炎\",\n                                attrs: { label: \"肺炎\", value: \"肺炎\" }\n                              })\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 8 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"版本\", prop: \"version\" } },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { \"auto-complete\": \"off\" },\n                            model: {\n                              value: _vm.addForm.version,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.addForm,\n                                  \"version\",\n                                  typeof $$v === \"string\" ? $$v.trim() : $$v\n                                )\n                              },\n                              expression: \"addForm.version\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 24 } },\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"服务器\", prop: \"server\" } },\n                        [\n                          _c(\n                            \"el-select\",\n                            {\n                              attrs: { placeholder: \"请选择服务器\" },\n                              nativeOn: {\n                                click: function($event) {\n                                  return _vm.gethost()\n                                }\n                              },\n                              model: {\n                                value: _vm.addForm.loadserver,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.addForm, \"loadserver\", $$v)\n                                },\n                                expression: \"addForm.loadserver\"\n                              }\n                            },\n                            _vm._l(_vm.hosts, function(item, index) {\n                              return _c(\"el-option\", {\n                                key: item.host,\n                                attrs: { label: item.name, value: item.host }\n                              })\n                            }),\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 8 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: \"时间\",\n                            prop: \"loop_time\",\n                            \"auto-complete\": \"off\"\n                          }\n                        },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { \"auto-complete\": \"off\" },\n                            model: {\n                              value: _vm.addForm.loop_time,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.addForm,\n                                  \"loop_time\",\n                                  typeof $$v === \"string\" ? $$v.trim() : $$v\n                                )\n                              },\n                              expression: \"addForm.loop_time\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 24 } },\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"模型\", prop: \"testdata\" } },\n                        [\n                          _c(\n                            \"el-select\",\n                            {\n                              attrs: { multiple: \"\", placeholder: \"请选择\" },\n                              nativeOn: {\n                                click: function($event) {\n                                  return _vm.getBase()\n                                }\n                              },\n                              model: {\n                                value: _vm.addForm.testdata,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.addForm, \"testdata\", $$v)\n                                },\n                                expression: \"addForm.testdata\"\n                              }\n                            },\n                            _vm._l(_vm.model, function(item, index) {\n                              return _c(\"el-option\", {\n                                key: item.id,\n                                attrs: { label: item.value, value: item.id }\n                              })\n                            }),\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\"el-divider\", [_vm._v(\"参数配置\")]),\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 24 } },\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 8 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"线程数\", prop: \"thread\" } },\n                        [\n                          _c(\"el-input-number\", {\n                            attrs: { min: 1, max: 5000, label: \"线程数\" },\n                            on: { change: _vm.handleChange },\n                            model: {\n                              value: _vm.addForm.thread,\n                              callback: function($$v) {\n                                _vm.$set(_vm.addForm, \"thread\", $$v)\n                              },\n                              expression: \"addForm.thread\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 8 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"循环次数\", prop: \"loop_count\" } },\n                        [\n                          _c(\"el-input-number\", {\n                            attrs: { min: 1, max: 5000, label: \"循环次数\" },\n                            on: { change: _vm.handleChange },\n                            model: {\n                              value: _vm.addForm.loop_count,\n                              callback: function($$v) {\n                                _vm.$set(_vm.addForm, \"loop_count\", $$v)\n                              },\n                              expression: \"addForm.loop_count\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 8 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"并发数\", prop: \"synchroniz\" } },\n                        [\n                          _c(\"el-input-number\", {\n                            attrs: { min: 0, max: 5000, label: \"循环次数\" },\n                            on: { change: _vm.handleChange },\n                            model: {\n                              value: _vm.addForm.synchroniz,\n                              callback: function($$v) {\n                                _vm.$set(_vm.addForm, \"synchroniz\", $$v)\n                              },\n                              expression: \"addForm.synchroniz\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                { attrs: { gutter: 24 } },\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"ramp\", prop: \"ramp\" } },\n                        [\n                          _c(\"el-input-number\", {\n                            attrs: { min: 0, max: 5000, label: \"循环次数\" },\n                            on: { change: _vm.handleChange },\n                            model: {\n                              value: _vm.addForm.ramp,\n                              callback: function($$v) {\n                                _vm.$set(_vm.addForm, \"ramp\", $$v)\n                              },\n                              expression: \"addForm.ramp\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 10 } },\n                    [\n                      _c(\n                        \"el-form-item\",\n                        { attrs: { label: \"dicom\", prop: \"switch\" } },\n                        [\n                          _c(\"el-switch\", {\n                            attrs: {\n                              \"active-color\": \"#13ce66\",\n                              \"inactive-color\": \"#ff4949\"\n                            },\n                            model: {\n                              value: _vm.addForm.switch,\n                              callback: function($$v) {\n                                _vm.$set(_vm.addForm, \"switch\", $$v)\n                              },\n                              expression: \"addForm.switch\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                [\n                  _c(\"el-divider\", [_vm._v(\"文件上传\")]),\n                  _c(\n                    \"el-upload\",\n                    {\n                      staticClass: \"upload-demo\",\n                      attrs: {\n                        drag: \"\",\n                        action: \"/api/stress/upload\",\n                        multiple: \"\"\n                      },\n                      model: {\n                        value: _vm.addForm.upload,\n                        callback: function($$v) {\n                          _vm.$set(_vm.addForm, \"upload\", $$v)\n                        },\n                        expression: \"addForm.upload\"\n                      }\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"el-icon-upload\" }),\n                      _c(\"div\", { staticClass: \"el-upload__text\" }, [\n                        _vm._v(\"将文件拖到此处，或\"),\n                        _c(\"em\", [_vm._v(\"点击上传\")])\n                      ]),\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"el-upload__tip\",\n                          attrs: { slot: \"tip\" },\n                          slot: \"tip\"\n                        },\n                        [_vm._v(\"只能上传jmx/.py文件\")]\n                      )\n                    ]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  nativeOn: {\n                    click: function($event) {\n                      _vm.addFormVisible = false\n                    }\n                  }\n                },\n                [_vm._v(\"取消\")]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\", loading: _vm.addLoading },\n                  nativeOn: {\n                    click: function($event) {\n                      return _vm.addSubmit($event)\n                    }\n                  }\n                },\n                [_vm._v(\"保存\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n\n//# sourceURL=webpack:///./src/components/stress/stressHome.vue?./node_modules/cache-loader/dist/cjs.js?%7B%22cacheDirectory%22:%22node_modules/.cache/vue-loader%22,%22cacheIdentifier%22:%224fd9a866-vue-loader-template%22%7D!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options");

/***/ }),

/***/ "./src/assets/img/fou.png":
/*!********************************!*\
  !*** ./src/assets/img/fou.png ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"static/img/fou.152067d2.png\";\n\n//# sourceURL=webpack:///./src/assets/img/fou.png?");

/***/ }),

/***/ "./src/assets/img/qiyong.png":
/*!***********************************!*\
  !*** ./src/assets/img/qiyong.png ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"static/img/qiyong.4a2dd4a1.png\";\n\n//# sourceURL=webpack:///./src/assets/img/qiyong.png?");

/***/ }),

/***/ "./src/components/stress/stressHome.vue":
/*!**********************************************!*\
  !*** ./src/components/stress/stressHome.vue ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _stressHome_vue_vue_type_template_id_62c9fde4___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stressHome.vue?vue&type=template&id=62c9fde4& */ \"./src/components/stress/stressHome.vue?vue&type=template&id=62c9fde4&\");\n/* harmony import */ var _stressHome_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stressHome.vue?vue&type=script&lang=js& */ \"./src/components/stress/stressHome.vue?vue&type=script&lang=js&\");\n/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"./node_modules/vue-loader/lib/runtime/componentNormalizer.js\");\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _stressHome_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _stressHome_vue_vue_type_template_id_62c9fde4___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _stressHome_vue_vue_type_template_id_62c9fde4___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"src/components/stress/stressHome.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);\n\n//# sourceURL=webpack:///./src/components/stress/stressHome.vue?");

/***/ }),

/***/ "./src/components/stress/stressHome.vue?vue&type=script&lang=js&":
/*!***********************************************************************!*\
  !*** ./src/components/stress/stressHome.vue?vue&type=script&lang=js& ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_stressHome_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/babel-loader/lib!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib??vue-loader-options!./stressHome.vue?vue&type=script&lang=js& */ \"./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/components/stress/stressHome.vue?vue&type=script&lang=js&\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_cache_loader_dist_cjs_js_ref_12_0_node_modules_babel_loader_lib_index_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_stressHome_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[\"default\"]); \n\n//# sourceURL=webpack:///./src/components/stress/stressHome.vue?");

/***/ }),

/***/ "./src/components/stress/stressHome.vue?vue&type=template&id=62c9fde4&":
/*!*****************************************************************************!*\
  !*** ./src/components/stress/stressHome.vue?vue&type=template&id=62c9fde4& ***!
  \*****************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_cache_vue_loader_cacheIdentifier_4fd9a866_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_stressHome_vue_vue_type_template_id_62c9fde4___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/.cache/vue-loader\",\"cacheIdentifier\":\"4fd9a866-vue-loader-template\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib??vue-loader-options!./stressHome.vue?vue&type=template&id=62c9fde4& */ \"./node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"4fd9a866-vue-loader-template\\\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/components/stress/stressHome.vue?vue&type=template&id=62c9fde4&\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_cache_vue_loader_cacheIdentifier_4fd9a866_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_stressHome_vue_vue_type_template_id_62c9fde4___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_cache_vue_loader_cacheIdentifier_4fd9a866_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_stressHome_vue_vue_type_template_id_62c9fde4___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n\n\n//# sourceURL=webpack:///./src/components/stress/stressHome.vue?");

/***/ })

}]);