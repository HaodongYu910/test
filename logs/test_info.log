[2020-07-21 09:56:28,125][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.109Z', 'endTime': '2020-07-21T01:56:28.116Z', 'duration': 7036270, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 131804, 'duration': 6879250}]}}}}]
[2020-07-21 09:56:28,166][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.147Z', 'endTime': '2020-07-21T01:56:28.154Z', 'duration': 7073153, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 126344, 'duration': 6923369}]}}}}]
[2020-07-21 09:56:28,206][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.188Z', 'endTime': '2020-07-21T01:56:28.195Z', 'duration': 7017289, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 132891, 'duration': 6859802}]}}}}]
[2020-07-21 09:56:28,243][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.228Z', 'endTime': '2020-07-21T01:56:28.235Z', 'duration': 7404360, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 370850, 'duration': 7007715}]}}}}]
[2020-07-21 09:56:28,281][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.265Z', 'endTime': '2020-07-21T01:56:28.272Z', 'duration': 7029896, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 128279, 'duration': 6873688}]}}}}]
[2020-07-21 09:56:28,318][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.302Z', 'endTime': '2020-07-21T01:56:28.309Z', 'duration': 6985067, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 124781, 'duration': 6839192}]}}}}]
[2020-07-21 09:56:28,354][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.339Z', 'endTime': '2020-07-21T01:56:28.346Z', 'duration': 7001220, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 130689, 'duration': 6848306}]}}}}]
[2020-07-21 09:56:28,389][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.373Z', 'endTime': '2020-07-21T01:56:28.380Z', 'duration': 7029040, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 126104, 'duration': 6878778}]}}}}]
[2020-07-21 09:56:28,423][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.409Z', 'endTime': '2020-07-21T01:56:28.416Z', 'duration': 7214724, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 124374, 'duration': 7073530}]}}}}]
[2020-07-21 09:56:28,459][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.443Z', 'endTime': '2020-07-21T01:56:28.450Z', 'duration': 7183000, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 109513, 'duration': 7056677}]}}}}]
[2020-07-21 09:56:28,495][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.479Z', 'endTime': '2020-07-21T01:56:28.487Z', 'duration': 7413910, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 112923, 'duration': 7285116}]}}}}]
[2020-07-21 09:56:28,531][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.514Z', 'endTime': '2020-07-21T01:56:28.521Z', 'duration': 6945260, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 133331, 'duration': 6795610}]}}}}]
[2020-07-21 09:56:28,566][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.551Z', 'endTime': '2020-07-21T01:56:28.558Z', 'duration': 6796984, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 112121, 'duration': 6671467}]}}}}]
[2020-07-21 09:56:28,607][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.585Z', 'endTime': '2020-07-21T01:56:28.592Z', 'duration': 6822135, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 105297, 'duration': 6702437}]}}}}]
[2020-07-21 09:56:28,649][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.630Z', 'endTime': '2020-07-21T01:56:28.637Z', 'duration': 7186926, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 117304, 'duration': 7055177}]}}}}]
[2020-07-21 09:56:28,689][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.672Z', 'endTime': '2020-07-21T01:56:28.679Z', 'duration': 7001260, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 130409, 'duration': 6856114}]}}}}]
[2020-07-21 09:56:28,727][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.710Z', 'endTime': '2020-07-21T01:56:28.717Z', 'duration': 7174788, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 127743, 'duration': 7029652}]}}}}]
[2020-07-21 09:56:28,772][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.752Z', 'endTime': '2020-07-21T01:56:28.763Z', 'duration': 11178384, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 138354, 'duration': 11021437}]}}}}]
[2020-07-21 09:56:28,814][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.795Z', 'endTime': '2020-07-21T01:56:28.805Z', 'duration': 9565411, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 118597, 'duration': 9431763}]}}}}]
[2020-07-21 09:56:28,862][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.840Z', 'endTime': '2020-07-21T01:56:28.851Z', 'duration': 11465172, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 163023, 'duration': 11286276}]}}}}]
[2020-07-21 09:56:28,904][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.885Z', 'endTime': '2020-07-21T01:56:28.895Z', 'duration': 10195300, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 117934, 'duration': 10056426}]}}}}]
[2020-07-21 09:56:28,949][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.929Z', 'endTime': '2020-07-21T01:56:28.939Z', 'duration': 9743930, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 115492, 'duration': 9611325}]}}}}]
[2020-07-21 09:56:28,994][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:28.973Z', 'endTime': '2020-07-21T01:56:28.982Z', 'duration': 9068576, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 116759, 'duration': 8938054}]}}}}]
[2020-07-21 09:56:29,033][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:29.018Z', 'endTime': '2020-07-21T01:56:29.026Z', 'duration': 8134906, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 113981, 'duration': 8006677}]}}}}]
[2020-07-21 09:56:29,073][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:29.057Z', 'endTime': '2020-07-21T01:56:29.065Z', 'duration': 7730321, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 112243, 'duration': 7600028}]}}}}]
[2020-07-21 09:56:29,109][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:29.092Z', 'endTime': '2020-07-21T01:56:29.100Z', 'duration': 7419940, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 172789, 'duration': 7221671}]}}}}]
[2020-07-21 09:56:29,147][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:29.131Z', 'endTime': '2020-07-21T01:56:29.138Z', 'duration': 7074275, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 171953, 'duration': 6880476}]}}}}]
[2020-07-21 09:56:29,393][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:29.171Z', 'endTime': '2020-07-21T01:56:29.178Z', 'duration': 7366196, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 145014, 'duration': 7204219}]}}}}]
[2020-07-21 09:56:29,466][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:29.436Z', 'endTime': '2020-07-21T01:56:29.453Z', 'duration': 16619510, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 238897, 'duration': 16347598}]}}}}]
[2020-07-21 09:56:29,527][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:29.503Z', 'endTime': '2020-07-21T01:56:29.516Z', 'duration': 12954116, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 205227, 'duration': 12720112}]}}}}]
[2020-07-21 09:56:29,579][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:29.557Z', 'endTime': '2020-07-21T01:56:29.569Z', 'duration': 12315714, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 197089, 'duration': 12093338}]}}}}]
[2020-07-21 09:56:29,636][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:29.612Z', 'endTime': '2020-07-21T01:56:29.623Z', 'duration': 11399871, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 169185, 'duration': 11209230}]}}}}]
[2020-07-21 09:56:29,758][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:29.738Z', 'endTime': '2020-07-21T01:56:29.750Z', 'duration': 12089091, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 244334, 'duration': 11814744}]}}}}]
[2020-07-21 09:56:29,811][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:29.791Z', 'endTime': '2020-07-21T01:56:29.801Z', 'duration': 10256877, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 218893, 'duration': 9991758}]}}}}]
[2020-07-21 09:56:29,858][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:29.841Z', 'endTime': '2020-07-21T01:56:29.850Z', 'duration': 9844045, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 199378, 'duration': 9619055}]}}}}]
[2020-07-21 09:56:29,905][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:29.886Z', 'endTime': '2020-07-21T01:56:29.895Z', 'duration': 9293968, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 181491, 'duration': 9090387}]}}}}]
[2020-07-21 09:56:29,960][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:29.941Z', 'endTime': '2020-07-21T01:56:29.951Z', 'duration': 10590228, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 185049, 'duration': 10383441}]}}}}]
[2020-07-21 09:56:30,005][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:29.988Z', 'endTime': '2020-07-21T01:56:29.996Z', 'duration': 8153281, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 158612, 'duration': 7976113}]}}}}]
[2020-07-21 09:56:30,046][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:30.030Z', 'endTime': '2020-07-21T01:56:30.038Z', 'duration': 7828034, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 192104, 'duration': 7613195}]}}}}]
[2020-07-21 09:56:30,292][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:30.070Z', 'endTime': '2020-07-21T01:56:30.077Z', 'duration': 7523224, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 149512, 'duration': 7355421}]}}}}]
[2020-07-21 09:56:30,364][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:30.339Z', 'endTime': '2020-07-21T01:56:30.353Z', 'duration': 13223161, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 243083, 'duration': 12946336}]}}}}]
[2020-07-21 09:56:30,419][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:30.399Z', 'endTime': '2020-07-21T01:56:30.410Z', 'duration': 10642416, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 186839, 'duration': 10430463}]}}}}]
[2020-07-21 09:56:30,475][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:30.452Z', 'endTime': '2020-07-21T01:56:30.464Z', 'duration': 11514350, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 275614, 'duration': 11211757}]}}}}]
[2020-07-21 09:56:30,526][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:30.510Z', 'endTime': '2020-07-21T01:56:30.519Z', 'duration': 9445674, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 215090, 'duration': 9203490}]}}}}]
[2020-07-21 09:56:30,581][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:30.564Z', 'endTime': '2020-07-21T01:56:30.572Z', 'duration': 8692500, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 231152, 'duration': 8432911}]}}}}]
[2020-07-21 09:56:30,629][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:30.612Z', 'endTime': '2020-07-21T01:56:30.619Z', 'duration': 7844563, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 197339, 'duration': 7620318}]}}}}]
[2020-07-21 09:56:30,715][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:30.654Z', 'endTime': '2020-07-21T01:56:30.662Z', 'duration': 7592728, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 185516, 'duration': 7384312}]}}}}]
[2020-07-21 09:56:30,768][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:30.743Z', 'endTime': '2020-07-21T01:56:30.761Z', 'duration': 18435015, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 170047, 'duration': 18243353}]}}}}]
[2020-07-21 09:56:30,820][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:30.796Z', 'endTime': '2020-07-21T01:56:30.812Z', 'duration': 15350763, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 209402, 'duration': 15120019}]}}}}]
[2020-07-21 09:56:30,859][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:30.839Z', 'endTime': '2020-07-21T01:56:30.852Z', 'duration': 12112386, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 172754, 'duration': 11920102}]}}}}]
[2020-07-21 09:56:30,903][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:30.879Z', 'endTime': '2020-07-21T01:56:30.891Z', 'duration': 12377233, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 135085, 'duration': 12221139}]}}}}]
[2020-07-21 09:56:30,949][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:30.931Z', 'endTime': '2020-07-21T01:56:30.942Z', 'duration': 10907178, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 147666, 'duration': 10741401}]}}}}]
[2020-07-21 09:56:30,992][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:30.970Z', 'endTime': '2020-07-21T01:56:30.981Z', 'duration': 10635763, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 139908, 'duration': 10477941}]}}}}]
[2020-07-21 09:56:31,039][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:31.019Z', 'endTime': '2020-07-21T01:56:31.030Z', 'duration': 10763906, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 168293, 'duration': 10576311}]}}}}]
[2020-07-21 09:56:31,079][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:31.062Z', 'endTime': '2020-07-21T01:56:31.070Z', 'duration': 7594875, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 149200, 'duration': 7428058}]}}}}]
[2020-07-21 09:56:31,120][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:31.102Z', 'endTime': '2020-07-21T01:56:31.110Z', 'duration': 8292593, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 145500, 'duration': 8130177}]}}}}]
[2020-07-21 09:56:31,160][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:31.146Z', 'endTime': '2020-07-21T01:56:31.154Z', 'duration': 7683395, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 198293, 'duration': 7457345}]}}}}]
[2020-07-21 09:56:31,204][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:31.181Z', 'endTime': '2020-07-21T01:56:31.189Z', 'duration': 7467330, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 155932, 'duration': 7291258}]}}}}]
[2020-07-21 09:56:31,258][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:31.234Z', 'endTime': '2020-07-21T01:56:31.248Z', 'duration': 13200851, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 153048, 'duration': 13029363}]}}}}]
[2020-07-21 09:56:31,317][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:31.289Z', 'endTime': '2020-07-21T01:56:31.300Z', 'duration': 10468969, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 161635, 'duration': 10287191}]}}}}]
[2020-07-21 09:56:31,362][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:31.342Z', 'endTime': '2020-07-21T01:56:31.352Z', 'duration': 9630942, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 137740, 'duration': 9475687}]}}}}]
[2020-07-21 09:56:31,406][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:31.389Z', 'endTime': '2020-07-21T01:56:31.398Z', 'duration': 9072173, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 128564, 'duration': 8927490}]}}}}]
[2020-07-21 09:56:31,455][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:31.434Z', 'endTime': '2020-07-21T01:56:31.442Z', 'duration': 7703851, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 139551, 'duration': 7546486}]}}}}]
[2020-07-21 09:56:31,516][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:31.488Z', 'endTime': '2020-07-21T01:56:31.501Z', 'duration': 13692623, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 157462, 'duration': 13515507}]}}}}]
[2020-07-21 09:56:31,572][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:31.548Z', 'endTime': '2020-07-21T01:56:31.561Z', 'duration': 13044379, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 161474, 'duration': 12850843}]}}}}]
[2020-07-21 09:56:31,618][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:31.598Z', 'endTime': '2020-07-21T01:56:31.610Z', 'duration': 11386229, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 222916, 'duration': 11139656}]}}}}]
[2020-07-21 09:56:31,666][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:31.644Z', 'endTime': '2020-07-21T01:56:31.655Z', 'duration': 10666629, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 165619, 'duration': 10466390}]}}}}]
[2020-07-21 09:56:31,715][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:31.696Z', 'endTime': '2020-07-21T01:56:31.706Z', 'duration': 9966197, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 165825, 'duration': 9780372}]}}}}]
[2020-07-21 09:56:31,765][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:31.743Z', 'endTime': '2020-07-21T01:56:31.756Z', 'duration': 12423713, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 161573, 'duration': 12243402}]}}}}]
[2020-07-21 09:56:31,815][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:31.793Z', 'endTime': '2020-07-21T01:56:31.803Z', 'duration': 9960752, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 137988, 'duration': 9804818}]}}}}]
[2020-07-21 09:56:31,859][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:31.842Z', 'endTime': '2020-07-21T01:56:31.852Z', 'duration': 9703098, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 160950, 'duration': 9520024}]}}}}]
[2020-07-21 09:56:31,898][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:31.881Z', 'endTime': '2020-07-21T01:56:31.890Z', 'duration': 8758976, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 150615, 'duration': 8591085}]}}}}]
[2020-07-21 09:56:31,940][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:31.922Z', 'endTime': '2020-07-21T01:56:31.930Z', 'duration': 8323940, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 148958, 'duration': 8156937}]}}}}]
[2020-07-21 09:56:31,983][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:31.967Z', 'endTime': '2020-07-21T01:56:31.975Z', 'duration': 7652572, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 142607, 'duration': 7492002}]}}}}]
[2020-07-21 09:56:32,034][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.018Z', 'endTime': '2020-07-21T01:56:32.026Z', 'duration': 8044966, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 138866, 'duration': 7888638}]}}}}]
[2020-07-21 09:56:32,090][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.073Z', 'endTime': '2020-07-21T01:56:32.080Z', 'duration': 7809390, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 213168, 'duration': 7570954}]}}}}]
[2020-07-21 09:56:32,131][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.114Z', 'endTime': '2020-07-21T01:56:32.122Z', 'duration': 7482616, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 173894, 'duration': 7286990}]}}}}]
[2020-07-21 09:56:32,184][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.162Z', 'endTime': '2020-07-21T01:56:32.175Z', 'duration': 12793703, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 3307469, 'duration': 9454440}]}}}}]
[2020-07-21 09:56:32,224][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.209Z', 'endTime': '2020-07-21T01:56:32.216Z', 'duration': 7735323, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 184369, 'duration': 7526543}]}}}}]
[2020-07-21 09:56:32,259][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.244Z', 'endTime': '2020-07-21T01:56:32.252Z', 'duration': 7612533, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 169324, 'duration': 7420997}]}}}}]
[2020-07-21 09:56:32,303][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.281Z', 'endTime': '2020-07-21T01:56:32.289Z', 'duration': 7410125, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 153402, 'duration': 7238929}]}}}}]
[2020-07-21 09:56:32,348][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.329Z', 'endTime': '2020-07-21T01:56:32.337Z', 'duration': 8614181, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 173350, 'duration': 8421999}]}}}}]
[2020-07-21 09:56:32,385][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.370Z', 'endTime': '2020-07-21T01:56:32.378Z', 'duration': 7513282, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 191225, 'duration': 7303294}]}}}}]
[2020-07-21 09:56:32,431][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.413Z', 'endTime': '2020-07-21T01:56:32.421Z', 'duration': 7505568, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 166394, 'duration': 7319046}]}}}}]
[2020-07-21 09:56:32,473][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.458Z', 'endTime': '2020-07-21T01:56:32.466Z', 'duration': 7613360, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 152971, 'duration': 7443180}]}}}}]
[2020-07-21 09:56:32,509][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.494Z', 'endTime': '2020-07-21T01:56:32.502Z', 'duration': 8217940, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 157306, 'duration': 8042118}]}}}}]
[2020-07-21 09:56:32,551][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.533Z', 'endTime': '2020-07-21T01:56:32.542Z', 'duration': 9438506, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 147663, 'duration': 9265594}]}}}}]
[2020-07-21 09:56:32,592][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.574Z', 'endTime': '2020-07-21T01:56:32.582Z', 'duration': 8304733, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 157943, 'duration': 8127554}]}}}}]
[2020-07-21 09:56:32,630][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.613Z', 'endTime': '2020-07-21T01:56:32.623Z', 'duration': 9056654, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 1140112, 'duration': 7898960}]}}}}]
[2020-07-21 09:56:32,674][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.655Z', 'endTime': '2020-07-21T01:56:32.662Z', 'duration': 7380325, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 132766, 'duration': 7230298}]}}}}]
[2020-07-21 09:56:32,711][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.695Z', 'endTime': '2020-07-21T01:56:32.703Z', 'duration': 7904599, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 152502, 'duration': 7733832}]}}}}]
[2020-07-21 09:56:32,747][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.730Z', 'endTime': '2020-07-21T01:56:32.738Z', 'duration': 7972299, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 125111, 'duration': 7832231}]}}}}]
[2020-07-21 09:56:32,791][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.774Z', 'endTime': '2020-07-21T01:56:32.782Z', 'duration': 7695693, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 154328, 'duration': 7523596}]}}}}]
[2020-07-21 09:56:32,833][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.816Z', 'endTime': '2020-07-21T01:56:32.824Z', 'duration': 7374478, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 124498, 'duration': 7233092}]}}}}]
[2020-07-21 09:56:32,874][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.856Z', 'endTime': '2020-07-21T01:56:32.864Z', 'duration': 7392514, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 134940, 'duration': 7240977}]}}}}]
[2020-07-21 09:56:32,912][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.894Z', 'endTime': '2020-07-21T01:56:32.901Z', 'duration': 7317887, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 116552, 'duration': 7185152}]}}}}]
[2020-07-21 09:56:32,952][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.936Z', 'endTime': '2020-07-21T01:56:32.943Z', 'duration': 7415875, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 131215, 'duration': 7268187}]}}}}]
[2020-07-21 09:56:32,988][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:32.970Z', 'endTime': '2020-07-21T01:56:32.978Z', 'duration': 7829698, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 357214, 'duration': 7456043}]}}}}]
[2020-07-21 09:56:33,028][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:33.011Z', 'endTime': '2020-07-21T01:56:33.019Z', 'duration': 7628407, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 155866, 'duration': 7433801}]}}}}]
[2020-07-21 09:56:33,065][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:33.049Z', 'endTime': '2020-07-21T01:56:33.057Z', 'duration': 7961986, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 139455, 'duration': 7791357}]}}}}]
[2020-07-21 09:56:33,102][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:33.087Z', 'endTime': '2020-07-21T01:56:33.094Z', 'duration': 7468116, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 143875, 'duration': 7306077}]}}}}]
[2020-07-21 09:56:33,141][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:33.125Z', 'endTime': '2020-07-21T01:56:33.133Z', 'duration': 7459137, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 152223, 'duration': 7287825}]}}}}]
[2020-07-21 09:56:33,178][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:33.162Z', 'endTime': '2020-07-21T01:56:33.170Z', 'duration': 8202279, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 151056, 'duration': 8033716}]}}}}]
[2020-07-21 09:56:33,215][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:33.199Z', 'endTime': '2020-07-21T01:56:33.207Z', 'duration': 7675542, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 153122, 'duration': 7505446}]}}}}]
[2020-07-21 09:56:33,254][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:33.237Z', 'endTime': '2020-07-21T01:56:33.244Z', 'duration': 7290596, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 113308, 'duration': 7161002}]}}}}]
[2020-07-21 09:56:33,291][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:33.276Z', 'endTime': '2020-07-21T01:56:33.283Z', 'duration': 7412606, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 127613, 'duration': 7261592}]}}}}]
[2020-07-21 09:56:33,331][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:33.312Z', 'endTime': '2020-07-21T01:56:33.321Z', 'duration': 8860086, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 132017, 'duration': 8692342}]}}}}]
[2020-07-21 09:56:33,368][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:33.351Z', 'endTime': '2020-07-21T01:56:33.358Z', 'duration': 7393168, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 137709, 'duration': 7239290}]}}}}]
[2020-07-21 09:56:33,405][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:33.389Z', 'endTime': '2020-07-21T01:56:33.396Z', 'duration': 7308314, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 131652, 'duration': 7160968}]}}}}]
[2020-07-21 09:56:33,440][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:33.425Z', 'endTime': '2020-07-21T01:56:33.433Z', 'duration': 7333313, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 123552, 'duration': 7193568}]}}}}]
[2020-07-21 09:56:33,476][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:33.460Z', 'endTime': '2020-07-21T01:56:33.468Z', 'duration': 7444607, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 147027, 'duration': 7277958}]}}}}]
[2020-07-21 09:56:33,511][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:33.496Z', 'endTime': '2020-07-21T01:56:33.504Z', 'duration': 7808998, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 161693, 'duration': 7628670}]}}}}]
[2020-07-21 09:56:33,561][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:33.544Z', 'endTime': '2020-07-21T01:56:33.553Z', 'duration': 9065877, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 158213, 'duration': 8878136}]}}}}]
[2020-07-21 09:56:33,598][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:33.582Z', 'endTime': '2020-07-21T01:56:33.589Z', 'duration': 7630070, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 200521, 'duration': 7406231}]}}}}]
[2020-07-21 09:56:33,636][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:33.620Z', 'endTime': '2020-07-21T01:56:33.627Z', 'duration': 7652818, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 190841, 'duration': 7437913}]}}}}]
[2020-07-21 09:56:33,669][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:33.653Z', 'endTime': '2020-07-21T01:56:33.660Z', 'duration': 7516399, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 191943, 'duration': 7303540}]}}}}]
[2020-07-21 09:56:33,713][Thread-7:123145363378176][task_id:root][graphql_utils.py:37][INFO][{'data': {'studyViewFlexible': []}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-07-21T01:56:33.695Z', 'endTime': '2020-07-21T01:56:33.702Z', 'duration': 7607850, 'execution': {'resolvers': [{'path': ['studyViewFlexible'], 'parentType': 'Query', 'fieldName': 'studyViewFlexible', 'returnType': '[StudyView]', 'startOffset': 186603, 'duration': 7398748}]}}}}]
[2020-07-21 09:56:34,747][Thread-7:123145363378176][task_id:root][graphql_prediction.py:59][ERROR][Query failed: Expecting value: line 1 column 1 (char 0)]
[2020-07-21 12:10:11,185][Dummy-6:123145334808576][task_id:root][regexUtil.py:73][ERROR][Query failed: Invalid URL 'https:///oauth/login': No host supplied]
[2020-07-21 12:10:11,185][Dummy-6:123145334808576][task_id:root][delete_patients.py:11][ERROR][failed to find patirents: error['InvalidURL' object has no attribute 'get']]
[2020-07-21 12:11:00,376][Thread-7:123145514070016][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:11:05,433][Thread-9:123145520398336][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:11:10,506][Thread-11:123145514070016][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:11:15,576][Thread-13:123145519861760][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:11:20,629][Thread-15:123145514070016][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:16:29,887][Thread-48:123145424785408][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:16:34,946][Thread-50:123145430577152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:16:40,028][Thread-52:123145424785408][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:16:45,092][Thread-54:123145430577152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:17:49,903][Thread-12:123145340334080][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:18:25,018][Thread-26:123145346125824][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:18:30,060][Thread-28:123145340334080][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:18:35,105][Thread-30:123145346125824][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:18:50,174][Thread-36:123145340334080][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:19:50,630][Thread-9:123145425383424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:19:55,699][Thread-11:123145431711744][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:20:00,755][Thread-13:123145425383424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:20:05,804][Thread-15:123145431175168][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:20:10,873][Thread-17:123145425383424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:20:15,958][Thread-19:123145431175168][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:20:26,045][Thread-23:123145431175168][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:20:31,108][Thread-25:123145425383424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:20:36,179][Thread-27:123145431175168][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:20:41,247][Thread-29:123145425383424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:20:46,314][Thread-31:123145431175168][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:20:51,396][Thread-33:123145425383424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:20:56,474][Thread-35:123145431175168][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:22:01,656][Thread-61:123145425383424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:22:21,773][Thread-69:123145425383424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:22:26,828][Thread-71:123145431175168][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:22:41,909][Thread-77:123145425383424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:22:59,826][Thread-7:123145420128256][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:22:59,826][Thread-7:123145420128256][task_id:root][delete_patients.py:28][ERROR][failed to delete patientv [7085b7fb-92379afe-958b56a9-10f07a20-e0eefb6d]: error[HTTPSConnectionPool(host='192.168.1.122', port=443): Max retries exceeded with url: /orthanc/patients/7085b7fb-92379afe-958b56a9-10f07a20-e0eefb6d (Caused by SSLError(SSLCertVerificationError("hostname '192.168.1.122' doesn't match either of '*.skymed.ai', 'skymed.ai'")))]]
[2020-07-21 12:23:01,998][Thread-85:123145425383424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:53:50,383][Thread-114:123145528528896][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:54:25,523][Thread-171:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:54:30,596][Thread-193:123145528528896][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:54:35,663][Thread-195:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:54:40,743][Thread-197:123145528528896][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:54:45,794][Thread-199:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:54:50,860][Thread-201:123145528528896][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:54:55,906][Thread-203:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:55:00,958][Thread-205:123145528528896][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:55:11,011][Thread-209:123145528528896][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:55:16,088][Thread-211:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:55:21,149][Thread-213:123145528528896][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:55:26,217][Thread-215:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:55:36,284][Thread-219:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:55:46,345][Thread-223:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:55:51,390][Thread-225:123145528528896][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:56:01,635][Thread-229:123145528528896][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:56:16,688][Thread-235:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:57:16,861][Thread-259:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:57:36,969][Thread-267:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:57:42,011][Thread-269:123145528528896][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:57:47,066][Thread-271:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:57:52,123][Thread-273:123145528528896][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:57:57,194][Thread-275:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:58:07,294][Thread-279:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:58:12,369][Thread-281:123145528528896][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:58:32,460][Thread-289:123145528528896][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:58:37,536][Thread-291:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:58:57,614][Thread-299:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:59:32,731][Thread-313:123145528528896][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:59:37,775][Thread-315:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:59:42,840][Thread-317:123145528528896][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:59:47,916][Thread-319:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 12:59:52,988][Thread-321:123145528528896][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 13:00:03,078][Thread-325:123145528528896][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 13:00:08,157][Thread-327:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 13:00:23,233][Thread-333:123145528528896][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 13:00:28,303][Thread-335:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 13:00:33,373][Thread-337:123145528528896][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 13:00:38,447][Thread-339:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 13:00:48,522][Thread-343:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 13:01:48,699][Thread-367:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 13:01:53,760][Thread-369:123145528528896][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 13:02:03,834][Thread-373:123145528528896][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 13:02:18,926][Thread-379:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 13:02:49,043][Thread-391:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 13:02:54,104][Thread-393:123145528528896][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 13:02:59,171][Thread-395:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 13:03:04,240][Thread-7:123145517481984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 13:03:04,241][Thread-7:123145517481984][task_id:root][delete_patients.py:28][ERROR][failed to delete patientv [a7612bed-497eba86-80a54173-2b0b21d3-84320ca8]: error[HTTPSConnectionPool(host='192.168.1.122', port=443): Max retries exceeded with url: /orthanc/patients/a7612bed-497eba86-80a54173-2b0b21d3-84320ca8 (Caused by SSLError(SSLCertVerificationError("hostname '192.168.1.122' doesn't match either of '*.skymed.ai', 'skymed.ai'")))]]
[2020-07-21 13:03:09,304][Thread-399:123145522737152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('commonName', 'Charles Proxy CA (3 Jun 2020, yindeMacBook-Pro.local)'),), (('organizationalUnitName', 'https://charlesproxy.com/ssl'),), (('organizationName', 'XK72 Ltd'),), (('localityName', 'Auckland'),), (('stateOrProvinceName', 'Auckland'),), (('countryName', 'NZ'),)), 'version': 3, 'serialNumber': '017277F1709A', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai'))}]
[2020-07-21 18:31:01,847][Thread-9:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:31:06,922][Thread-11:123145450946560][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:31:11,996][Thread-13:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:31:17,084][Thread-15:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:31:27,159][Thread-19:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:31:32,236][Thread-21:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:31:37,299][Thread-23:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:31:42,375][Thread-25:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:31:47,456][Thread-27:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:31:52,549][Thread-29:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:31:57,619][Thread-31:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:32:17,717][Thread-39:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:32:22,784][Thread-41:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:32:27,858][Thread-43:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:32:32,931][Thread-45:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:32:38,005][Thread-47:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:32:43,078][Thread-49:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:33:18,229][Thread-63:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:34:03,828][Thread-81:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:34:08,919][Thread-83:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:34:49,238][Thread-99:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:34:54,470][Thread-101:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:34:59,724][Thread-103:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:35:04,967][Thread-105:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:35:10,215][Thread-107:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:35:30,321][Thread-115:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:35:35,368][Thread-117:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:35:40,603][Thread-119:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:35:45,864][Thread-121:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:35:51,104][Thread-123:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:35:56,337][Thread-125:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:36:11,477][Thread-131:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:36:16,729][Thread-133:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:36:21,958][Thread-135:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:36:27,126][Thread-137:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:36:32,182][Thread-139:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:36:37,282][Thread-141:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:36:57,494][Thread-149:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:37:02,555][Thread-151:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:37:07,657][Thread-153:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:37:12,881][Thread-155:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:37:18,101][Thread-157:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:37:23,335][Thread-159:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:37:53,520][Thread-171:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:38:38,877][Thread-189:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:38:43,934][Thread-191:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:38:49,017][Thread-193:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:39:19,206][Thread-205:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:39:24,283][Thread-207:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:39:29,340][Thread-209:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:39:34,410][Thread-211:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:39:39,479][Thread-213:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:39:59,592][Thread-221:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:40:04,772][Thread-223:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:40:09,849][Thread-225:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:40:14,924][Thread-227:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:40:20,004][Thread-229:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:40:25,170][Thread-231:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:40:30,231][Thread-233:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:40:50,338][Thread-241:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:40:55,421][Thread-243:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:41:00,502][Thread-245:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:41:05,563][Thread-247:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:41:10,632][Thread-249:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:41:15,725][Thread-251:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:41:30,833][Thread-257:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:41:35,902][Thread-259:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:41:45,973][Thread-263:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:41:56,039][Thread-267:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:42:21,168][Thread-277:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:42:26,243][Thread-279:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:43:21,422][Thread-301:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:43:46,557][Thread-311:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:43:51,632][Thread-313:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:44:01,733][Thread-317:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:44:06,798][Thread-319:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:44:11,872][Thread-321:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:44:16,949][Thread-323:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:44:22,027][Thread-325:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:44:27,110][Thread-327:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:44:32,174][Thread-329:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:44:37,242][Thread-331:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:44:42,313][Thread-333:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:44:47,397][Thread-335:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:45:02,496][Thread-341:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:45:07,570][Thread-343:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:45:12,637][Thread-345:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:45:17,701][Thread-347:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:45:22,782][Thread-349:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:45:27,853][Thread-351:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:45:32,928][Thread-353:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:45:38,011][Thread-355:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:46:03,112][Thread-365:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:46:08,189][Thread-367:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:46:13,251][Thread-369:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:46:18,312][Thread-371:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:46:23,409][Thread-373:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:46:28,479][Thread-375:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:46:33,528][Thread-377:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:46:48,630][Thread-383:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:46:53,699][Thread-385:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:46:58,781][Thread-387:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:47:03,871][Thread-389:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:47:08,945][Thread-391:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:47:14,015][Thread-393:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:47:29,110][Thread-399:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:47:34,192][Thread-401:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:47:44,296][Thread-405:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:47:49,362][Thread-407:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:48:49,549][Thread-431:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:49:04,659][Thread-437:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:49:09,728][Thread-439:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:49:29,860][Thread-447:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:49:34,914][Thread-449:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:49:39,991][Thread-451:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:49:45,070][Thread-453:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:49:50,132][Thread-455:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:49:55,192][Thread-457:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:50:10,285][Thread-463:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:50:15,357][Thread-465:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:50:20,424][Thread-467:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:50:25,497][Thread-469:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:50:30,570][Thread-471:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:50:35,637][Thread-473:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:50:40,710][Thread-475:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:50:55,805][Thread-481:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:51:00,890][Thread-483:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:51:05,977][Thread-485:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:51:16,075][Thread-489:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:51:21,158][Thread-491:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:51:26,250][Thread-493:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:51:51,417][Thread-503:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:51:56,496][Thread-505:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:52:51,716][Thread-527:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:53:16,854][Thread-537:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:53:21,925][Thread-539:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:53:32,017][Thread-543:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:53:37,091][Thread-545:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:53:42,176][Thread-547:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:54:02,286][Thread-555:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:54:07,365][Thread-557:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:54:12,454][Thread-559:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:54:17,534][Thread-561:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:54:22,621][Thread-563:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:54:27,692][Thread-565:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:54:32,776][Thread-567:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:54:47,869][Thread-573:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:54:52,941][Thread-575:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:55:03,067][Thread-579:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:55:08,159][Thread-581:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:55:13,238][Thread-583:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:55:18,329][Thread-585:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:55:33,487][Thread-591:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:55:38,568][Thread-593:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:55:43,643][Thread-595:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:55:48,746][Thread-597:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:55:58,858][Thread-601:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:56:23,987][Thread-611:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:56:29,069][Thread-613:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:56:44,172][Thread-619:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:56:49,279][Thread-621:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:57:19,407][Thread-633:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:57:24,513][Thread-635:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:57:29,601][Thread-637:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:58:29,821][Thread-661:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:59:00,009][Thread-673:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:59:10,116][Thread-677:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:59:20,217][Thread-681:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:59:25,321][Thread-683:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:59:35,413][Thread-687:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:59:40,494][Thread-689:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:59:45,580][Thread-691:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:59:50,670][Thread-693:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 18:59:55,767][Thread-695:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:00:00,834][Thread-697:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:00:15,934][Thread-703:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:00:21,042][Thread-705:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:00:26,134][Thread-707:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:00:31,221][Thread-709:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:00:36,302][Thread-711:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:00:41,402][Thread-713:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:01:01,520][Thread-721:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:01:06,615][Thread-723:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:01:11,707][Thread-725:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:01:16,794][Thread-727:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:01:26,877][Thread-731:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:01:41,983][Thread-737:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:01:52,072][Thread-741:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:02:02,166][Thread-745:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:03:12,411][Thread-773:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:03:17,492][Thread-775:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:04:02,690][Thread-793:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:04:12,775][Thread-797:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:04:17,848][Thread-799:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:04:22,924][Thread-801:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:04:28,030][Thread-803:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:04:43,130][Thread-809:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:04:48,196][Thread-811:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:04:53,304][Thread-813:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:04:58,385][Thread-815:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:05:03,458][Thread-817:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:05:08,560][Thread-819:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:05:13,662][Thread-821:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:05:18,729][Thread-823:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:05:28,823][Thread-827:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:05:33,880][Thread-829:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:05:38,961][Thread-831:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:05:44,031][Thread-7:123145439363072][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-21 19:05:44,033][Thread-7:123145439363072][task_id:root][delete_patients.py:29][ERROR][failed to delete patientv [2c236c63-786337be-b5dc7946-f0237ac9-ec4f1b5b]: error[HTTPSConnectionPool(host='192.168.1.122', port=443): Max retries exceeded with url: /orthanc/patients/2c236c63-786337be-b5dc7946-f0237ac9-ec4f1b5b (Caused by SSLError(SSLCertVerificationError("hostname '192.168.1.122' doesn't match either of '*.skymed.ai', 'skymed.ai'")))]]
[2020-07-21 19:05:49,094][Thread-835:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:36:41,719][Thread-21691:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:36:41,812][Thread-7:123145439363072][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:36:41,814][Thread-7:123145439363072][task_id:root][delete_patients.py:29][ERROR][failed to delete patientv [d07633e5-c22667de-53977b92-1fc8669e-a10573f9]: error[HTTPSConnectionPool(host='192.168.1.122', port=443): Max retries exceeded with url: /orthanc/patients/d07633e5-c22667de-53977b92-1fc8669e-a10573f9 (Caused by SSLError(SSLCertVerificationError("hostname '192.168.1.122' doesn't match either of '*.skymed.ai', 'skymed.ai'")))]]
[2020-07-22 09:36:46,819][Thread-21695:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:44:35,744][Thread-22071:123145455665152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:44:41,013][Thread-22077:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:44:46,168][Thread-22083:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:44:51,415][Thread-22089:123145460920320][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:44:56,663][Thread-22095:123145455665152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:45:06,954][Thread-22107:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:45:12,247][Thread-22113:123145460920320][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:46:17,667][Thread-22191:123145455665152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:46:22,961][Thread-22199:123145460920320][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:46:43,282][Thread-22223:123145460920320][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:47:08,574][Thread-22253:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:47:28,878][Thread-22277:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:48:04,248][Thread-22319:123145460920320][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:48:14,544][Thread-22331:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:48:19,835][Thread-22337:123145455665152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:48:25,130][Thread-22343:123145460920320][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:48:35,411][Thread-22355:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:48:40,715][Thread-22361:123145455665152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:49:06,088][Thread-22393:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:49:31,440][Thread-22423:123145460920320][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:50:11,792][Thread-22471:123145460920320][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 09:52:07,595][Thread-7:123145439363072][task_id:root][delete_patients.py:29][ERROR][failed to delete patientv [2e4ad683-8d6a7835-942ad771-523f56ac-c37257bd]: error[HTTPSConnectionPool(host='192.168.1.122', port=443): Max retries exceeded with url: /orthanc/patients/2e4ad683-8d6a7835-942ad771-523f56ac-c37257bd (Caused by ReadTimeoutError("HTTPSConnectionPool(host='192.168.1.122', port=443): Read timed out. (read timeout=120)"))]]
[2020-07-22 11:57:31,426][Thread-31625:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 11:58:41,667][Thread-31737:123145455665152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:00:26,972][Thread-31905:123145460920320][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:02:07,210][Thread-32065:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:03:07,414][Thread-32161:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:03:12,477][Thread-32169:123145460920320][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:03:17,549][Thread-32177:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:03:27,667][Thread-32193:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:03:37,766][Thread-32209:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:03:47,863][Thread-32225:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:03:52,953][Thread-32233:123145460920320][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:04:08,063][Thread-32257:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:04:23,162][Thread-32281:123145455665152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:04:33,308][Thread-32297:123145460920320][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:04:38,507][Thread-32305:123145455665152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:04:43,805][Thread-32313:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:04:53,919][Thread-32329:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:04:59,011][Thread-32337:123145460920320][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:05:04,332][Thread-32345:123145455665152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:05:09,496][Thread-32353:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:05:29,625][Thread-32385:123145455665152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:05:49,727][Thread-32417:123145460920320][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:06:04,816][Thread-32441:123145466175488][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:06:09,895][Thread-32449:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:06:14,971][Thread-32457:123145460920320][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:06:25,050][Thread-32473:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:06:40,480][Thread-32499:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:07:30,891][Thread-32581:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:08:11,064][Thread-32645:123145455665152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:08:16,135][Thread-32655:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:08:21,692][Thread-32663:123145460920320][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:08:26,777][Thread-32671:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:08:31,870][Thread-32679:123145466175488][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:09:07,063][Thread-32735:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:09:12,150][Thread-32743:123145460920320][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:09:17,243][Thread-32751:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:09:27,361][Thread-32767:123145455665152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:09:32,482][Thread-32775:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:09:57,581][Thread-32815:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:10:02,678][Thread-32823:123145460920320][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:10:07,791][Thread-32831:123145450409984][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:10:12,879][Thread-32839:123145466175488][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:10:18,001][Thread-32847:123145455665152][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:10:48,149][Thread-32895:123145444618240][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.122. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-22 12:12:43,260][Thread-7:123145439363072][task_id:root][delete_patients.py:29][ERROR][failed to delete patientv [89c84926-20cd1a70-d3746386-a6c81210-275bf6b6]: error[HTTPSConnectionPool(host='192.168.1.122', port=443): Max retries exceeded with url: /orthanc/patients/89c84926-20cd1a70-d3746386-a6c81210-275bf6b6 (Caused by ReadTimeoutError("HTTPSConnectionPool(host='192.168.1.122', port=443): Read timed out. (read timeout=120)"))]]
[2020-07-23 10:28:00,742][Thread-7:123145341640704][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/tool/duration_verify]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/tool.py", line 236, in get
    data=verify()
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/tools/duration_verify.py", line 46, in verify
    duration_data = duration_record.objects.get(aistatus__isnull=True)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.duration_record.DoesNotExist: duration_record matching query does not exist.
[2020-07-23 10:28:00,774][Thread-7:123145341640704][task_id:django.server][basehttp.py:154][ERROR]["GET /api/tool/duration_verify HTTP/1.1" 500 27]
[2020-07-23 10:29:13,204][Thread-7:123145341640704][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/tool/duration_verify]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/tool.py", line 236, in get
    data=verify()
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/tools/duration_verify.py", line 46, in verify
    duration_data = duration_record.objects.get(aistatus__isnull=True)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.duration_record.DoesNotExist: duration_record matching query does not exist.
[2020-07-23 10:29:13,213][Thread-7:123145341640704][task_id:django.server][basehttp.py:154][ERROR]["GET /api/tool/duration_verify HTTP/1.1" 500 27]
[2020-07-23 10:29:43,013][Thread-7:123145374478336][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/tool/duration_verify]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/tool.py", line 236, in get
    data=verify()
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/tools/duration_verify.py", line 46, in verify
    duration_data = duration_record.objects.get(aistatus__isnull=False)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 403, in get
    (self.model._meta.object_name, num)
TestPlatform.models.duration_record.MultipleObjectsReturned: get() returned more than one duration_record -- it returned 1051!
[2020-07-23 10:29:43,041][Thread-7:123145374478336][task_id:django.server][basehttp.py:154][ERROR]["GET /api/tool/duration_verify HTTP/1.1" 500 27]
[2020-07-23 10:31:08,139][Thread-7:123145404805120][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/tool/duration_verify]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/tool.py", line 236, in get
    data=verify()
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/tools/duration_verify.py", line 56, in verify
    text = eval(str(airesult.content, 'utf-8'), globals)
TypeError: globals must be a dict
[2020-07-23 10:31:08,152][Thread-7:123145404805120][task_id:django.server][basehttp.py:154][ERROR]["GET /api/tool/duration_verify HTTP/1.1" 500 27]
[2020-07-23 10:32:27,202][Thread-7:123145404805120][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/tool/duration_verify]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/tool.py", line 236, in get
    data=verify()
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/tools/duration_verify.py", line 56, in verify
    text = eval(str(airesult.content, 'utf-8'), globals)
TypeError: globals must be a dict
[2020-07-23 10:32:27,213][Thread-7:123145404805120][task_id:django.server][basehttp.py:154][ERROR]["GET /api/tool/duration_verify HTTP/1.1" 500 27]
[2020-07-23 10:35:18,092][Thread-7:123145586044928][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/tool/duration_verify]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/tool.py", line 236, in get
    data=verify()
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/tools/duration_verify.py", line 57, in verify
    res_studyView = airesult.content['data']["studyViewFlexible"]
TypeError: byte indices must be integers or slices, not str
[2020-07-23 10:35:18,109][Thread-7:123145586044928][task_id:django.server][basehttp.py:154][ERROR]["GET /api/tool/duration_verify HTTP/1.1" 500 27]
[2020-07-23 10:36:07,671][Thread-7:123145586044928][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/tool/duration_verify]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/tool.py", line 236, in get
    data=verify()
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/tools/duration_verify.py", line 57, in verify
    res_studyView = airesult.content['data']["studyViewFlexible"]
TypeError: byte indices must be integers or slices, not str
[2020-07-23 10:36:07,673][Thread-7:123145586044928][task_id:django.server][basehttp.py:154][ERROR]["GET /api/tool/duration_verify HTTP/1.1" 500 27]
[2020-07-23 10:42:26,478][Thread-7:123145417711616][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/tool/duration_verify]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/tool.py", line 236, in get
    data=verify()
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/tools/duration_verify.py", line 58, in verify
    data['aistatus'] = res_studyView[0].get('aistatus')
IndexError: list index out of range
[2020-07-23 10:42:26,488][Thread-7:123145417711616][task_id:django.server][basehttp.py:154][ERROR]["GET /api/tool/duration_verify HTTP/1.1" 500 27]
[2020-07-23 10:43:20,042][Thread-7:123145457860608][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/tool/duration_verify]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/tool.py", line 236, in get
    data=verify()
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/tools/duration_verify.py", line 58, in verify
    data['aistatus'] = res_studyView[0].get('aistatus')
IndexError: list index out of range
[2020-07-23 10:43:20,052][Thread-7:123145457860608][task_id:django.server][basehttp.py:154][ERROR]["GET /api/tool/duration_verify HTTP/1.1" 500 27]
[2020-07-23 11:15:30,920][Thread-617:123145454620672][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/tool/duration_verify]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/tool.py", line 236, in get
    data=verify()
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/tools/duration_verify.py", line 58, in verify
    data['aistatus'] = res_studyView[0].get('aistatus')
IndexError: list index out of range
[2020-07-23 11:15:30,922][Thread-7:123145443573760][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/tool/duration_verify]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/tool.py", line 236, in get
    data=verify()
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/tools/duration_verify.py", line 58, in verify
    data['aistatus'] = res_studyView[0].get('aistatus')
IndexError: list index out of range
[2020-07-23 11:15:30,940][Thread-617:123145454620672][task_id:django.server][basehttp.py:154][ERROR]["GET /api/tool/duration_verify HTTP/1.1" 500 27]
[2020-07-23 11:15:30,941][Thread-7:123145443573760][task_id:django.server][basehttp.py:154][ERROR]["GET /api/tool/duration_verify HTTP/1.1" 500 27]
[2020-07-23 11:16:55,959][Thread-7:123145347002368][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/tool/duration_verify]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/tool.py", line 236, in get
    data=verify()
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/tools/duration_verify.py", line 51, in verify
    if airesult.json()['data']['studyViewFlexible'][0] is False:
IndexError: list index out of range
[2020-07-23 11:16:55,972][Thread-7:123145347002368][task_id:django.server][basehttp.py:154][ERROR]["GET /api/tool/duration_verify HTTP/1.1" 500 27]
[2020-07-23 11:36:55,164][Thread-9:123145434853376][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-23 11:37:00,617][Thread-11:123145441181696][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-23 11:47:05,336][Thread-253:123145434853376][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-23 11:47:10,605][Thread-257:123145440645120][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-23 11:47:15,870][Thread-261:123145445900288][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-23 11:47:21,153][Thread-265:123145434853376][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-23 11:47:26,395][Thread-269:123145440645120][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-23 11:47:31,656][Thread-273:123145445900288][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-23 11:47:36,905][Thread-277:123145434853376][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-23 11:47:42,170][Thread-281:123145440645120][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-23 11:47:47,471][Thread-285:123145445900288][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-23 11:47:52,776][Thread-291:123145440645120][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-23 12:06:31,834][Thread-1187:123145445900288][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-23 12:08:30,046][Thread-1185:123145429598208][task_id:root][delete_patients.py:29][ERROR][failed to delete patientv [5c7b8fac-6a552311-7f1cf58f-da631616-a2d43aa3]: error[HTTPSConnectionPool(host='192.168.1.208', port=443): Max retries exceeded with url: /orthanc/patients/5c7b8fac-6a552311-7f1cf58f-da631616-a2d43aa3 (Caused by ReadTimeoutError("HTTPSConnectionPool(host='192.168.1.208', port=443): Read timed out. (read timeout=120)"))]]
[2020-07-23 14:56:11,191][Thread-7:123145573605376][task_id:root][regexUtil.py:73][ERROR][Query failed: HTTPSConnectionPool(host='192.168.1.208', port=443): Max retries exceeded with url: /oauth/login (Caused by SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1056)')))]
[2020-07-23 14:56:11,443][Thread-7:123145573605376][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/tool/duration_verify]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/tool.py", line 236, in get
    data=verify()
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/tools/duration_verify.py", line 50, in verify
    airesult=ai_result(kc,i.patientid)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/tools/duration_verify.py", line 36, in ai_result
    res_study = kc.post(
AttributeError: 'SSLError' object has no attribute 'post'
[2020-07-23 14:56:11,486][Thread-7:123145573605376][task_id:django.server][basehttp.py:154][ERROR]["GET /api/tool/duration_verify HTTP/1.1" 500 27]
[2020-07-25 17:06:38,419][Thread-1:123145368326144][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/tool/stressdata]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 583, in connect
    **kwargs)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 727, in create_connection
    raise err
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 716, in create_connection
    sock.connect(sa)
TimeoutError: [Errno 60] Operation timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 216, in ensure_connection
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 194, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/mysql/base.py", line 227, in get_new_connection
    return Database.connect(**conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 325, in __init__
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 630, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '192.168.2.38' ([Errno 60] Operation timed out)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/tool.py", line 60, in get
    total = paginator.num_pages  # 总页数
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/utils/functional.py", line 37, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/paginator.py", line 97, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/utils/functional.py", line 37, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/paginator.py", line 87, in count
    return self.object_list.count()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 383, in count
    return self.query.get_count(using=self.db)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/sql/query.py", line 498, in get_count
    number = obj.get_aggregation(using, ['__count'])['__count']
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/sql/query.py", line 483, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/sql/compiler.py", line 1063, in execute_sql
    cursor = self.connection.cursor()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 255, in cursor
    return self._cursor()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 232, in _cursor
    self.ensure_connection()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 216, in ensure_connection
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/utils.py", line 89, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 216, in ensure_connection
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 194, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/mysql/base.py", line 227, in get_new_connection
    return Database.connect(**conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 325, in __init__
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 630, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '192.168.2.38' ([Errno 60] Operation timed out)")
[2020-07-25 17:06:38,459][Thread-1:123145368326144][task_id:django.server][basehttp.py:154][ERROR]["GET /api/tool/stressdata?page=1&diseases= HTTP/1.1" 500 27]
[2020-07-27 11:54:26,793][Thread-3:123145580359680][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:54:36,854][Thread-5:123145580359680][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:54:46,912][Thread-7:123145580359680][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:54:51,970][Thread-8:123145586151424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:54:57,032][Thread-9:123145580359680][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:55:02,157][Thread-10:123145586151424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:55:12,226][Thread-12:123145586151424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:55:22,281][Thread-14:123145586151424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:55:32,347][Thread-16:123145586151424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:55:37,411][Thread-17:123145580359680][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:55:42,465][Thread-18:123145586151424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:55:47,505][Thread-19:123145580359680][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:55:52,554][Thread-20:123145586151424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:56:02,619][Thread-22:123145586151424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:56:07,681][Thread-23:123145580359680][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:56:12,732][Thread-24:123145586151424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:56:22,786][Thread-26:123145586151424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:56:27,838][Thread-27:123145580359680][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:56:32,887][Thread-28:123145586151424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:56:37,949][Thread-29:123145580359680][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:56:43,011][Thread-30:123145586151424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:56:48,086][Thread-31:123145580359680][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:56:53,160][Thread-32:123145586151424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:56:58,213][Thread-33:123145580359680][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:57:03,281][Thread-34:123145586151424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:57:08,343][Thread-35:123145580359680][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:57:13,405][Thread-36:123145586151424][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:57:18,454][Thread-37:123145580359680][task_id:urllib3.connection][connection.py:378][ERROR][Certificate did not match Create_bug hostname: 192.168.1.208. Certificate: {'subject': ((('organizationalUnitName', 'Domain Control Validated'),), (('organizationalUnitName', 'PositiveSSL Wildcard'),), (('commonName', '*.skymed.ai'),)), 'issuer': ((('countryName', 'GB'),), (('stateOrProvinceName', 'Greater Manchester'),), (('localityName', 'Salford'),), (('organizationName', 'Sectigo Limited'),), (('commonName', 'Sectigo RSA Domain Validation Secure Server CA'),)), 'version': 3, 'serialNumber': '3CD13D8FB909416AE2DE04CCED41659E', 'notBefore': 'Jul 18 00:00:00 2019 GMT', 'notAfter': 'Jul 17 23:59:59 2021 GMT', 'subjectAltName': (('DNS', '*.skymed.ai'), ('DNS', 'skymed.ai')), 'OCSP': ('http://ocsp.sectigo.com',), 'caIssuers': ('http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt',)}]
[2020-07-27 11:59:12,569][Thread-1:123145575104512][task_id:root][delete_patients.py:21][ERROR][failed to get patient info [3627c4e3-aaae516a-1acd9c8d-139ff5eb-f08394b2]: error[Expecting value: line 1 column 1 (char 0)]]
[2020-07-27 11:59:12,591][Thread-1:123145575104512][task_id:root][delete_patients.py:21][ERROR][failed to get patient info [20700417-6edb28dc-5d20cf47-23bab477-a83f90a4]: error[Expecting value: line 1 column 1 (char 0)]]
[2020-07-27 11:59:12,613][Thread-1:123145575104512][task_id:root][delete_patients.py:21][ERROR][failed to get patient info [da59f86a-4977c1a3-e11a555b-7f951c2a-05f9e2fc]: error[Expecting value: line 1 column 1 (char 0)]]
[2020-07-27 11:59:12,637][Thread-1:123145575104512][task_id:root][delete_patients.py:21][ERROR][failed to get patient info [1305b838-ac7608d6-a8331c3d-54a2058a-573bb585]: error[Expecting value: line 1 column 1 (char 0)]]
[2020-07-27 11:59:12,660][Thread-1:123145575104512][task_id:root][delete_patients.py:21][ERROR][failed to get patient info [06aa7239-621d5419-ecbee079-170703ff-b91a92ee]: error[Expecting value: line 1 column 1 (char 0)]]
[2020-07-27 11:59:12,686][Thread-1:123145575104512][task_id:root][delete_patients.py:21][ERROR][failed to get patient info [369fed7b-9b488f10-6195ba3f-8eac3b71-eb68bfe5]: error[Expecting value: line 1 column 1 (char 0)]]
[2020-07-27 11:59:12,715][Thread-1:123145575104512][task_id:root][delete_patients.py:21][ERROR][failed to get patient info [1bc9ba9e-b6feaefe-964446b2-8d324639-05b4c5e9]: error[Expecting value: line 1 column 1 (char 0)]]
[2020-07-27 11:59:12,742][Thread-1:123145575104512][task_id:root][delete_patients.py:21][ERROR][failed to get patient info [fe20a452-7c97ce79-681fc68e-a2140665-f9d1429b]: error[Expecting value: line 1 column 1 (char 0)]]
[2020-07-27 11:59:12,767][Thread-1:123145575104512][task_id:root][delete_patients.py:21][ERROR][failed to get patient info [cdb315f1-72b80683-80342940-325e81a1-f5965463]: error[Expecting value: line 1 column 1 (char 0)]]
[2020-07-27 11:59:12,790][Thread-1:123145575104512][task_id:root][delete_patients.py:21][ERROR][failed to get patient info [d059c097-178fb802-a20c96a5-5c3b95e2-36414ca5]: error[Expecting value: line 1 column 1 (char 0)]]
[2020-07-27 11:59:12,811][Thread-1:123145575104512][task_id:root][delete_patients.py:21][ERROR][failed to get patient info [09bdfe5e-608219ae-75a5b4f5-25996edc-d68b7622]: error[Expecting value: line 1 column 1 (char 0)]]
[2020-07-27 11:59:12,833][Thread-1:123145575104512][task_id:root][delete_patients.py:21][ERROR][failed to get patient info [ec8fbed4-9c96c1a8-d04b4fdd-36a189e5-78ae7865]: error[Expecting value: line 1 column 1 (char 0)]]
[2020-07-27 11:59:12,855][Thread-1:123145575104512][task_id:root][delete_patients.py:21][ERROR][failed to get patient info [def19fdf-9044e73b-f658c80b-15ae2820-d0d2e64b]: error[Expecting value: line 1 column 1 (char 0)]]
[2020-07-27 11:59:12,879][Thread-1:123145575104512][task_id:root][delete_patients.py:21][ERROR][failed to get patient info [5c1adf05-7453cc33-20fb3f90-02018047-1c601e3c]: error[Expecting value: line 1 column 1 (char 0)]]
[2020-07-27 11:59:12,905][Thread-1:123145575104512][task_id:root][delete_patients.py:21][ERROR][failed to get patient info [a99dd0ca-ac2585fb-bde01ea6-c03c89eb-1068d672]: error[Expecting value: line 1 column 1 (char 0)]]
[2020-07-27 14:57:41,593][Thread-9:123145545510912][task_id:root][duration_send.py:273][INFO][please check config, waiting for 5 seconds...]
[2020-07-27 14:57:46,600][Thread-9:123145545510912][task_id:root][duration_send.py:286][INFO][start to send: path[/home/biomind/testDatas/[]]
[2020-07-27 16:21:47,152][Thread-7:123145465675776][task_id:root][duration_send.py:273][INFO][please check config, waiting for 5 seconds...]
[2020-07-27 16:21:57,899][Thread-7:123145465675776][task_id:root][duration_send.py:286][INFO][start to send: path[/home/biomind/testDatas/SVD]]
[2020-07-27 16:23:03,082][Thread-7:123145465675776][task_id:root][duration_send.py:273][INFO][please check config, waiting for 5 seconds...]
[2020-07-27 16:23:13,022][Thread-7:123145465675776][task_id:root][duration_send.py:286][INFO][start to send: path[/home/biomind/testDatas/SVD]]
[2020-07-27 19:57:36,810][Thread-16:123145544564736][task_id:root][duration_send.py:275][INFO][please check config, waiting for 5 seconds...]
[2020-07-27 19:57:41,816][Thread-16:123145544564736][task_id:root][duration_send.py:288][INFO][start to send: path[/home/biomind/testDatas/SWI]]
[2020-07-27 19:58:30,701][Thread-14:123145353760768][task_id:root][duration_send.py:275][INFO][please check config, waiting for 5 seconds...]
[2020-07-27 19:58:33,223][Thread-19:123145359015936][task_id:root][duration_send.py:275][INFO][please check config, waiting for 5 seconds...]
[2020-07-27 19:58:35,625][Thread-24:123145364271104][task_id:root][duration_send.py:275][INFO][please check config, waiting for 5 seconds...]
[2020-07-27 19:58:35,706][Thread-14:123145353760768][task_id:root][duration_send.py:288][INFO][start to send: path[/home/biomind/testDatas/Tumor]]
[2020-07-27 19:58:38,230][Thread-19:123145359015936][task_id:root][duration_send.py:288][INFO][start to send: path[/home/biomind/testDatas/Tumor]]
[2020-07-27 19:58:40,630][Thread-24:123145364271104][task_id:root][duration_send.py:288][INFO][start to send: path[/home/biomind/testDatas/Tumor]]
[2020-07-27 20:06:01,721][Thread-24:123145376354304][task_id:root][duration_send.py:275][INFO][please check config, waiting for 5 seconds...]
[2020-07-27 20:06:09,961][Thread-24:123145376354304][task_id:root][duration_send.py:288][INFO][start to send: path[/home/biomind/testDatas/Tumor]]
[2020-07-27 20:06:40,292][Thread-14:123145365843968][task_id:root][duration_send.py:275][INFO][please check config, waiting for 5 seconds...]
[2020-07-27 20:06:40,292][Thread-34:123145386864640][task_id:root][duration_send.py:275][INFO][please check config, waiting for 5 seconds...]
[2020-07-27 20:06:40,293][Thread-39:123145392119808][task_id:root][duration_send.py:275][INFO][please check config, waiting for 5 seconds...]
[2020-07-27 20:06:40,298][Thread-19:123145371099136][task_id:root][duration_send.py:275][INFO][please check config, waiting for 5 seconds...]
[2020-07-27 20:06:40,299][Thread-29:123145381609472][task_id:root][duration_send.py:275][INFO][please check config, waiting for 5 seconds...]
[2020-07-27 20:06:45,295][Thread-39:123145392119808][task_id:root][duration_send.py:288][INFO][start to send: path[/home/biomind/testDatas/CTA]]
[2020-07-27 20:06:45,296][Thread-14:123145365843968][task_id:root][duration_send.py:288][INFO][start to send: path[/home/biomind/testDatas/CTA]]
[2020-07-27 20:06:45,296][Thread-34:123145386864640][task_id:root][duration_send.py:288][INFO][start to send: path[/home/biomind/testDatas/CTA]]
[2020-07-27 20:06:45,303][Thread-19:123145371099136][task_id:root][duration_send.py:288][INFO][start to send: path[/home/biomind/testDatas/CTA]]
[2020-07-27 20:06:45,303][Thread-29:123145381609472][task_id:root][duration_send.py:288][INFO][start to send: path[/home/biomind/testDatas/CTA]]
[2020-07-29 10:37:02,443][Thread-2:123145361379328][task_id:root][regexUtil.py:73][ERROR][Query failed: HTTPSConnectionPool(host='192.168.1.125', port=443): Max retries exceeded with url: /oauth/login (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x11a0d5d30>: Failed to establish a new connection: [Errno 61] Connection refused'))]
[2020-07-29 10:37:02,444][Thread-2:123145361379328][task_id:root][delete_patients.py:12][ERROR][failed to find patirents: error['ConnectionError' object has no attribute 'get']]
[2020-07-29 10:43:09,784][Thread-2:123145431388160][task_id:root][regexUtil.py:73][ERROR][Query failed: HTTPSConnectionPool(host='192.168.1.125', port=443): Max retries exceeded with url: /oauth/login (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x118e68e48>: Failed to establish a new connection: [Errno 61] Connection refused'))]
[2020-07-29 10:43:09,784][Thread-2:123145431388160][task_id:root][delete_patients.py:12][ERROR][failed to find patirents: error['ConnectionError' object has no attribute 'get']]
[2020-07-29 10:43:16,897][Thread-2:123145431388160][task_id:root][regexUtil.py:73][ERROR][Query failed: HTTPSConnectionPool(host='192.168.1.125', port=443): Max retries exceeded with url: /oauth/login (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x118e974e0>: Failed to establish a new connection: [Errno 61] Connection refused'))]
[2020-07-29 10:43:16,898][Thread-2:123145431388160][task_id:root][delete_patients.py:12][ERROR][failed to find patirents: error['ConnectionError' object has no attribute 'get']]
[2020-07-29 10:43:30,175][Thread-2:123145431388160][task_id:root][regexUtil.py:73][ERROR][Query failed: HTTPSConnectionPool(host='192.168.1.125', port=443): Max retries exceeded with url: /oauth/login (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x118eb99b0>: Failed to establish a new connection: [Errno 61] Connection refused'))]
[2020-07-29 10:43:30,175][Thread-2:123145431388160][task_id:root][delete_patients.py:12][ERROR][failed to find patirents: error['ConnectionError' object has no attribute 'get']]
[2020-07-29 10:46:44,151][Thread-7:123145513766912][task_id:root][regexUtil.py:73][ERROR][Query failed: HTTPSConnectionPool(host='192.168.1.125', port=443): Max retries exceeded with url: /oauth/login (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x1213c6b38>: Failed to establish a new connection: [Errno 61] Connection refused'))]
[2020-07-29 10:46:45,054][Thread-7:123145513766912][task_id:root][delete_patients.py:12][ERROR][failed to find patirents: error['ConnectionError' object has no attribute 'get']]
[2020-07-29 10:47:36,317][Thread-7:123145513766912][task_id:root][regexUtil.py:73][ERROR][Query failed: HTTPSConnectionPool(host='192.168.1.125', port=443): Max retries exceeded with url: /oauth/login (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x1214555f8>: Failed to establish a new connection: [Errno 61] Connection refused'))]
[2020-07-29 10:47:36,317][Thread-7:123145513766912][task_id:root][delete_patients.py:12][ERROR][failed to find patirents: error['ConnectionError' object has no attribute 'get']]
[2020-07-31 16:04:18,965][Thread-2:123145550225408][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:04:18,971][Thread-3:123145555480576][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:04:18,989][Thread-2:123145550225408][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:04:18,990][Thread-3:123145555480576][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:04:20,480][Thread-4:123145560735744][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:04:20,480][Thread-4:123145560735744][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:04:20,480][Thread-4:123145560735744][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 13.072524527138562s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:04:33,861][Thread-4:123145560735744][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:04:33,862][Thread-4:123145560735744][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:04:33,862][Thread-4:123145560735744][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 18.37844773479187s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:04:52,556][Thread-4:123145560735744][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:04:52,556][Thread-4:123145560735744][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:04:52,556][Thread-4:123145560735744][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 53.75071541426302s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:05:46,711][Thread-4:123145560735744][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:05:46,711][Thread-4:123145560735744][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse
    response.begin()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin
    version, status, reason = self._read_status()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 257, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/adapters.py", line 449, in send
    timeout=timeout
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/util/retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/common/jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 472, in __init__
    si = self.server_info()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 146, in __verb
    raise exception
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))
[2020-07-31 16:05:46,733][Thread-4:123145560735744][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-07-31 16:20:10,288][Thread-6:123145555480576][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:20:10,289][Thread-6:123145555480576][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:20:10,405][Thread-5:123145550225408][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:20:10,406][Thread-5:123145550225408][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:20:11,180][Thread-7:123145560735744][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:20:11,180][Thread-7:123145560735744][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:20:11,181][Thread-7:123145560735744][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 17.019957273698946s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:20:28,457][Thread-7:123145560735744][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:20:28,457][Thread-7:123145560735744][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:20:28,457][Thread-7:123145560735744][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 24.83228662175465s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:20:53,618][Thread-7:123145560735744][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:20:53,618][Thread-7:123145560735744][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:20:53,619][Thread-7:123145560735744][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 30.892546708091984s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:21:24,865][Thread-7:123145560735744][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:21:24,866][Thread-7:123145560735744][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse
    response.begin()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin
    version, status, reason = self._read_status()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 257, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/adapters.py", line 449, in send
    timeout=timeout
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/util/retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/common/jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 472, in __init__
    si = self.server_info()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 146, in __verb
    raise exception
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))
[2020-07-31 16:21:24,870][Thread-7:123145560735744][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-07-31 16:24:06,344][Thread-5:123145550225408][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:24:06,345][Thread-5:123145550225408][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:24:06,446][Thread-7:123145560735744][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:24:06,447][Thread-7:123145560735744][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:24:06,533][Thread-6:123145555480576][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:24:06,533][Thread-6:123145555480576][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:24:06,533][Thread-6:123145555480576][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 13.882013786789303s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:24:20,787][Thread-6:123145555480576][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:24:20,787][Thread-6:123145555480576][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:24:20,787][Thread-6:123145555480576][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 20.505163598636127s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:24:41,770][Thread-6:123145555480576][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:24:41,770][Thread-6:123145555480576][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:24:41,771][Thread-6:123145555480576][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 47.6279653738322s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:25:30,676][Thread-6:123145555480576][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:25:30,677][Thread-6:123145555480576][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse
    response.begin()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin
    version, status, reason = self._read_status()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 257, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/adapters.py", line 449, in send
    timeout=timeout
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/util/retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/common/jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 472, in __init__
    si = self.server_info()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 146, in __verb
    raise exception
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))
[2020-07-31 16:25:30,681][Thread-6:123145555480576][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-07-31 16:25:35,083][Thread-6:123145555480576][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:25:35,083][Thread-6:123145555480576][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:25:35,205][Thread-7:123145560735744][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:25:35,206][Thread-7:123145560735744][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:25:35,354][Thread-5:123145550225408][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:25:35,354][Thread-5:123145550225408][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:25:35,354][Thread-5:123145550225408][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 17.86418179514852s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:25:54,472][Thread-5:123145550225408][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:25:54,472][Thread-5:123145550225408][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:25:54,473][Thread-5:123145550225408][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 8.180092314633129s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:26:02,906][Thread-5:123145550225408][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:26:02,906][Thread-5:123145550225408][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:26:02,907][Thread-5:123145550225408][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 41.09515005320784s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:26:36,935][Thread-7:123145560735744][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:26:36,937][Thread-7:123145560735744][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:26:36,997][Thread-6:123145555480576][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:26:36,997][Thread-6:123145555480576][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:26:37,124][Thread-8:123145565990912][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:26:37,125][Thread-8:123145565990912][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:26:37,125][Thread-8:123145565990912][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 6.099640491645413s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:26:43,482][Thread-8:123145565990912][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:26:43,482][Thread-8:123145565990912][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:26:43,482][Thread-8:123145565990912][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 12.669154176300626s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:26:44,263][Thread-5:123145550225408][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:26:44,264][Thread-5:123145550225408][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse
    response.begin()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin
    version, status, reason = self._read_status()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 257, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/adapters.py", line 449, in send
    timeout=timeout
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/util/retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/common/jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 472, in __init__
    si = self.server_info()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 146, in __verb
    raise exception
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))
[2020-07-31 16:26:44,268][Thread-5:123145550225408][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-07-31 16:26:44,272][Thread-5:123145550225408][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 59]
[2020-07-31 16:26:52,510][Thread-7:123145560735744][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:26:52,511][Thread-6:123145555480576][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:26:52,512][Thread-7:123145560735744][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:26:52,512][Thread-6:123145555480576][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:26:52,721][Thread-9:123145550225408][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:26:52,721][Thread-9:123145550225408][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:26:52,721][Thread-9:123145550225408][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 15.587607218503353s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:26:56,462][Thread-8:123145565990912][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:26:56,462][Thread-8:123145565990912][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:26:56,462][Thread-8:123145565990912][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 57.050877592585856s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:27:08,556][Thread-9:123145550225408][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:27:08,556][Thread-9:123145550225408][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:27:08,556][Thread-9:123145550225408][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 5.83429699544654s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:27:14,639][Thread-9:123145550225408][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:27:14,639][Thread-9:123145550225408][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:27:14,640][Thread-9:123145550225408][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 5.48537671330733s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:27:20,455][Thread-9:123145550225408][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:27:20,455][Thread-9:123145550225408][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse
    response.begin()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin
    version, status, reason = self._read_status()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 257, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/adapters.py", line 449, in send
    timeout=timeout
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/util/retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/common/jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 472, in __init__
    si = self.server_info()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 146, in __verb
    raise exception
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))
[2020-07-31 16:27:20,458][Thread-9:123145550225408][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-07-31 16:27:53,790][Thread-8:123145565990912][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:27:53,791][Thread-8:123145565990912][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse
    response.begin()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin
    version, status, reason = self._read_status()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 257, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/adapters.py", line 449, in send
    timeout=timeout
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/util/retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/common/jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 472, in __init__
    si = self.server_info()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 146, in __verb
    raise exception
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))
[2020-07-31 16:27:53,795][Thread-8:123145565990912][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-07-31 16:29:54,291][Thread-6:123145555480576][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:29:54,292][Thread-6:123145555480576][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:29:54,296][Thread-9:123145550225408][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:29:54,297][Thread-9:123145550225408][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:29:54,549][Thread-7:123145560735744][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:29:54,549][Thread-7:123145560735744][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:29:54,550][Thread-7:123145560735744][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 9.07353031803742s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:30:03,870][Thread-7:123145560735744][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:30:03,871][Thread-7:123145560735744][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:30:03,871][Thread-7:123145560735744][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 1.449134912972898s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:30:07,669][Thread-9:123145550225408][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:30:07,669][Thread-9:123145550225408][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:30:07,672][Thread-6:123145555480576][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:30:07,673][Thread-6:123145555480576][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:30:09,245][Thread-7:123145560735744][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/common/jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 472, in __init__
    si = self.server_info()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 147, in __verb
    raise_on_error(response, verb=verb, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 57, in raise_on_error
    r.status_code, error, r.url, request=request, response=r, **kwargs)
jira.exceptions.JIRAError: JiraError HTTP 462 url: https://www.test.com
	text: <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>462 Forbidden Region - DOSarrest Internet Security</title>
<link href="/DOAError/assets/css/core.css" rel="stylesheet" type="text/css" />
<link rel="shortcut icon" href="/DOAError/assets/images/favicon.ico" /><link rel="apple-touch-icon" href="/DOAError/assets/images/icon-protection.png" />
<script>
function id_process(n){for(var t=n+"=",r=document.cookie.split(";"),e=0;e<r.length;e++){for(var g=r[e];" "==g.charAt(0);)g=g.substring(1,g.length);if(0==g.indexOf(t))return g.substring(t.length,g.length)}return null};
</script>
</head>

<body onload="myFunction(), myFunction2(), myFunction3()">
<div id="apDiv1">
  <table width="100%" border="0" cellspacing="0" cellpadding="0" bgcolor="#444444">
    <tr>
      <td colspan="3" bg background="/DOAError/assets/images/bottom_separator.png"><img src="/DOAError/assets/images/bottom_separator.png" width="5" height="9" /></td>
    </tr>
    <tr>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="18" /></td>
      <td><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="18" /></td>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="18" /></td>
    </tr>
    <tr>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="55" /></td>
      <td width="148" align="left" valign="top"><table width="960" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr>
          <td align="left" valign="top" class="bottomtext">DOSarrest Internet Security is a cloud based fully managed DDoS protection service.  This request has been blocked by DOSarrest due to the above violation.  If you believe you are getting blocked in error please contact the administrator of 
<span id="host"></span><script>
function myFunction() {
    var x = location.host;
    document.getElementById("host").innerHTML = x;
}
</script><noscript>this website</noscript>
            </span> to resolve this issue.</td>
          <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="55" /></td>
          <td align="right" valign="bottom"><img src="/DOAError/assets/images/da_logo.png" width="148" height="50"  alt="DOSarrest Internet Security | DDoS Protection" title="DOSarrest Internet Security | DDoS Protection" /></a></td>
        </tr>
      </table></td>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="55" /></td>
    </tr>
    <tr>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="18" /></td>
      <td><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="18" /></td>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="18" /></td>
    </tr>
  </table>
</div>
<div id="apDiv2">
  <table width="100%" height="100%" border="0" align="center" cellpadding="0" cellspacing="0">
    <tr>
      <td align="center" valign="middle"><table width="760" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr></tr>
        <tr>
          <td align="center"><table width="730" border="0" cellspacing="0" cellpadding="0">
            <tbody>
              <tr>
                <td width="1"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="1" height="340" alt=""/></td>
                <td width="728" align="center"><table width="728" border="0" cellspacing="0" cellpadding="0">
                  <tbody>
                    <tr>
                      <td width="121" align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="10" height="120" alt=""/></td>
                      <td width="500" align="center" class="errortitle">462</td>
                      <td width="109" align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="10" height="120" alt=""/></td>
                    </tr>
                  </tbody>
                </table>
                  <table width="720" border="0" cellpadding="0" cellspacing="0" background="/DOAError/assets/images/462.png">
                    <tbody>
                      <tr>
                        <td colspan="5"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="62" height="172" alt=""/></td>
                      </tr>
                      <tr>
                        <td width="114" align="center" valign="top" class="imagetext">You</td>
                        <td width="197" align="center" valign="top"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="36" alt=""/></td>
                        <td width="120" align="center" valign="top" class="imagetext">DOSarrest<br />
                          <span style="font-size: small">Protection</span></td>
                        <td width="187" align="center" valign="top">&nbsp;</td>
                        <td width="102" align="center" valign="top" class="imagetext">Host<br />
<span style="font-size: x-small" id="host2"></span><script>
function myFunction2() {
    var x = location.host;
    document.getElementById("host2").innerHTML = x;
}
</script></td>
                      </tr>
                    </tbody>
                  </table></td>
                <td width="1"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="1" height="340" alt=""/></td>
              </tr>
            </tbody>
          </table></td>
        </tr>
        <tr>
          <td align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="8" /></td>
        </tr>
        <tr>
          <td align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
            <tbody>
              <tr>
                <td width="30%" align="left"><table border="0" cellpadding="0" cellspacing="0">
                  <tbody>
                    <tr>
                      <td nowrap="nowrap"><div id="idtext">ID: </div></td>
                      <td nowrap="nowrap"><div id="id_finish"></div>
                        <script>document.getElementById("id_finish").innerHTML=id_process("dis-request-id");</script></td>
                    </tr>
                  </tbody>
                </table></td>
                <td align="center">|</td>
                <td width="30%" align="center"><table border="0" cellpadding="0" cellspacing="0">
                  <tbody>
                    <tr>
                      <td nowrap="nowrap"><div id="idtext"> Your IP Address: </div></td>
                      <td nowrap="nowrap"><div id="addr_finish"></div>
                        <script>document.getElementById("addr_finish").innerHTML=id_process("dis-remote-addr");</script></td>
                    </tr>
                  </tbody>
                </table></td>
                <td align="center">|</td>
                <td width="30%" align="right"><table border="0" cellpadding="0" cellspacing="0">
                  <tbody>
                    <tr>
                      <td nowrap="nowrap"><div id="idtext"> Timestamp: </div></td>
                      <td nowrap="nowrap"><div id="ts_finish"></div>
                        <script>document.getElementById("ts_finish").innerHTML=id_process("dis-timestamp");</script></td>
                    </tr>
                  </tbody>
                </table></td>
              </tr>
            </tbody>
          </table></td>
        </tr>
        <tr>
          <td align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="8" /></td>
        </tr>
        <tr>
          <td align="left" valign="top"><p class="bodytext"><strong>462 Forbidden Region: </strong>Your request for this resource had been blocked.  This resource is not available in your region.</p>
            <p class="bodytext">DOSarrest Internet Security is a cloud based fully managed DDoS protection service.  This request has been blocked by DOSarrest due to the above violation.  If you believe you are getting blocked in error please contact the administrator of 
<span id="host3"></span><script>
function myFunction3() {
    var x = location.host;
    document.getElementById("host3").innerHTML = x;
}
</script><noscript>this website</noscript>
            </span> to resolve this issue.</p></td>
        </tr>
        <tr></tr>
      </table></td>
    </tr>
  </table>
</div>
</body>
</html>

	
	response headers = {'Server': 'nginx/1.16.1', 'Date': 'Fri, 31 Jul 2020 08:30:09 GMT', 'Content-Type': 'text/html', 'Content-Length': '8859', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=20', 'ETag': '"5e5304fc-229b"', 'X-DIS-Request-ID': 'd152f151a3860ab6f219bda8e97e1978', 'Set-Cookie': 'dis-request-id=d152f151a3860ab6f219bda8e97e1978; secure, dis-timestamp=2020-07-31T01:30:09-07:00; secure, dis-remote-addr=223.71.127.50; secure', 'X-Frame-Options': 'sameorigin'}
	response text = <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>462 Forbidden Region - DOSarrest Internet Security</title>
<link href="/DOAError/assets/css/core.css" rel="stylesheet" type="text/css" />
<link rel="shortcut icon" href="/DOAError/assets/images/favicon.ico" /><link rel="apple-touch-icon" href="/DOAError/assets/images/icon-protection.png" />
<script>
function id_process(n){for(var t=n+"=",r=document.cookie.split(";"),e=0;e<r.length;e++){for(var g=r[e];" "==g.charAt(0);)g=g.substring(1,g.length);if(0==g.indexOf(t))return g.substring(t.length,g.length)}return null};
</script>
</head>

<body onload="myFunction(), myFunction2(), myFunction3()">
<div id="apDiv1">
  <table width="100%" border="0" cellspacing="0" cellpadding="0" bgcolor="#444444">
    <tr>
      <td colspan="3" bg background="/DOAError/assets/images/bottom_separator.png"><img src="/DOAError/assets/images/bottom_separator.png" width="5" height="9" /></td>
    </tr>
    <tr>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="18" /></td>
      <td><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="18" /></td>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="18" /></td>
    </tr>
    <tr>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="55" /></td>
      <td width="148" align="left" valign="top"><table width="960" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr>
          <td align="left" valign="top" class="bottomtext">DOSarrest Internet Security is a cloud based fully managed DDoS protection service.  This request has been blocked by DOSarrest due to the above violation.  If you believe you are getting blocked in error please contact the administrator of 
<span id="host"></span><script>
function myFunction() {
    var x = location.host;
    document.getElementById("host").innerHTML = x;
}
</script><noscript>this website</noscript>
            </span> to resolve this issue.</td>
          <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="55" /></td>
          <td align="right" valign="bottom"><img src="/DOAError/assets/images/da_logo.png" width="148" height="50"  alt="DOSarrest Internet Security | DDoS Protection" title="DOSarrest Internet Security | DDoS Protection" /></a></td>
        </tr>
      </table></td>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="55" /></td>
    </tr>
    <tr>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="18" /></td>
      <td><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="18" /></td>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="18" /></td>
    </tr>
  </table>
</div>
<div id="apDiv2">
  <table width="100%" height="100%" border="0" align="center" cellpadding="0" cellspacing="0">
    <tr>
      <td align="center" valign="middle"><table width="760" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr></tr>
        <tr>
          <td align="center"><table width="730" border="0" cellspacing="0" cellpadding="0">
            <tbody>
              <tr>
                <td width="1"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="1" height="340" alt=""/></td>
                <td width="728" align="center"><table width="728" border="0" cellspacing="0" cellpadding="0">
                  <tbody>
                    <tr>
                      <td width="121" align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="10" height="120" alt=""/></td>
                      <td width="500" align="center" class="errortitle">462</td>
                      <td width="109" align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="10" height="120" alt=""/></td>
                    </tr>
                  </tbody>
                </table>
                  <table width="720" border="0" cellpadding="0" cellspacing="0" background="/DOAError/assets/images/462.png">
                    <tbody>
                      <tr>
                        <td colspan="5"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="62" height="172" alt=""/></td>
                      </tr>
                      <tr>
                        <td width="114" align="center" valign="top" class="imagetext">You</td>
                        <td width="197" align="center" valign="top"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="36" alt=""/></td>
                        <td width="120" align="center" valign="top" class="imagetext">DOSarrest<br />
                          <span style="font-size: small">Protection</span></td>
                        <td width="187" align="center" valign="top">&nbsp;</td>
                        <td width="102" align="center" valign="top" class="imagetext">Host<br />
<span style="font-size: x-small" id="host2"></span><script>
function myFunction2() {
    var x = location.host;
    document.getElementById("host2").innerHTML = x;
}
</script></td>
                      </tr>
                    </tbody>
                  </table></td>
                <td width="1"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="1" height="340" alt=""/></td>
              </tr>
            </tbody>
          </table></td>
        </tr>
        <tr>
          <td align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="8" /></td>
        </tr>
        <tr>
          <td align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
            <tbody>
              <tr>
                <td width="30%" align="left"><table border="0" cellpadding="0" cellspacing="0">
                  <tbody>
                    <tr>
                      <td nowrap="nowrap"><div id="idtext">ID: </div></td>
                      <td nowrap="nowrap"><div id="id_finish"></div>
                        <script>document.getElementById("id_finish").innerHTML=id_process("dis-request-id");</script></td>
                    </tr>
                  </tbody>
                </table></td>
                <td align="center">|</td>
                <td width="30%" align="center"><table border="0" cellpadding="0" cellspacing="0">
                  <tbody>
                    <tr>
                      <td nowrap="nowrap"><div id="idtext"> Your IP Address: </div></td>
                      <td nowrap="nowrap"><div id="addr_finish"></div>
                        <script>document.getElementById("addr_finish").innerHTML=id_process("dis-remote-addr");</script></td>
                    </tr>
                  </tbody>
                </table></td>
                <td align="center">|</td>
                <td width="30%" align="right"><table border="0" cellpadding="0" cellspacing="0">
                  <tbody>
                    <tr>
                      <td nowrap="nowrap"><div id="idtext"> Timestamp: </div></td>
                      <td nowrap="nowrap"><div id="ts_finish"></div>
                        <script>document.getElementById("ts_finish").innerHTML=id_process("dis-timestamp");</script></td>
                    </tr>
                  </tbody>
                </table></td>
              </tr>
            </tbody>
          </table></td>
        </tr>
        <tr>
          <td align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="8" /></td>
        </tr>
        <tr>
          <td align="left" valign="top"><p class="bodytext"><strong>462 Forbidden Region: </strong>Your request for this resource had been blocked.  This resource is not available in your region.</p>
            <p class="bodytext">DOSarrest Internet Security is a cloud based fully managed DDoS protection service.  This request has been blocked by DOSarrest due to the above violation.  If you believe you are getting blocked in error please contact the administrator of 
<span id="host3"></span><script>
function myFunction3() {
    var x = location.host;
    document.getElementById("host3").innerHTML = x;
}
</script><noscript>this website</noscript>
            </span> to resolve this issue.</p></td>
        </tr>
        <tr></tr>
      </table></td>
    </tr>
  </table>
</div>
</body>
</html>

[2020-07-31 16:30:09,246][Thread-7:123145560735744][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-07-31 16:30:10,493][Thread-7:123145560735744][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:30:10,493][Thread-7:123145560735744][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:30:10,494][Thread-7:123145560735744][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 15.069436118538482s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:30:11,755][Thread-9:123145550225408][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:30:11,756][Thread-9:123145550225408][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:30:11,767][Thread-6:123145555480576][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:30:11,768][Thread-6:123145555480576][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:30:11,952][Thread-10:123145565990912][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:30:11,952][Thread-10:123145565990912][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:30:11,952][Thread-10:123145565990912][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 16.23041401075367s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:30:20,897][Thread-6:123145555480576][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:30:20,898][Thread-9:123145550225408][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:30:20,899][Thread-6:123145555480576][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:30:20,900][Thread-9:123145550225408][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:30:25,802][Thread-7:123145560735744][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:30:25,803][Thread-7:123145560735744][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:30:25,803][Thread-7:123145560735744][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 22.216532060118467s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:30:29,426][Thread-10:123145565990912][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:30:29,427][Thread-10:123145565990912][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:30:29,427][Thread-10:123145565990912][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 4.631660600248031s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:30:34,308][Thread-10:123145565990912][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:30:34,308][Thread-10:123145565990912][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:30:34,308][Thread-10:123145565990912][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 54.262375554091484s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:30:40,693][Thread-9:123145550225408][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:30:40,693][Thread-9:123145550225408][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:30:40,693][Thread-9:123145550225408][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 2.2387823614828095s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:30:43,187][Thread-9:123145550225408][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:30:43,187][Thread-9:123145550225408][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:30:43,187][Thread-9:123145550225408][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 17.77394714125157s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:30:48,261][Thread-7:123145560735744][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:30:48,261][Thread-7:123145560735744][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:30:48,261][Thread-7:123145560735744][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 43.49832358504499s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:30:49,157][Thread-6:123145555480576][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:30:49,158][Thread-6:123145555480576][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:30:49,162][Thread-11:123145571246080][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:30:49,163][Thread-11:123145571246080][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:30:57,455][Thread-6:123145555480576][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:30:57,456][Thread-6:123145555480576][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:30:57,461][Thread-11:123145571246080][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:30:57,461][Thread-11:123145571246080][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:31:01,202][Thread-9:123145550225408][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:31:01,202][Thread-9:123145550225408][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:31:01,202][Thread-9:123145550225408][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 3.258734816806337s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:31:04,704][Thread-9:123145550225408][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:31:04,705][Thread-9:123145550225408][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse
    response.begin()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin
    version, status, reason = self._read_status()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 257, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/adapters.py", line 449, in send
    timeout=timeout
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/util/retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/common/jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 472, in __init__
    si = self.server_info()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 146, in __verb
    raise exception
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))
[2020-07-31 16:31:04,708][Thread-9:123145550225408][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-07-31 16:31:09,270][Thread-9:123145550225408][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:31:09,271][Thread-9:123145550225408][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:31:09,271][Thread-9:123145550225408][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 18.723506313436687s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:31:17,639][Thread-11:123145571246080][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:31:17,640][Thread-11:123145571246080][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:31:17,640][Thread-11:123145571246080][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 0.2447677367940182s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:31:18,133][Thread-11:123145571246080][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:31:18,134][Thread-11:123145571246080][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:31:18,134][Thread-11:123145571246080][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 32.63520226718004s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:31:28,836][Thread-10:123145565990912][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:31:28,837][Thread-10:123145565990912][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse
    response.begin()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin
    version, status, reason = self._read_status()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 257, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/adapters.py", line 449, in send
    timeout=timeout
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/util/retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/common/jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 472, in __init__
    si = self.server_info()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 146, in __verb
    raise exception
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))
[2020-07-31 16:31:28,841][Thread-10:123145565990912][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-07-31 16:31:29,244][Thread-9:123145550225408][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:31:29,245][Thread-9:123145550225408][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:31:29,245][Thread-9:123145550225408][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 23.26057139058948s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:31:34,020][Thread-7:123145560735744][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:31:34,020][Thread-7:123145560735744][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse
    response.begin()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin
    version, status, reason = self._read_status()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 257, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/adapters.py", line 449, in send
    timeout=timeout
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/util/retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/common/jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 472, in __init__
    si = self.server_info()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 146, in __verb
    raise exception
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))
[2020-07-31 16:31:34,024][Thread-7:123145560735744][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-07-31 16:31:51,005][Thread-11:123145571246080][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:31:51,005][Thread-11:123145571246080][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:31:51,006][Thread-11:123145571246080][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 9.06131633670751s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:32:00,308][Thread-11:123145571246080][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:32:00,309][Thread-11:123145571246080][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse
    response.begin()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin
    version, status, reason = self._read_status()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 257, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/adapters.py", line 449, in send
    timeout=timeout
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/util/retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/common/jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 472, in __init__
    si = self.server_info()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 146, in __verb
    raise exception
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))
[2020-07-31 16:32:00,314][Thread-11:123145571246080][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-07-31 16:33:16,790][Thread-11:123145571246080][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:33:16,792][Thread-11:123145571246080][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:33:16,852][Thread-10:123145565990912][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-07-31 16:33:16,853][Thread-10:123145565990912][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-07-31 16:33:16,987][Thread-6:123145555480576][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:33:16,987][Thread-6:123145555480576][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:33:16,987][Thread-6:123145555480576][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 1.1289378181693666s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:33:18,435][Thread-6:123145555480576][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:33:18,435][Thread-6:123145555480576][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:33:18,436][Thread-6:123145555480576][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 29.43250323001567s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:33:48,114][Thread-6:123145555480576][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:33:48,114][Thread-6:123145555480576][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-07-31 16:33:48,114][Thread-6:123145555480576][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 43.49020000380311s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))]
[2020-07-31 16:34:31,848][Thread-6:123145555480576][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer'))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-07-31 16:34:31,849][Thread-6:123145555480576][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse
    response.begin()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin
    version, status, reason = self._read_status()
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/http/client.py", line 257, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [Errno 54] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/adapters.py", line 449, in send
    timeout=timeout
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/urllib3/util/retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/common/jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 472, in __init__
    si = self.server_info()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 146, in __verb
    raise exception
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(54, 'Connection reset by peer')))
[2020-07-31 16:34:31,853][Thread-6:123145555480576][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-08-03 09:59:11,938][Thread-14:123145565990912][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/common/jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 472, in __init__
    si = self.server_info()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 147, in __verb
    raise_on_error(response, verb=verb, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/jira/resilientsession.py", line 57, in raise_on_error
    r.status_code, error, r.url, request=request, response=r, **kwargs)
jira.exceptions.JIRAError: JiraError HTTP 462 url: https://www.test.com
	text: <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>462 Forbidden Region - DOSarrest Internet Security</title>
<link href="/DOAError/assets/css/core.css" rel="stylesheet" type="text/css" />
<link rel="shortcut icon" href="/DOAError/assets/images/favicon.ico" /><link rel="apple-touch-icon" href="/DOAError/assets/images/icon-protection.png" />
<script>
function id_process(n){for(var t=n+"=",r=document.cookie.split(";"),e=0;e<r.length;e++){for(var g=r[e];" "==g.charAt(0);)g=g.substring(1,g.length);if(0==g.indexOf(t))return g.substring(t.length,g.length)}return null};
</script>
</head>

<body onload="myFunction(), myFunction2(), myFunction3()">
<div id="apDiv1">
  <table width="100%" border="0" cellspacing="0" cellpadding="0" bgcolor="#444444">
    <tr>
      <td colspan="3" bg background="/DOAError/assets/images/bottom_separator.png"><img src="/DOAError/assets/images/bottom_separator.png" width="5" height="9" /></td>
    </tr>
    <tr>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="18" /></td>
      <td><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="18" /></td>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="18" /></td>
    </tr>
    <tr>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="55" /></td>
      <td width="148" align="left" valign="top"><table width="960" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr>
          <td align="left" valign="top" class="bottomtext">DOSarrest Internet Security is a cloud based fully managed DDoS protection service.  This request has been blocked by DOSarrest due to the above violation.  If you believe you are getting blocked in error please contact the administrator of 
<span id="host"></span><script>
function myFunction() {
    var x = location.host;
    document.getElementById("host").innerHTML = x;
}
</script><noscript>this website</noscript>
            </span> to resolve this issue.</td>
          <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="55" /></td>
          <td align="right" valign="bottom"><img src="/DOAError/assets/images/da_logo.png" width="148" height="50"  alt="DOSarrest Internet Security | DDoS Protection" title="DOSarrest Internet Security | DDoS Protection" /></a></td>
        </tr>
      </table></td>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="55" /></td>
    </tr>
    <tr>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="18" /></td>
      <td><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="18" /></td>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="18" /></td>
    </tr>
  </table>
</div>
<div id="apDiv2">
  <table width="100%" height="100%" border="0" align="center" cellpadding="0" cellspacing="0">
    <tr>
      <td align="center" valign="middle"><table width="760" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr></tr>
        <tr>
          <td align="center"><table width="730" border="0" cellspacing="0" cellpadding="0">
            <tbody>
              <tr>
                <td width="1"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="1" height="340" alt=""/></td>
                <td width="728" align="center"><table width="728" border="0" cellspacing="0" cellpadding="0">
                  <tbody>
                    <tr>
                      <td width="121" align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="10" height="120" alt=""/></td>
                      <td width="500" align="center" class="errortitle">462</td>
                      <td width="109" align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="10" height="120" alt=""/></td>
                    </tr>
                  </tbody>
                </table>
                  <table width="720" border="0" cellpadding="0" cellspacing="0" background="/DOAError/assets/images/462.png">
                    <tbody>
                      <tr>
                        <td colspan="5"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="62" height="172" alt=""/></td>
                      </tr>
                      <tr>
                        <td width="114" align="center" valign="top" class="imagetext">You</td>
                        <td width="197" align="center" valign="top"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="36" alt=""/></td>
                        <td width="120" align="center" valign="top" class="imagetext">DOSarrest<br />
                          <span style="font-size: small">Protection</span></td>
                        <td width="187" align="center" valign="top">&nbsp;</td>
                        <td width="102" align="center" valign="top" class="imagetext">Host<br />
<span style="font-size: x-small" id="host2"></span><script>
function myFunction2() {
    var x = location.host;
    document.getElementById("host2").innerHTML = x;
}
</script></td>
                      </tr>
                    </tbody>
                  </table></td>
                <td width="1"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="1" height="340" alt=""/></td>
              </tr>
            </tbody>
          </table></td>
        </tr>
        <tr>
          <td align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="8" /></td>
        </tr>
        <tr>
          <td align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
            <tbody>
              <tr>
                <td width="30%" align="left"><table border="0" cellpadding="0" cellspacing="0">
                  <tbody>
                    <tr>
                      <td nowrap="nowrap"><div id="idtext">ID: </div></td>
                      <td nowrap="nowrap"><div id="id_finish"></div>
                        <script>document.getElementById("id_finish").innerHTML=id_process("dis-request-id");</script></td>
                    </tr>
                  </tbody>
                </table></td>
                <td align="center">|</td>
                <td width="30%" align="center"><table border="0" cellpadding="0" cellspacing="0">
                  <tbody>
                    <tr>
                      <td nowrap="nowrap"><div id="idtext"> Your IP Address: </div></td>
                      <td nowrap="nowrap"><div id="addr_finish"></div>
                        <script>document.getElementById("addr_finish").innerHTML=id_process("dis-remote-addr");</script></td>
                    </tr>
                  </tbody>
                </table></td>
                <td align="center">|</td>
                <td width="30%" align="right"><table border="0" cellpadding="0" cellspacing="0">
                  <tbody>
                    <tr>
                      <td nowrap="nowrap"><div id="idtext"> Timestamp: </div></td>
                      <td nowrap="nowrap"><div id="ts_finish"></div>
                        <script>document.getElementById("ts_finish").innerHTML=id_process("dis-timestamp");</script></td>
                    </tr>
                  </tbody>
                </table></td>
              </tr>
            </tbody>
          </table></td>
        </tr>
        <tr>
          <td align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="8" /></td>
        </tr>
        <tr>
          <td align="left" valign="top"><p class="bodytext"><strong>462 Forbidden Region: </strong>Your request for this resource had been blocked.  This resource is not available in your region.</p>
            <p class="bodytext">DOSarrest Internet Security is a cloud based fully managed DDoS protection service.  This request has been blocked by DOSarrest due to the above violation.  If you believe you are getting blocked in error please contact the administrator of 
<span id="host3"></span><script>
function myFunction3() {
    var x = location.host;
    document.getElementById("host3").innerHTML = x;
}
</script><noscript>this website</noscript>
            </span> to resolve this issue.</p></td>
        </tr>
        <tr></tr>
      </table></td>
    </tr>
  </table>
</div>
</body>
</html>

	
	response headers = {'Server': 'nginx/1.16.1', 'Date': 'Mon, 03 Aug 2020 01:59:11 GMT', 'Content-Type': 'text/html', 'Content-Length': '8859', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=20', 'ETag': '"5e5308f6-229b"', 'X-DIS-Request-ID': 'a090416758f7f041a36188bd8840bc2e', 'Set-Cookie': 'dis-request-id=a090416758f7f041a36188bd8840bc2e; secure, dis-timestamp=2020-08-02T18:59:11-07:00; secure, dis-remote-addr=121.69.79.66; secure', 'X-Frame-Options': 'sameorigin'}
	response text = <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>462 Forbidden Region - DOSarrest Internet Security</title>
<link href="/DOAError/assets/css/core.css" rel="stylesheet" type="text/css" />
<link rel="shortcut icon" href="/DOAError/assets/images/favicon.ico" /><link rel="apple-touch-icon" href="/DOAError/assets/images/icon-protection.png" />
<script>
function id_process(n){for(var t=n+"=",r=document.cookie.split(";"),e=0;e<r.length;e++){for(var g=r[e];" "==g.charAt(0);)g=g.substring(1,g.length);if(0==g.indexOf(t))return g.substring(t.length,g.length)}return null};
</script>
</head>

<body onload="myFunction(), myFunction2(), myFunction3()">
<div id="apDiv1">
  <table width="100%" border="0" cellspacing="0" cellpadding="0" bgcolor="#444444">
    <tr>
      <td colspan="3" bg background="/DOAError/assets/images/bottom_separator.png"><img src="/DOAError/assets/images/bottom_separator.png" width="5" height="9" /></td>
    </tr>
    <tr>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="18" /></td>
      <td><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="18" /></td>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="18" /></td>
    </tr>
    <tr>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="55" /></td>
      <td width="148" align="left" valign="top"><table width="960" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr>
          <td align="left" valign="top" class="bottomtext">DOSarrest Internet Security is a cloud based fully managed DDoS protection service.  This request has been blocked by DOSarrest due to the above violation.  If you believe you are getting blocked in error please contact the administrator of 
<span id="host"></span><script>
function myFunction() {
    var x = location.host;
    document.getElementById("host").innerHTML = x;
}
</script><noscript>this website</noscript>
            </span> to resolve this issue.</td>
          <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="55" /></td>
          <td align="right" valign="bottom"><img src="/DOAError/assets/images/da_logo.png" width="148" height="50"  alt="DOSarrest Internet Security | DDoS Protection" title="DOSarrest Internet Security | DDoS Protection" /></a></td>
        </tr>
      </table></td>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="55" /></td>
    </tr>
    <tr>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="18" /></td>
      <td><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="18" /></td>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="18" /></td>
    </tr>
  </table>
</div>
<div id="apDiv2">
  <table width="100%" height="100%" border="0" align="center" cellpadding="0" cellspacing="0">
    <tr>
      <td align="center" valign="middle"><table width="760" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr></tr>
        <tr>
          <td align="center"><table width="730" border="0" cellspacing="0" cellpadding="0">
            <tbody>
              <tr>
                <td width="1"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="1" height="340" alt=""/></td>
                <td width="728" align="center"><table width="728" border="0" cellspacing="0" cellpadding="0">
                  <tbody>
                    <tr>
                      <td width="121" align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="10" height="120" alt=""/></td>
                      <td width="500" align="center" class="errortitle">462</td>
                      <td width="109" align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="10" height="120" alt=""/></td>
                    </tr>
                  </tbody>
                </table>
                  <table width="720" border="0" cellpadding="0" cellspacing="0" background="/DOAError/assets/images/462.png">
                    <tbody>
                      <tr>
                        <td colspan="5"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="62" height="172" alt=""/></td>
                      </tr>
                      <tr>
                        <td width="114" align="center" valign="top" class="imagetext">You</td>
                        <td width="197" align="center" valign="top"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="36" alt=""/></td>
                        <td width="120" align="center" valign="top" class="imagetext">DOSarrest<br />
                          <span style="font-size: small">Protection</span></td>
                        <td width="187" align="center" valign="top">&nbsp;</td>
                        <td width="102" align="center" valign="top" class="imagetext">Host<br />
<span style="font-size: x-small" id="host2"></span><script>
function myFunction2() {
    var x = location.host;
    document.getElementById("host2").innerHTML = x;
}
</script></td>
                      </tr>
                    </tbody>
                  </table></td>
                <td width="1"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="1" height="340" alt=""/></td>
              </tr>
            </tbody>
          </table></td>
        </tr>
        <tr>
          <td align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="8" /></td>
        </tr>
        <tr>
          <td align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
            <tbody>
              <tr>
                <td width="30%" align="left"><table border="0" cellpadding="0" cellspacing="0">
                  <tbody>
                    <tr>
                      <td nowrap="nowrap"><div id="idtext">ID: </div></td>
                      <td nowrap="nowrap"><div id="id_finish"></div>
                        <script>document.getElementById("id_finish").innerHTML=id_process("dis-request-id");</script></td>
                    </tr>
                  </tbody>
                </table></td>
                <td align="center">|</td>
                <td width="30%" align="center"><table border="0" cellpadding="0" cellspacing="0">
                  <tbody>
                    <tr>
                      <td nowrap="nowrap"><div id="idtext"> Your IP Address: </div></td>
                      <td nowrap="nowrap"><div id="addr_finish"></div>
                        <script>document.getElementById("addr_finish").innerHTML=id_process("dis-remote-addr");</script></td>
                    </tr>
                  </tbody>
                </table></td>
                <td align="center">|</td>
                <td width="30%" align="right"><table border="0" cellpadding="0" cellspacing="0">
                  <tbody>
                    <tr>
                      <td nowrap="nowrap"><div id="idtext"> Timestamp: </div></td>
                      <td nowrap="nowrap"><div id="ts_finish"></div>
                        <script>document.getElementById("ts_finish").innerHTML=id_process("dis-timestamp");</script></td>
                    </tr>
                  </tbody>
                </table></td>
              </tr>
            </tbody>
          </table></td>
        </tr>
        <tr>
          <td align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="8" /></td>
        </tr>
        <tr>
          <td align="left" valign="top"><p class="bodytext"><strong>462 Forbidden Region: </strong>Your request for this resource had been blocked.  This resource is not available in your region.</p>
            <p class="bodytext">DOSarrest Internet Security is a cloud based fully managed DDoS protection service.  This request has been blocked by DOSarrest due to the above violation.  If you believe you are getting blocked in error please contact the administrator of 
<span id="host3"></span><script>
function myFunction3() {
    var x = location.host;
    document.getElementById("host3").innerHTML = x;
}
</script><noscript>this website</noscript>
            </span> to resolve this issue.</p></td>
        </tr>
        <tr></tr>
      </table></td>
    </tr>
  </table>
</div>
</body>
</html>

[2020-08-03 09:59:11,940][Thread-14:123145565990912][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-08-03 09:59:19,892][Thread-13:123145560735744][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 583, in connect
    **kwargs)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 727, in create_connection
    raise err
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 716, in create_connection
    sock.connect(sa)
socket.timeout: timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 216, in ensure_connection
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 194, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/mysql/base.py", line 227, in get_new_connection
    return Database.connect(**conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 325, in __init__
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 630, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '192.168.2.38' (timed out)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 393, in get
    num = len(clone)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 250, in __len__
    self._fetch_all()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 1186, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 54, in __iter__
    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/sql/compiler.py", line 1063, in execute_sql
    cursor = self.connection.cursor()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 255, in cursor
    return self._cursor()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 232, in _cursor
    self.ensure_connection()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 216, in ensure_connection
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/utils.py", line 89, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 216, in ensure_connection
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 194, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/mysql/base.py", line 227, in get_new_connection
    return Database.connect(**conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 325, in __init__
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 630, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '192.168.2.38' (timed out)")
[2020-08-03 09:59:19,893][Thread-12:123145555480576][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 583, in connect
    **kwargs)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 727, in create_connection
    raise err
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 716, in create_connection
    sock.connect(sa)
socket.timeout: timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 216, in ensure_connection
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 194, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/mysql/base.py", line 227, in get_new_connection
    return Database.connect(**conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 325, in __init__
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 630, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '192.168.2.38' (timed out)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 393, in get
    num = len(clone)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 250, in __len__
    self._fetch_all()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 1186, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 54, in __iter__
    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/sql/compiler.py", line 1063, in execute_sql
    cursor = self.connection.cursor()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 255, in cursor
    return self._cursor()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 232, in _cursor
    self.ensure_connection()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 216, in ensure_connection
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/utils.py", line 89, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 216, in ensure_connection
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 194, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/mysql/base.py", line 227, in get_new_connection
    return Database.connect(**conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 325, in __init__
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 630, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '192.168.2.38' (timed out)")
[2020-08-03 09:59:19,916][Thread-13:123145560735744][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-03 09:59:19,918][Thread-12:123145555480576][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-03 09:59:28,277][Thread-14:123145565990912][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/project/project_list]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 583, in connect
    **kwargs)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 727, in create_connection
    raise err
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 716, in create_connection
    sock.connect(sa)
socket.timeout: timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 216, in ensure_connection
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 194, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/mysql/base.py", line 227, in get_new_connection
    return Database.connect(**conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 325, in __init__
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 630, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '192.168.2.38' (timed out)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 483, in dispatch
    self.initial(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 400, in initial
    self.perform_authentication(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 326, in perform_authentication
    request.user
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/request.py", line 223, in user
    self._authenticate()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/request.py", line 376, in _authenticate
    user_auth_tuple = authenticator.authenticate(self)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/authentication.py", line 192, in authenticate
    return self.authenticate_credentials(token)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/authentication.py", line 197, in authenticate_credentials
    token = model.objects.select_related('user').get(key=key)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 393, in get
    num = len(clone)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 250, in __len__
    self._fetch_all()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 1186, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 54, in __iter__
    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/sql/compiler.py", line 1063, in execute_sql
    cursor = self.connection.cursor()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 255, in cursor
    return self._cursor()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 232, in _cursor
    self.ensure_connection()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 216, in ensure_connection
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/utils.py", line 89, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 216, in ensure_connection
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 194, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/mysql/base.py", line 227, in get_new_connection
    return Database.connect(**conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 325, in __init__
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 630, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '192.168.2.38' (timed out)")
[2020-08-03 09:59:28,289][Thread-14:123145565990912][task_id:django.server][basehttp.py:154][ERROR]["GET /api/project/project_list?page=1&name= HTTP/1.1" 500 27]
[2020-08-03 09:59:35,698][Thread-12:123145555480576][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/user/login]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 583, in connect
    **kwargs)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 727, in create_connection
    raise err
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 716, in create_connection
    sock.connect(sa)
socket.timeout: timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 216, in ensure_connection
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 194, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/mysql/base.py", line 227, in get_new_connection
    return Database.connect(**conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 325, in __init__
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 630, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '192.168.2.38' (timed out)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/user.py", line 27, in post
    serializer.is_valid(raise_exception=True)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/serializers.py", line 236, in is_valid
    self._validated_data = self.run_validation(self.initial_data)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/serializers.py", line 437, in run_validation
    value = self.validate(value)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/authtoken/serializers.py", line 21, in validate
    username=username, password=password)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/contrib/auth/__init__.py", line 73, in authenticate
    user = backend.authenticate(request, **credentials)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/contrib/auth/backends.py", line 16, in authenticate
    user = UserModel._default_manager.get_by_natural_key(username)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/contrib/auth/base_user.py", line 44, in get_by_natural_key
    return self.get(**{self.model.USERNAME_FIELD: username})
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 393, in get
    num = len(clone)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 250, in __len__
    self._fetch_all()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 1186, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 54, in __iter__
    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/sql/compiler.py", line 1063, in execute_sql
    cursor = self.connection.cursor()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 255, in cursor
    return self._cursor()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 232, in _cursor
    self.ensure_connection()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 216, in ensure_connection
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/utils.py", line 89, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 216, in ensure_connection
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 194, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/mysql/base.py", line 227, in get_new_connection
    return Database.connect(**conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 325, in __init__
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 630, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '192.168.2.38' (timed out)")
[2020-08-03 09:59:35,712][Thread-12:123145555480576][task_id:django.server][basehttp.py:154][ERROR]["POST /api/user/login HTTP/1.1" 500 27]
[2020-08-03 09:59:38,323][Thread-14:123145565990912][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/user/login]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 583, in connect
    **kwargs)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 727, in create_connection
    raise err
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 716, in create_connection
    sock.connect(sa)
socket.timeout: timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 216, in ensure_connection
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 194, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/mysql/base.py", line 227, in get_new_connection
    return Database.connect(**conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 325, in __init__
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 630, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '192.168.2.38' (timed out)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/user.py", line 27, in post
    serializer.is_valid(raise_exception=True)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/serializers.py", line 236, in is_valid
    self._validated_data = self.run_validation(self.initial_data)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/serializers.py", line 437, in run_validation
    value = self.validate(value)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/authtoken/serializers.py", line 21, in validate
    username=username, password=password)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/contrib/auth/__init__.py", line 73, in authenticate
    user = backend.authenticate(request, **credentials)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/contrib/auth/backends.py", line 16, in authenticate
    user = UserModel._default_manager.get_by_natural_key(username)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/contrib/auth/base_user.py", line 44, in get_by_natural_key
    return self.get(**{self.model.USERNAME_FIELD: username})
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 393, in get
    num = len(clone)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 250, in __len__
    self._fetch_all()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 1186, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 54, in __iter__
    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/sql/compiler.py", line 1063, in execute_sql
    cursor = self.connection.cursor()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 255, in cursor
    return self._cursor()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 232, in _cursor
    self.ensure_connection()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 216, in ensure_connection
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/utils.py", line 89, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 216, in ensure_connection
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 194, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/mysql/base.py", line 227, in get_new_connection
    return Database.connect(**conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 325, in __init__
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 630, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '192.168.2.38' (timed out)")
[2020-08-03 09:59:38,325][Thread-14:123145565990912][task_id:django.server][basehttp.py:154][ERROR]["POST /api/user/login HTTP/1.1" 500 27]
[2020-08-03 09:59:41,386][Thread-13:123145560735744][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/user/login]
Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 583, in connect
    **kwargs)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 727, in create_connection
    raise err
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.7/lib/python3.7/socket.py", line 716, in create_connection
    sock.connect(sa)
socket.timeout: timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 216, in ensure_connection
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 194, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/mysql/base.py", line 227, in get_new_connection
    return Database.connect(**conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 325, in __init__
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 630, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '192.168.2.38' (timed out)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/core/handlers/base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/yin/PycharmProjects/Biomind_Test_Platform/TestPlatform/api/user.py", line 27, in post
    serializer.is_valid(raise_exception=True)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/serializers.py", line 236, in is_valid
    self._validated_data = self.run_validation(self.initial_data)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/serializers.py", line 437, in run_validation
    value = self.validate(value)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/rest_framework/authtoken/serializers.py", line 21, in validate
    username=username, password=password)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/contrib/auth/__init__.py", line 73, in authenticate
    user = backend.authenticate(request, **credentials)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/contrib/auth/backends.py", line 16, in authenticate
    user = UserModel._default_manager.get_by_natural_key(username)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/contrib/auth/base_user.py", line 44, in get_by_natural_key
    return self.get(**{self.model.USERNAME_FIELD: username})
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 393, in get
    num = len(clone)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 250, in __len__
    self._fetch_all()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 1186, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/query.py", line 54, in __iter__
    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/models/sql/compiler.py", line 1063, in execute_sql
    cursor = self.connection.cursor()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 255, in cursor
    return self._cursor()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 232, in _cursor
    self.ensure_connection()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 216, in ensure_connection
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/utils.py", line 89, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 216, in ensure_connection
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/base/base.py", line 194, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/django/db/backends/mysql/base.py", line 227, in get_new_connection
    return Database.connect(**conn_params)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/__init__.py", line 94, in Connect
    return Connection(*args, **kwargs)
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 325, in __init__
    self.connect()
  File "/Users/yin/.local/share/virtualenvs/Biomind_Test_Platform-aAXBu3nT/lib/python3.7/site-packages/pymysql/connections.py", line 630, in connect
    raise exc
django.db.utils.OperationalError: (2003, "Can't connect to MySQL server on '192.168.2.38' (timed out)")
[2020-08-03 09:59:41,387][Thread-13:123145560735744][task_id:django.server][basehttp.py:154][ERROR]["POST /api/user/login HTTP/1.1" 500 27]
[2020-08-10 17:46:35,444][Thread-2:10440][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-10 17:46:35,605][Thread-2:10440][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-10 17:46:35,664][Thread-3:8308][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-10 17:46:35,665][Thread-3:8308][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-10 17:46:35,961][Thread-4:3888][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-10 17:46:35,962][Thread-4:3888][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-10 17:46:35,962][Thread-4:3888][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 11.92096789960261s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-10 17:46:48,117][Thread-4:3888][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-10 17:46:48,117][Thread-4:3888][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-10 17:46:48,117][Thread-4:3888][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 26.686128146981055s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-10 17:47:15,035][Thread-4:3888][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-10 17:47:15,035][Thread-4:3888][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-10 17:47:15,036][Thread-4:3888][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 22.55981825435176s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-10 17:47:37,826][Thread-4:3888][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-10 17:47:37,826][Thread-4:3888][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "C:\Python\Python37\lib\http\client.py", line 1344, in getresponse
    response.begin()
  File "C:\Python\Python37\lib\http\client.py", line 306, in begin
    version, status, reason = self._read_status()
  File "C:\Python\Python37\lib\http\client.py", line 267, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "C:\Python\Python37\lib\socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 449, in send
    timeout=timeout
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "D:\workspace\venv\lib\site-packages\urllib3\util\retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\common\jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 472, in __init__
    si = self.server_info()
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 146, in __verb
    raise exception
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))
[2020-08-10 17:47:38,004][Thread-4:3888][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-08-10 18:16:44,826][Thread-5:10392][task_id:django.request][log.py:228][ERROR][Internal Server Error: /]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 156, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 154, in _get_response
    response = response.render()
  File "D:\workspace\venv\lib\site-packages\django\template\response.py", line 106, in render
    self.content = self.rendered_content
  File "D:\workspace\venv\lib\site-packages\django\template\response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "D:\workspace\venv\lib\site-packages\django\template\response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "D:\workspace\venv\lib\site-packages\django\template\loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: index.html
[2020-08-10 18:16:44,876][Thread-5:10392][task_id:django.server][basehttp.py:154][ERROR]["GET / HTTP/1.1" 500 27]
[2020-08-10 18:17:02,885][Thread-8:10208][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-10 18:17:02,886][Thread-8:10208][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-10 18:17:02,920][Thread-7:10620][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-10 18:17:02,921][Thread-7:10620][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-10 18:17:04,113][Thread-9:8016][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-10 18:17:04,114][Thread-9:8016][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-10 18:17:04,114][Thread-9:8016][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 6.937275094711581s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-10 18:17:12,301][Thread-9:8016][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-10 18:17:12,301][Thread-9:8016][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-10 18:17:12,301][Thread-9:8016][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 33.48711601395983s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-10 18:17:46,120][Thread-9:8016][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-10 18:17:46,120][Thread-9:8016][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-10 18:17:46,120][Thread-9:8016][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 2.433951775681593s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-10 18:17:48,829][Thread-9:8016][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-10 18:17:48,830][Thread-9:8016][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "C:\Python\Python37\lib\http\client.py", line 1344, in getresponse
    response.begin()
  File "C:\Python\Python37\lib\http\client.py", line 306, in begin
    version, status, reason = self._read_status()
  File "C:\Python\Python37\lib\http\client.py", line 267, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "C:\Python\Python37\lib\socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 449, in send
    timeout=timeout
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "D:\workspace\venv\lib\site-packages\urllib3\util\retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\common\jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 472, in __init__
    si = self.server_info()
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 146, in __verb
    raise exception
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))
[2020-08-10 18:17:48,832][Thread-9:8016][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-08-10 18:21:31,775][Thread-9:8016][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-10 18:21:31,776][Thread-9:8016][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-10 18:21:31,787][Thread-7:10620][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-10 18:21:31,789][Thread-7:10620][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-10 18:21:32,044][Thread-9:8016][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-10 18:21:32,044][Thread-9:8016][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-10 18:21:32,045][Thread-9:8016][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 13.179112350133197s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-10 18:21:46,462][Thread-9:8016][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-10 18:21:46,462][Thread-9:8016][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-10 18:21:46,462][Thread-9:8016][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 34.29702404114587s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-10 18:22:20,987][Thread-9:8016][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-10 18:22:20,987][Thread-9:8016][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-10 18:22:20,988][Thread-9:8016][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 37.0061582979352s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-10 18:22:58,226][Thread-9:8016][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-10 18:22:58,226][Thread-9:8016][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "C:\Python\Python37\lib\http\client.py", line 1344, in getresponse
    response.begin()
  File "C:\Python\Python37\lib\http\client.py", line 306, in begin
    version, status, reason = self._read_status()
  File "C:\Python\Python37\lib\http\client.py", line 267, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "C:\Python\Python37\lib\socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 449, in send
    timeout=timeout
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "D:\workspace\venv\lib\site-packages\urllib3\util\retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\common\jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 472, in __init__
    si = self.server_info()
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 146, in __verb
    raise exception
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))
[2020-08-10 18:22:58,228][Thread-9:8016][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-08-11 10:06:25,671][Thread-14:2676][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 10:06:25,672][Thread-14:2676][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 10:06:25,749][Thread-15:10544][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 10:06:25,751][Thread-15:10544][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 10:06:25,817][Thread-13:3548][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 10:06:25,817][Thread-13:3548][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 10:06:25,817][Thread-13:3548][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 15.759381168771416s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 10:06:41,855][Thread-13:3548][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 10:06:41,856][Thread-13:3548][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 10:06:41,856][Thread-13:3548][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 23.137305981668128s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 10:07:05,264][Thread-13:3548][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 10:07:05,265][Thread-13:3548][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 10:07:05,265][Thread-13:3548][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 14.427933439804853s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 10:07:20,024][Thread-13:3548][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 10:07:20,025][Thread-13:3548][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "C:\Python\Python37\lib\http\client.py", line 1344, in getresponse
    response.begin()
  File "C:\Python\Python37\lib\http\client.py", line 306, in begin
    version, status, reason = self._read_status()
  File "C:\Python\Python37\lib\http\client.py", line 267, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "C:\Python\Python37\lib\socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 449, in send
    timeout=timeout
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "D:\workspace\venv\lib\site-packages\urllib3\util\retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\common\jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 472, in __init__
    si = self.server_info()
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 146, in __verb
    raise exception
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))
[2020-08-11 10:07:20,026][Thread-13:3548][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-08-11 10:09:23,425][Thread-15:10544][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 10:09:23,426][Thread-15:10544][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 10:09:23,461][Thread-13:3548][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 10:09:23,461][Thread-13:3548][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 10:09:23,614][Thread-14:2676][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 10:09:23,615][Thread-14:2676][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 10:09:23,615][Thread-14:2676][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 18.464408975830743s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 10:09:42,309][Thread-14:2676][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 10:09:42,309][Thread-14:2676][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 10:09:42,310][Thread-14:2676][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 31.299340728373167s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 10:10:14,879][Thread-14:2676][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 10:10:14,879][Thread-14:2676][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 10:10:14,879][Thread-14:2676][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 37.40649556568626s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 10:10:52,642][Thread-14:2676][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 10:10:52,643][Thread-14:2676][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "C:\Python\Python37\lib\http\client.py", line 1344, in getresponse
    response.begin()
  File "C:\Python\Python37\lib\http\client.py", line 306, in begin
    version, status, reason = self._read_status()
  File "C:\Python\Python37\lib\http\client.py", line 267, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "C:\Python\Python37\lib\socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 449, in send
    timeout=timeout
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "D:\workspace\venv\lib\site-packages\urllib3\util\retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\common\jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 472, in __init__
    si = self.server_info()
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 146, in __verb
    raise exception
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))
[2020-08-11 10:10:52,645][Thread-14:2676][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-08-11 10:22:33,578][Thread-2:3788][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 10:22:33,641][Thread-2:3788][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 10:22:33,602][Thread-3:7180][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 10:22:33,642][Thread-3:7180][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 10:22:33,820][Thread-4:10596][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 10:22:33,820][Thread-4:10596][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 10:22:33,820][Thread-4:10596][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 4.979791309817319s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 10:22:39,124][Thread-4:10596][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 10:22:39,125][Thread-4:10596][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 10:22:39,125][Thread-4:10596][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 2.415941748539363s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 10:22:41,767][Thread-4:10596][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 10:22:41,767][Thread-4:10596][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 10:22:41,767][Thread-4:10596][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 58.34604640726068s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 10:23:40,345][Thread-4:10596][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 10:23:40,346][Thread-4:10596][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "C:\Python\Python37\lib\http\client.py", line 1344, in getresponse
    response.begin()
  File "C:\Python\Python37\lib\http\client.py", line 306, in begin
    version, status, reason = self._read_status()
  File "C:\Python\Python37\lib\http\client.py", line 267, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "C:\Python\Python37\lib\socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 449, in send
    timeout=timeout
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "D:\workspace\venv\lib\site-packages\urllib3\util\retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\common\jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 472, in __init__
    si = self.server_info()
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 146, in __verb
    raise exception
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))
[2020-08-11 10:23:40,414][Thread-4:10596][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-08-11 10:39:01,187][Thread-5:7572][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 10:39:01,191][Thread-5:7572][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 10:39:01,201][Thread-6:9836][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 10:39:01,202][Thread-6:9836][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 10:39:02,443][Thread-7:9388][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 10:39:02,443][Thread-7:9388][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 10:39:02,444][Thread-7:9388][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 12.712202408722531s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 10:39:12,540][Thread-5:7572][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 10:39:12,540][Thread-6:9836][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 10:39:12,541][Thread-5:7572][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 10:39:12,542][Thread-6:9836][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 10:39:15,388][Thread-7:9388][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 10:39:15,388][Thread-7:9388][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 10:39:15,389][Thread-7:9388][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 9.439305050175948s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 10:39:25,062][Thread-7:9388][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 10:39:25,062][Thread-7:9388][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 10:39:25,062][Thread-7:9388][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 21.7153905175442s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 10:39:32,762][Thread-6:9836][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 10:39:32,762][Thread-6:9836][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 10:39:32,762][Thread-6:9836][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 1.5311851207296212s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 10:39:34,525][Thread-6:9836][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 10:39:34,525][Thread-6:9836][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 10:39:34,525][Thread-6:9836][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 3.934840826795578s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 10:39:38,706][Thread-6:9836][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 10:39:38,706][Thread-6:9836][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 10:39:38,706][Thread-6:9836][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 46.80806907345632s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 10:39:47,005][Thread-7:9388][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 10:39:47,006][Thread-7:9388][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "C:\Python\Python37\lib\http\client.py", line 1344, in getresponse
    response.begin()
  File "C:\Python\Python37\lib\http\client.py", line 306, in begin
    version, status, reason = self._read_status()
  File "C:\Python\Python37\lib\http\client.py", line 267, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "C:\Python\Python37\lib\socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 449, in send
    timeout=timeout
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "D:\workspace\venv\lib\site-packages\urllib3\util\retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\common\jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 472, in __init__
    si = self.server_info()
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 146, in __verb
    raise exception
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))
[2020-08-11 10:39:47,007][Thread-7:9388][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-08-11 10:40:25,759][Thread-6:9836][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 10:40:25,759][Thread-6:9836][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "C:\Python\Python37\lib\http\client.py", line 1344, in getresponse
    response.begin()
  File "C:\Python\Python37\lib\http\client.py", line 306, in begin
    version, status, reason = self._read_status()
  File "C:\Python\Python37\lib\http\client.py", line 267, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "C:\Python\Python37\lib\socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 449, in send
    timeout=timeout
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "D:\workspace\venv\lib\site-packages\urllib3\util\retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\common\jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 472, in __init__
    si = self.server_info()
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 146, in __verb
    raise exception
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))
[2020-08-11 10:40:25,762][Thread-6:9836][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-08-11 11:14:32,215][Thread-8:8428][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 11:14:32,216][Thread-9:9236][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 11:14:32,217][Thread-8:8428][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 11:14:32,218][Thread-9:9236][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 11:14:33,648][Thread-10:4252][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 11:14:33,648][Thread-10:4252][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 11:14:33,648][Thread-10:4252][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 17.767664917693516s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 11:14:50,379][Thread-9:9236][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 11:14:50,380][Thread-8:8428][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 11:14:50,380][Thread-9:9236][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 11:14:50,381][Thread-8:8428][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 11:14:51,748][Thread-10:4252][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 11:14:51,748][Thread-10:4252][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 11:14:51,748][Thread-10:4252][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 7.075106926096462s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 11:15:00,077][Thread-10:4252][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 11:15:00,077][Thread-10:4252][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 11:15:00,077][Thread-10:4252][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 38.717384141847184s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 11:15:11,629][Thread-8:8428][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 11:15:11,629][Thread-8:8428][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 11:15:11,630][Thread-8:8428][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 3.5793343614812634s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 11:15:16,477][Thread-8:8428][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 11:15:16,478][Thread-8:8428][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 11:15:16,478][Thread-8:8428][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 18.602664554848207s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 11:15:36,332][Thread-8:8428][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 11:15:36,332][Thread-8:8428][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 11:15:36,332][Thread-8:8428][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 2.3840215500068895s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 11:15:39,041][Thread-8:8428][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 11:15:39,041][Thread-8:8428][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "C:\Python\Python37\lib\http\client.py", line 1344, in getresponse
    response.begin()
  File "C:\Python\Python37\lib\http\client.py", line 306, in begin
    version, status, reason = self._read_status()
  File "C:\Python\Python37\lib\http\client.py", line 267, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "C:\Python\Python37\lib\socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 449, in send
    timeout=timeout
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "D:\workspace\venv\lib\site-packages\urllib3\util\retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\common\jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 472, in __init__
    si = self.server_info()
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 146, in __verb
    raise exception
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))
[2020-08-11 11:15:39,042][Thread-8:8428][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-08-11 11:15:40,026][Thread-10:4252][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 11:15:40,027][Thread-10:4252][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "C:\Python\Python37\lib\http\client.py", line 1344, in getresponse
    response.begin()
  File "C:\Python\Python37\lib\http\client.py", line 306, in begin
    version, status, reason = self._read_status()
  File "C:\Python\Python37\lib\http\client.py", line 267, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "C:\Python\Python37\lib\socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 449, in send
    timeout=timeout
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "D:\workspace\venv\lib\site-packages\urllib3\util\retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\common\jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 472, in __init__
    si = self.server_info()
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 146, in __verb
    raise exception
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))
[2020-08-11 11:15:40,028][Thread-10:4252][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-08-11 11:25:01,428][Thread-11:1124][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 11:25:01,429][Thread-11:1124][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 11:25:01,446][Thread-12:4256][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 11:25:01,447][Thread-12:4256][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 11:25:02,416][Thread-13:8084][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 11:25:02,417][Thread-13:8084][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 11:25:02,417][Thread-13:8084][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 11.181673884383297s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 11:25:16,846][Thread-13:8084][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 11:25:16,846][Thread-13:8084][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 11:25:16,846][Thread-13:8084][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 21.105538941369844s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 11:25:38,279][Thread-13:8084][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 11:25:38,279][Thread-13:8084][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 11:25:38,279][Thread-13:8084][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 7.074600935792281s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 11:25:45,589][Thread-13:8084][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 11:25:45,590][Thread-13:8084][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "C:\Python\Python37\lib\http\client.py", line 1344, in getresponse
    response.begin()
  File "C:\Python\Python37\lib\http\client.py", line 306, in begin
    version, status, reason = self._read_status()
  File "C:\Python\Python37\lib\http\client.py", line 267, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "C:\Python\Python37\lib\socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 449, in send
    timeout=timeout
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "D:\workspace\venv\lib\site-packages\urllib3\util\retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\common\jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 472, in __init__
    si = self.server_info()
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 146, in __verb
    raise exception
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))
[2020-08-11 11:25:45,591][Thread-13:8084][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-08-11 11:38:14,034][Thread-15:8712][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 11:38:14,036][Thread-15:8712][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 11:38:14,070][Thread-14:580][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 11:38:14,071][Thread-14:580][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 11:38:15,295][Thread-16:6752][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 11:38:15,295][Thread-16:6752][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 11:38:15,295][Thread-16:6752][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 16.065285709420692s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 11:38:31,588][Thread-16:6752][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 11:38:31,588][Thread-16:6752][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 11:38:31,588][Thread-16:6752][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 11.0373491864557s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 11:38:45,862][Thread-16:6752][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 11:38:45,862][Thread-16:6752][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 11:38:45,862][Thread-16:6752][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 18.60498149583711s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 11:39:04,696][Thread-16:6752][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 11:39:04,697][Thread-16:6752][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "C:\Python\Python37\lib\http\client.py", line 1344, in getresponse
    response.begin()
  File "C:\Python\Python37\lib\http\client.py", line 306, in begin
    version, status, reason = self._read_status()
  File "C:\Python\Python37\lib\http\client.py", line 267, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "C:\Python\Python37\lib\socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 449, in send
    timeout=timeout
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "D:\workspace\venv\lib\site-packages\urllib3\util\retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\common\jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 472, in __init__
    si = self.server_info()
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 146, in __verb
    raise exception
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))
[2020-08-11 11:39:04,698][Thread-16:6752][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-08-11 11:39:48,880][Thread-14:580][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 11:39:48,881][Thread-16:6752][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 11:39:48,882][Thread-14:580][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 11:39:48,884][Thread-16:6752][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 11:39:49,100][Thread-15:8712][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 11:39:49,100][Thread-15:8712][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 11:39:49,100][Thread-15:8712][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 10.385222264223753s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 11:39:59,776][Thread-15:8712][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 11:39:59,776][Thread-15:8712][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 11:39:59,776][Thread-15:8712][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 0.5861151766004458s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 11:40:00,596][Thread-15:8712][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 11:40:00,596][Thread-15:8712][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 11:40:00,596][Thread-15:8712][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 50.22796498214918s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 11:40:54,069][Thread-15:8712][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 11:40:54,070][Thread-15:8712][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "C:\Python\Python37\lib\http\client.py", line 1344, in getresponse
    response.begin()
  File "C:\Python\Python37\lib\http\client.py", line 306, in begin
    version, status, reason = self._read_status()
  File "C:\Python\Python37\lib\http\client.py", line 267, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "C:\Python\Python37\lib\socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 449, in send
    timeout=timeout
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "D:\workspace\venv\lib\site-packages\urllib3\util\retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\common\jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 472, in __init__
    si = self.server_info()
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 146, in __verb
    raise exception
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))
[2020-08-11 11:40:54,072][Thread-15:8712][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-08-11 13:47:33,317][Thread-2:7824][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 13:47:33,318][Thread-3:9924][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 13:47:33,320][Thread-2:7824][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 13:47:33,321][Thread-3:9924][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 13:47:33,556][Thread-4:4920][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 13:47:33,557][Thread-4:4920][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 13:47:33,557][Thread-4:4920][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 13.788722598906064s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 13:47:47,590][Thread-4:4920][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 13:47:47,590][Thread-4:4920][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 13:47:47,590][Thread-4:4920][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 33.233539680106475s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 13:48:21,054][Thread-4:4920][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 13:48:21,054][Thread-4:4920][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 13:48:21,055][Thread-4:4920][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 3.3602928807830423s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 13:48:24,641][Thread-4:4920][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 13:48:24,642][Thread-4:4920][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "C:\Python\Python37\lib\http\client.py", line 1344, in getresponse
    response.begin()
  File "C:\Python\Python37\lib\http\client.py", line 306, in begin
    version, status, reason = self._read_status()
  File "C:\Python\Python37\lib\http\client.py", line 267, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "C:\Python\Python37\lib\socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 449, in send
    timeout=timeout
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "D:\workspace\venv\lib\site-packages\urllib3\util\retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\common\jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 472, in __init__
    si = self.server_info()
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 146, in __verb
    raise exception
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))
[2020-08-11 13:48:24,646][Thread-4:4920][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-08-11 13:50:55,761][Thread-3:9924][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 13:50:55,763][Thread-3:9924][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 13:50:55,779][Thread-4:4920][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 13:50:55,780][Thread-4:4920][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 13:50:56,020][Thread-2:7824][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 13:50:56,021][Thread-2:7824][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 13:50:56,021][Thread-2:7824][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 0.19267899911455943s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 13:50:56,451][Thread-2:7824][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 13:50:56,451][Thread-2:7824][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 13:50:56,451][Thread-2:7824][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 39.970560916264695s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 13:51:36,740][Thread-2:7824][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 13:51:36,740][Thread-2:7824][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 13:51:36,741][Thread-2:7824][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 35.118491355846125s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 13:51:37,194][Thread-5:6656][task_id:root][duration_send.py:285][INFO][start to send: path[/home/biomind/testDatas/CTA]]
[2020-08-11 13:51:38,609][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:48.902Z', 'endTime': '2020-08-11T06:04:48.924Z', 'duration': 22079777, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 3075127, 'duration': 18553465}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 21698103, 'duration': 306951}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 21823655, 'duration': 49384}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 21887770, 'duration': 23560}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 21918096, 'duration': 30140}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 21964239, 'duration': 17229}]}}}}]
[2020-08-11 13:51:38,933][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:49.242Z', 'endTime': '2020-08-11T06:04:49.248Z', 'duration': 5978296, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 1614831, 'duration': 4173902}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 5822048, 'duration': 126716}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 5878123, 'duration': 13498}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 5898676, 'duration': 11662}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 5915076, 'duration': 7550}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 5928891, 'duration': 6855}]}}}}]
[2020-08-11 13:51:38,981][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:49.291Z', 'endTime': '2020-08-11T06:04:49.296Z', 'duration': 5028008, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 1549065, 'duration': 3261068}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 4840440, 'duration': 150026}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 4911674, 'duration': 19098}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 4940530, 'duration': 12495}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 4957497, 'duration': 7115}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 4970974, 'duration': 6292}]}}}}]
[2020-08-11 13:51:39,036][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:49.347Z', 'endTime': '2020-08-11T06:04:49.352Z', 'duration': 4822447, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 1199185, 'duration': 3411223}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 4650454, 'duration': 137785}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 4703764, 'duration': 11704}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 4721400, 'duration': 10082}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 4735488, 'duration': 6284}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 4746980, 'duration': 12002}]}}}}]
[2020-08-11 13:51:39,128][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:49.434Z', 'endTime': '2020-08-11T06:04:49.443Z', 'duration': 9604937, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 1173942, 'duration': 8240201}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 9453143, 'duration': 121752}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 9506554, 'duration': 14980}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 9527990, 'duration': 10858}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 9543408, 'duration': 7244}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 9556312, 'duration': 6551}]}}}}]
[2020-08-11 13:51:39,174][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:49.485Z', 'endTime': '2020-08-11T06:04:49.489Z', 'duration': 4634752, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 1095626, 'duration': 3312696}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 4444881, 'duration': 157809}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 4517016, 'duration': 15975}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 4542496, 'duration': 13115}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 4561591, 'duration': 8595}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 4578373, 'duration': 8473}]}}}}]
[2020-08-11 13:51:39,215][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:49.527Z', 'endTime': '2020-08-11T06:04:49.531Z', 'duration': 4420439, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 965209, 'duration': 3242551}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 4243012, 'duration': 143845}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 4303434, 'duration': 15033}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 4327285, 'duration': 13039}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 4345936, 'duration': 9053}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 4362986, 'duration': 8798}]}}}}]
[2020-08-11 13:51:39,253][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:49.566Z', 'endTime': '2020-08-11T06:04:49.569Z', 'duration': 2936450, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 156442, 'duration': 2605017}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2795208, 'duration': 116057}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2845662, 'duration': 12957}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2865796, 'duration': 10475}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2881000, 'duration': 7643}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2893701, 'duration': 4414}]}}}}]
[2020-08-11 13:51:39,323][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:49.635Z', 'endTime': '2020-08-11T06:04:49.639Z', 'duration': 3829382, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 197309, 'duration': 3445676}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3672685, 'duration': 129001}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3716048, 'duration': 9772}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3731360, 'duration': 16532}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3756515, 'duration': 12239}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3777467, 'duration': 8737}]}}}}]
[2020-08-11 13:51:39,600][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:49.911Z', 'endTime': '2020-08-11T06:04:49.915Z', 'duration': 4302246, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 201405, 'duration': 3847799}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 4091359, 'duration': 175083}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 4158899, 'duration': 19356}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 4190354, 'duration': 16109}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 4214514, 'duration': 11642}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 4236566, 'duration': 11108}]}}}}]
[2020-08-11 13:51:39,653][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:49.965Z', 'endTime': '2020-08-11T06:04:49.969Z', 'duration': 4033524, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 326220, 'duration': 3495325}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3852433, 'duration': 154786}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3897917, 'duration': 10703}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3917420, 'duration': 16820}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3948325, 'duration': 12262}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3969874, 'duration': 22245}]}}}}]
[2020-08-11 13:51:39,708][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:50.020Z', 'endTime': '2020-08-11T06:04:50.024Z', 'duration': 3921793, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 182785, 'duration': 3574004}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3797771, 'duration': 100692}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3850901, 'duration': 9154}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3865060, 'duration': 7611}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3875907, 'duration': 4781}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3884967, 'duration': 4299}]}}}}]
[2020-08-11 13:51:39,817][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:50.090Z', 'endTime': '2020-08-11T06:04:50.133Z', 'duration': 42307233, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 160635, 'duration': 41995918}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 42195338, 'duration': 86215}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 42238400, 'duration': 7426}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 42250294, 'duration': 7409}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 42260504, 'duration': 4570}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 42268686, 'duration': 3772}]}}}}]
[2020-08-11 13:51:39,857][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:50.171Z', 'endTime': '2020-08-11T06:04:50.174Z', 'duration': 2636176, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 141888, 'duration': 2347474}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2510127, 'duration': 100297}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2550209, 'duration': 12592}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2569268, 'duration': 10007}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2583697, 'duration': 6185}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2595719, 'duration': 5935}]}}}}]
[2020-08-11 13:51:39,970][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:50.282Z', 'endTime': '2020-08-11T06:04:50.286Z', 'duration': 3604467, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 248275, 'duration': 3146619}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3428266, 'duration': 147106}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3483678, 'duration': 15156}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3506669, 'duration': 12250}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3525014, 'duration': 8598}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3540816, 'duration': 7027}]}}}}]
[2020-08-11 13:51:40,009][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:50.322Z', 'endTime': '2020-08-11T06:04:50.325Z', 'duration': 2969799, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 156582, 'duration': 2692721}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2871712, 'duration': 79312}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2907095, 'duration': 8063}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2919540, 'duration': 7479}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2929989, 'duration': 4461}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2938575, 'duration': 4063}]}}}}]
[2020-08-11 13:51:40,042][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:50.355Z', 'endTime': '2020-08-11T06:04:50.358Z', 'duration': 3632627, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 151108, 'duration': 3332851}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3505124, 'duration': 103898}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3543077, 'duration': 10263}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3560090, 'duration': 11046}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3575947, 'duration': 7328}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3589858, 'duration': 6960}]}}}}]
[2020-08-11 13:51:40,076][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:50.390Z', 'endTime': '2020-08-11T06:04:50.393Z', 'duration': 3298076, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 149292, 'duration': 2998509}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3175024, 'duration': 103871}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3220619, 'duration': 11276}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3238854, 'duration': 15722}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3257927, 'duration': 4171}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3266547, 'duration': 3621}]}}}}]
[2020-08-11 13:51:40,105][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:50.420Z', 'endTime': '2020-08-11T06:04:50.422Z', 'duration': 2610918, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 156344, 'duration': 2320375}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2502264, 'duration': 93139}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2543313, 'duration': 18797}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2568485, 'duration': 6544}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2577582, 'duration': 3696}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2584741, 'duration': 3418}]}}}}]
[2020-08-11 13:51:40,133][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:50.448Z', 'endTime': '2020-08-11T06:04:50.450Z', 'duration': 2545973, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 147975, 'duration': 2268747}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2436615, 'duration': 92851}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2472244, 'duration': 11160}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2490624, 'duration': 8892}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2503262, 'duration': 5433}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2514582, 'duration': 4999}]}}}}]
[2020-08-11 13:51:40,165][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:50.479Z', 'endTime': '2020-08-11T06:04:50.482Z', 'duration': 2414201, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 134308, 'duration': 2160028}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2319336, 'duration': 77847}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2356808, 'duration': 7865}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2370552, 'duration': 6540}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2379688, 'duration': 3947}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2387159, 'duration': 3197}]}}}}]
[2020-08-11 13:51:40,193][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:50.508Z', 'endTime': '2020-08-11T06:04:50.510Z', 'duration': 2398690, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 132838, 'duration': 2143201}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2296941, 'duration': 79937}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2325671, 'duration': 6596}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2336555, 'duration': 20128}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2359494, 'duration': 3937}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2366669, 'duration': 3220}]}}}}]
[2020-08-11 13:51:40,221][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:50.535Z', 'endTime': '2020-08-11T06:04:50.538Z', 'duration': 2512088, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 134244, 'duration': 2228206}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2383584, 'duration': 110823}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2428289, 'duration': 17794}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2453273, 'duration': 9157}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2466842, 'duration': 5931}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2478121, 'duration': 5844}]}}}}]
[2020-08-11 13:51:40,249][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:50.564Z', 'endTime': '2020-08-11T06:04:50.566Z', 'duration': 2378194, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 128802, 'duration': 2133197}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2287150, 'duration': 76498}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2319593, 'duration': 6786}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2336432, 'duration': 7370}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2346357, 'duration': 3680}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2353646, 'duration': 3351}]}}}}]
[2020-08-11 13:51:40,277][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:50.591Z', 'endTime': '2020-08-11T06:04:50.594Z', 'duration': 2429257, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 126682, 'duration': 2206773}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2351521, 'duration': 63550}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2380027, 'duration': 6321}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2390439, 'duration': 5788}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2398420, 'duration': 3610}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2405223, 'duration': 3253}]}}}}]
[2020-08-11 13:51:40,307][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:50.621Z', 'endTime': '2020-08-11T06:04:50.624Z', 'duration': 2709910, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 188199, 'duration': 2425388}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2632018, 'duration': 63492}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2660565, 'duration': 6258}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2670554, 'duration': 5934}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2678905, 'duration': 3611}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2685830, 'duration': 3220}]}}}}]
[2020-08-11 13:51:40,340][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:50.652Z', 'endTime': '2020-08-11T06:04:50.657Z', 'duration': 5405190, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 440858, 'duration': 4812215}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 5275617, 'duration': 108048}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 5314916, 'duration': 9172}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 5330082, 'duration': 8141}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 5342233, 'duration': 19086}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 5367451, 'duration': 6306}]}}}}]
[2020-08-11 13:51:40,921][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:50.847Z', 'endTime': '2020-08-11T06:04:51.236Z', 'duration': 388943653, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 127283, 'duration': 388637074}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 388815150, 'duration': 101882}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 388862467, 'duration': 10162}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 388877899, 'duration': 8120}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 388889788, 'duration': 5687}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 388900414, 'duration': 5629}]}}}}]
[2020-08-11 13:51:41,313][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:51.266Z', 'endTime': '2020-08-11T06:04:51.628Z', 'duration': 362505087, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 129886, 'duration': 362128792}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 362305791, 'duration': 163913}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 362380593, 'duration': 20158}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 362411244, 'duration': 14830}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 362431161, 'duration': 8218}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 362446276, 'duration': 7393}]}}}}]
[2020-08-11 13:51:41,419][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:51.659Z', 'endTime': '2020-08-11T06:04:51.735Z', 'duration': 76330133, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 260404, 'duration': 75725101}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 76039107, 'duration': 218955}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 76141952, 'duration': 31788}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 76181024, 'duration': 13784}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 76205136, 'duration': 17564}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 76231696, 'duration': 9400}]}}}}]
[2020-08-11 13:51:41,455][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:51.768Z', 'endTime': '2020-08-11T06:04:51.771Z', 'duration': 2963201, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 150143, 'duration': 2656568}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2835398, 'duration': 109544}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2883607, 'duration': 10503}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2899928, 'duration': 11037}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2913899, 'duration': 4031}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2926303, 'duration': 8126}]}}}}]
[2020-08-11 13:51:41,486][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:51.800Z', 'endTime': '2020-08-11T06:04:51.803Z', 'duration': 2664529, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 120943, 'duration': 2425195}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2566101, 'duration': 65748}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2596336, 'duration': 6056}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2605832, 'duration': 6194}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2614381, 'duration': 3724}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2621208, 'duration': 3556}]}}}}]
[2020-08-11 13:51:41,520][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:51.833Z', 'endTime': '2020-08-11T06:04:51.836Z', 'duration': 2317559, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 120475, 'duration': 2065751}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2207667, 'duration': 90969}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2241466, 'duration': 7857}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2253472, 'duration': 7157}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2263569, 'duration': 5280}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2273200, 'duration': 13575}]}}}}]
[2020-08-11 13:51:41,549][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:51.863Z', 'endTime': '2020-08-11T06:04:51.865Z', 'duration': 2224201, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 124262, 'duration': 1983197}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2124685, 'duration': 84682}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2166403, 'duration': 8904}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2179365, 'duration': 7015}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2189551, 'duration': 4491}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2197882, 'duration': 3886}]}}}}]
[2020-08-11 13:51:41,577][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:51.891Z', 'endTime': '2020-08-11T06:04:51.894Z', 'duration': 2353331, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 144489, 'duration': 2111864}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2275001, 'duration': 63658}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2303071, 'duration': 6409}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2313422, 'duration': 5831}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2321641, 'duration': 3736}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2328987, 'duration': 3393}]}}}}]
[2020-08-11 13:51:41,607][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:51.919Z', 'endTime': '2020-08-11T06:04:51.922Z', 'duration': 2360925, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 113086, 'duration': 2096500}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2237155, 'duration': 99782}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2278096, 'duration': 9880}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2293630, 'duration': 9338}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2307243, 'duration': 5931}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2318395, 'duration': 6097}]}}}}]
[2020-08-11 13:51:41,638][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:51.952Z', 'endTime': '2020-08-11T06:04:51.954Z', 'duration': 2218742, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 122057, 'duration': 1999715}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2140307, 'duration': 63423}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2169995, 'duration': 6218}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2179587, 'duration': 5713}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2187582, 'duration': 3611}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2194188, 'duration': 3355}]}}}}]
[2020-08-11 13:51:41,675][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:51.989Z', 'endTime': '2020-08-11T06:04:51.991Z', 'duration': 2143661, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 121558, 'duration': 1928647}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2066417, 'duration': 62912}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2094877, 'duration': 6344}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2104926, 'duration': 5563}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2112832, 'duration': 3803}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2120012, 'duration': 3193}]}}}}]
[2020-08-11 13:51:41,713][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.027Z', 'endTime': '2020-08-11T06:04:52.030Z', 'duration': 2334683, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 122008, 'duration': 2090179}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2237256, 'duration': 77110}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2274794, 'duration': 9475}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2288119, 'duration': 6450}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2297066, 'duration': 3826}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2304303, 'duration': 3395}]}}}}]
[2020-08-11 13:51:41,757][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.070Z', 'endTime': '2020-08-11T06:04:52.073Z', 'duration': 2789469, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 131152, 'duration': 2535667}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2685837, 'duration': 87274}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2715630, 'duration': 6720}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2729504, 'duration': 13089}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2747591, 'duration': 7161}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2760184, 'duration': 4949}]}}}}]
[2020-08-11 13:51:41,791][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.105Z', 'endTime': '2020-08-11T06:04:52.108Z', 'duration': 2356156, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 129447, 'duration': 2102288}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2254778, 'duration': 84540}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2290570, 'duration': 7260}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2301322, 'duration': 5994}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2310668, 'duration': 8501}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2324096, 'duration': 5742}]}}}}]
[2020-08-11 13:51:41,848][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.162Z', 'endTime': '2020-08-11T06:04:52.164Z', 'duration': 2334194, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 127929, 'duration': 2072380}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2224348, 'duration': 90561}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2262455, 'duration': 9762}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2277756, 'duration': 8399}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2290040, 'duration': 5456}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2300296, 'duration': 5112}]}}}}]
[2020-08-11 13:51:41,887][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.201Z', 'endTime': '2020-08-11T06:04:52.204Z', 'duration': 2349259, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 127168, 'duration': 2132016}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2275097, 'duration': 60764}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2301447, 'duration': 6343}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2311263, 'duration': 5991}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2319650, 'duration': 3888}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2326637, 'duration': 3330}]}}}}]
[2020-08-11 13:51:41,922][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.235Z', 'endTime': '2020-08-11T06:04:52.239Z', 'duration': 4375435, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 123614, 'duration': 4085375}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 4239812, 'duration': 91460}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 4280240, 'duration': 7740}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 4291784, 'duration': 6759}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 4302293, 'duration': 5838}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 4313523, 'duration': 5999}]}}}}]
[2020-08-11 13:51:42,033][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.346Z', 'endTime': '2020-08-11T06:04:52.349Z', 'duration': 3415420, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 158825, 'duration': 3106778}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3292266, 'duration': 106527}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3342800, 'duration': 13301}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3363477, 'duration': 9847}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3377050, 'duration': 4858}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3386281, 'duration': 3942}]}}}}]
[2020-08-11 13:51:42,068][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.381Z', 'endTime': '2020-08-11T06:04:52.384Z', 'duration': 2780340, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 181257, 'duration': 2497872}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2698860, 'duration': 65226}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2728129, 'duration': 6613}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2738453, 'duration': 6111}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2746991, 'duration': 3789}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2754214, 'duration': 3275}]}}}}]
[2020-08-11 13:51:42,097][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.411Z', 'endTime': '2020-08-11T06:04:52.413Z', 'duration': 2646939, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 163563, 'duration': 2357815}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2544128, 'duration': 84745}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2580786, 'duration': 8329}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2594150, 'duration': 7405}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2605467, 'duration': 5550}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2615458, 'duration': 4687}]}}}}]
[2020-08-11 13:51:42,127][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.441Z', 'endTime': '2020-08-11T06:04:52.443Z', 'duration': 2413162, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 153231, 'duration': 2164296}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2335736, 'duration': 63112}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2364202, 'duration': 6267}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2374114, 'duration': 5665}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2382126, 'duration': 3830}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2389045, 'duration': 3259}]}}}}]
[2020-08-11 13:51:42,156][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.470Z', 'endTime': '2020-08-11T06:04:52.473Z', 'duration': 2488654, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 147429, 'duration': 2179446}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2352459, 'duration': 114799}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2401438, 'duration': 12565}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2420536, 'duration': 10750}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2436443, 'duration': 7495}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2449386, 'duration': 6253}]}}}}]
[2020-08-11 13:51:42,185][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.499Z', 'endTime': '2020-08-11T06:04:52.501Z', 'duration': 2340144, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 162417, 'duration': 2019236}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2209084, 'duration': 106484}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2253899, 'duration': 11500}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2271635, 'duration': 9323}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2285518, 'duration': 7217}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2298105, 'duration': 6339}]}}}}]
[2020-08-11 13:51:42,215][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.529Z', 'endTime': '2020-08-11T06:04:52.531Z', 'duration': 2552351, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 142513, 'duration': 2277395}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2449002, 'duration': 85661}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2485598, 'duration': 9048}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2499850, 'duration': 8036}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2511498, 'duration': 5395}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2521356, 'duration': 4606}]}}}}]
[2020-08-11 13:51:42,246][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.560Z', 'endTime': '2020-08-11T06:04:52.562Z', 'duration': 2684322, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 166987, 'duration': 2416797}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2602718, 'duration': 66203}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2632168, 'duration': 6853}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2644045, 'duration': 5796}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2652296, 'duration': 3665}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2658988, 'duration': 3483}]}}}}]
[2020-08-11 13:51:42,275][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.589Z', 'endTime': '2020-08-11T06:04:52.592Z', 'duration': 2382229, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 131577, 'duration': 2146314}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2305190, 'duration': 62437}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2334094, 'duration': 5914}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2343406, 'duration': 5882}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2351497, 'duration': 3648}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2358223, 'duration': 3269}]}}}}]
[2020-08-11 13:51:42,304][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.618Z', 'endTime': '2020-08-11T06:04:52.620Z', 'duration': 2510652, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 130251, 'duration': 2243570}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2393229, 'duration': 97924}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2436892, 'duration': 10982}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2453886, 'duration': 8858}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2466427, 'duration': 5210}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2476298, 'duration': 4797}]}}}}]
[2020-08-11 13:51:42,336][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.648Z', 'endTime': '2020-08-11T06:04:52.652Z', 'duration': 3938048, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 161047, 'duration': 3656097}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3844317, 'duration': 73182}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3879718, 'duration': 7177}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3890511, 'duration': 6334}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3899472, 'duration': 3861}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3906828, 'duration': 3597}]}}}}]
[2020-08-11 13:51:42,366][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.680Z', 'endTime': '2020-08-11T06:04:52.682Z', 'duration': 2397506, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 128695, 'duration': 2132356}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2282095, 'duration': 98509}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2319657, 'duration': 9424}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2334904, 'duration': 7865}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2346742, 'duration': 5513}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2357351, 'duration': 14801}]}}}}]
[2020-08-11 13:51:42,395][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.709Z', 'endTime': '2020-08-11T06:04:52.712Z', 'duration': 2424673, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 132436, 'duration': 2182911}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2333748, 'duration': 63254}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2361847, 'duration': 6178}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2371388, 'duration': 5738}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2379716, 'duration': 3689}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2386404, 'duration': 3270}]}}}}]
[2020-08-11 13:51:42,425][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.739Z', 'endTime': '2020-08-11T06:04:52.741Z', 'duration': 2459718, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 129078, 'duration': 2215207}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2367163, 'duration': 74339}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2400964, 'duration': 6982}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2411527, 'duration': 6074}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2419864, 'duration': 3662}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2427347, 'duration': 4693}]}}}}]
[2020-08-11 13:51:42,455][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.770Z', 'endTime': '2020-08-11T06:04:52.772Z', 'duration': 2213340, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 154637, 'duration': 1958121}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2130764, 'duration': 63258}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2158257, 'duration': 6319}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2167983, 'duration': 5683}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2177560, 'duration': 3495}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2184283, 'duration': 3513}]}}}}]
[2020-08-11 13:51:42,485][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.798Z', 'endTime': '2020-08-11T06:04:52.801Z', 'duration': 3326940, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 146494, 'duration': 3066713}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3236724, 'duration': 71313}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3271518, 'duration': 6854}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3282171, 'duration': 6137}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3290596, 'duration': 3580}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3297443, 'duration': 3381}]}}}}]
[2020-08-11 13:51:42,515][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.827Z', 'endTime': '2020-08-11T06:04:52.830Z', 'duration': 3100312, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 129672, 'duration': 2829167}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2982041, 'duration': 94540}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3022317, 'duration': 10906}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3038574, 'duration': 8366}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3050349, 'duration': 5457}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3060853, 'duration': 5252}]}}}}]
[2020-08-11 13:51:42,544][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.858Z', 'endTime': '2020-08-11T06:04:52.861Z', 'duration': 2447212, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 131443, 'duration': 2179835}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2334857, 'duration': 93882}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2374210, 'duration': 10773}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2390939, 'duration': 8007}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2402893, 'duration': 5632}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2413693, 'duration': 5581}]}}}}]
[2020-08-11 13:51:42,573][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.888Z', 'endTime': '2020-08-11T06:04:52.890Z', 'duration': 2351380, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 132040, 'duration': 2086891}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2243593, 'duration': 88604}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2282450, 'duration': 7468}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2294283, 'duration': 8354}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2306524, 'duration': 6140}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2318010, 'duration': 5372}]}}}}]
[2020-08-11 13:51:42,601][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.916Z', 'endTime': '2020-08-11T06:04:52.918Z', 'duration': 2458017, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 129053, 'duration': 2190708}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2346812, 'duration': 89685}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2387720, 'duration': 10794}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2404387, 'duration': 7303}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2414353, 'duration': 3738}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2421719, 'duration': 3143}]}}}}]
[2020-08-11 13:51:42,630][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.944Z', 'endTime': '2020-08-11T06:04:52.947Z', 'duration': 2431734, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 132378, 'duration': 2167757}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2325802, 'duration': 86636}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2362114, 'duration': 9013}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2380378, 'duration': 9426}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2393981, 'duration': 4152}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2401595, 'duration': 3306}]}}}}]
[2020-08-11 13:51:42,660][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:52.974Z', 'endTime': '2020-08-11T06:04:52.976Z', 'duration': 2514393, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 142874, 'duration': 2239778}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2408144, 'duration': 84867}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2440874, 'duration': 6670}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2451463, 'duration': 6609}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2461473, 'duration': 5727}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2474592, 'duration': 5300}]}}}}]
[2020-08-11 13:51:42,690][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.003Z', 'endTime': '2020-08-11T06:04:53.006Z', 'duration': 2680550, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 154201, 'duration': 2382709}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2567899, 'duration': 93189}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2610879, 'duration': 9823}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2628158, 'duration': 9181}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2641789, 'duration': 4554}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2650078, 'duration': 3522}]}}}}]
[2020-08-11 13:51:42,729][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.035Z', 'endTime': '2020-08-11T06:04:53.045Z', 'duration': 9413973, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 169031, 'duration': 9119500}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 9317042, 'duration': 74179}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 9354745, 'duration': 6615}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 9364732, 'duration': 5848}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 9372680, 'duration': 3596}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 9379535, 'duration': 3574}]}}}}]
[2020-08-11 13:51:42,762][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.076Z', 'endTime': '2020-08-11T06:04:53.079Z', 'duration': 2411686, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 131519, 'duration': 2173828}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2327046, 'duration': 66040}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2358979, 'duration': 6305}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2368535, 'duration': 6146}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2376987, 'duration': 3555}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2383451, 'duration': 3202}]}}}}]
[2020-08-11 13:51:42,801][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.113Z', 'endTime': '2020-08-11T06:04:53.116Z', 'duration': 3195064, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 170045, 'duration': 2904384}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3101548, 'duration': 71322}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3137355, 'duration': 6408}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3147561, 'duration': 6259}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3156186, 'duration': 3470}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3162759, 'duration': 3141}]}}}}]
[2020-08-11 13:51:42,832][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.145Z', 'endTime': '2020-08-11T06:04:53.148Z', 'duration': 2445291, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 119957, 'duration': 2187992}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2336146, 'duration': 85375}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2369936, 'duration': 6649}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2380086, 'duration': 5801}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2388996, 'duration': 10604}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2405806, 'duration': 5852}]}}}}]
[2020-08-11 13:51:42,862][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.176Z', 'endTime': '2020-08-11T06:04:53.178Z', 'duration': 2288365, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 119776, 'duration': 2031204}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2172179, 'duration': 94172}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2214973, 'duration': 10036}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2230481, 'duration': 7848}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2242133, 'duration': 5009}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2252273, 'duration': 4739}]}}}}]
[2020-08-11 13:51:42,890][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.204Z', 'endTime': '2020-08-11T06:04:53.206Z', 'duration': 2176040, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 116603, 'duration': 1959756}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2092871, 'duration': 64775}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2118798, 'duration': 6270}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2128676, 'duration': 5465}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2136216, 'duration': 3517}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2142545, 'duration': 3152}]}}}}]
[2020-08-11 13:51:42,960][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.274Z', 'endTime': '2020-08-11T06:04:53.276Z', 'duration': 2319342, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 129315, 'duration': 2061211}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2209398, 'duration': 91694}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2237317, 'duration': 6800}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2247643, 'duration': 9917}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2263240, 'duration': 15187}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2284621, 'duration': 6329}]}}}}]
[2020-08-11 13:51:42,991][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.305Z', 'endTime': '2020-08-11T06:04:53.307Z', 'duration': 2148542, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 121177, 'duration': 1896908}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2040889, 'duration': 88694}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2073700, 'duration': 11037}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2091447, 'duration': 10024}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2105646, 'duration': 5811}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2115300, 'duration': 3571}]}}}}]
[2020-08-11 13:51:43,021][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.335Z', 'endTime': '2020-08-11T06:04:53.337Z', 'duration': 2138932, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 109850, 'duration': 1913251}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2041613, 'duration': 84643}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2074294, 'duration': 10140}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2091130, 'duration': 9500}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2104644, 'duration': 6180}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2115578, 'duration': 3571}]}}}}]
[2020-08-11 13:51:43,054][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.367Z', 'endTime': '2020-08-11T06:04:53.370Z', 'duration': 3285623, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 127000, 'duration': 3054237}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3199778, 'duration': 64029}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3229234, 'duration': 6150}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3239266, 'duration': 5710}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3247254, 'duration': 3854}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3254124, 'duration': 3320}]}}}}]
[2020-08-11 13:51:43,086][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.400Z', 'endTime': '2020-08-11T06:04:53.403Z', 'duration': 2312114, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 119098, 'duration': 2066806}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2205280, 'duration': 89301}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2240727, 'duration': 9649}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2256130, 'duration': 8699}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2268579, 'duration': 5785}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2279535, 'duration': 5435}]}}}}]
[2020-08-11 13:51:43,126][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.440Z', 'endTime': '2020-08-11T06:04:53.443Z', 'duration': 2275016, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 114777, 'duration': 2032222}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2168699, 'duration': 89426}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2204335, 'duration': 10006}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2220205, 'duration': 8324}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2232245, 'duration': 5630}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2243352, 'duration': 5300}]}}}}]
[2020-08-11 13:51:43,283][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.595Z', 'endTime': '2020-08-11T06:04:53.599Z', 'duration': 3896281, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 637704, 'duration': 3121350}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3784487, 'duration': 89966}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3823531, 'duration': 9314}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3838297, 'duration': 8174}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3850054, 'duration': 5348}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3860073, 'duration': 5056}]}}}}]
[2020-08-11 13:51:43,333][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.648Z', 'endTime': '2020-08-11T06:04:53.650Z', 'duration': 2507178, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 117151, 'duration': 2299960}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2433656, 'duration': 59932}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2460636, 'duration': 5923}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2469998, 'duration': 5979}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2478076, 'duration': 3560}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2484497, 'duration': 3209}]}}}}]
[2020-08-11 13:51:43,380][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.693Z', 'endTime': '2020-08-11T06:04:53.696Z', 'duration': 2387123, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 113364, 'duration': 2189434}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2318612, 'duration': 56025}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2342392, 'duration': 5696}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2351910, 'duration': 5426}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2359814, 'duration': 3477}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2366029, 'duration': 3093}]}}}}]
[2020-08-11 13:51:43,436][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.746Z', 'endTime': '2020-08-11T06:04:53.751Z', 'duration': 5315997, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 127764, 'duration': 5056786}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 5206166, 'duration': 88223}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 5238631, 'duration': 6438}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 5249116, 'duration': 6342}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 5262883, 'duration': 9144}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 5277779, 'duration': 6387}]}}}}]
[2020-08-11 13:51:43,471][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.785Z', 'endTime': '2020-08-11T06:04:53.787Z', 'duration': 2751350, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 140790, 'duration': 2432430}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2609447, 'duration': 116486}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2658667, 'duration': 12057}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2677456, 'duration': 10563}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2692903, 'duration': 7568}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2706714, 'duration': 6852}]}}}}]
[2020-08-11 13:51:43,503][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.817Z', 'endTime': '2020-08-11T06:04:53.819Z', 'duration': 2600987, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 152532, 'duration': 2334947}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2510034, 'duration': 74074}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2543536, 'duration': 7288}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2554828, 'duration': 6689}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2564343, 'duration': 4409}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2572511, 'duration': 3956}]}}}}]
[2020-08-11 13:51:43,532][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.846Z', 'endTime': '2020-08-11T06:04:53.848Z', 'duration': 2487847, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 148840, 'duration': 2209460}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2379589, 'duration': 85689}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2409581, 'duration': 6682}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2420628, 'duration': 6635}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2429999, 'duration': 8054}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2445879, 'duration': 8617}]}}}}]
[2020-08-11 13:51:43,560][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.875Z', 'endTime': '2020-08-11T06:04:53.877Z', 'duration': 2266683, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 117712, 'duration': 2042931}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2189303, 'duration': 62540}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2217458, 'duration': 6182}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2228016, 'duration': 5809}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2236098, 'duration': 3547}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2242589, 'duration': 3050}]}}}}]
[2020-08-11 13:51:43,592][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.906Z', 'endTime': '2020-08-11T06:04:53.908Z', 'duration': 2373099, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 114726, 'duration': 2125675}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2265320, 'duration': 93138}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2305402, 'duration': 10233}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2321754, 'duration': 9131}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2334816, 'duration': 5761}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2345794, 'duration': 5163}]}}}}]
[2020-08-11 13:51:43,623][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.937Z', 'endTime': '2020-08-11T06:04:53.940Z', 'duration': 2166417, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 119222, 'duration': 1938142}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2080311, 'duration': 70436}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2111596, 'duration': 7132}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2122718, 'duration': 6383}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2131794, 'duration': 3933}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2139318, 'duration': 3629}]}}}}]
[2020-08-11 13:51:43,651][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.965Z', 'endTime': '2020-08-11T06:04:53.968Z', 'duration': 2325973, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 132028, 'duration': 2103593}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2252666, 'duration': 60057}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2278888, 'duration': 5896}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2288195, 'duration': 5835}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2296437, 'duration': 3729}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2303213, 'duration': 3302}]}}}}]
[2020-08-11 13:51:43,679][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:53.993Z', 'endTime': '2020-08-11T06:04:53.995Z', 'duration': 2150717, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 123282, 'duration': 1934132}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2073586, 'duration': 64575}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2100541, 'duration': 5871}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2111045, 'duration': 6045}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2119330, 'duration': 6696}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2128952, 'duration': 3375}]}}}}]
[2020-08-11 13:51:43,709][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.022Z', 'endTime': '2020-08-11T06:04:54.025Z', 'duration': 2366474, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 117295, 'duration': 2112856}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2254616, 'duration': 93154}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2296447, 'duration': 9841}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2311235, 'duration': 7303}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2321766, 'duration': 5696}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2332254, 'duration': 5659}]}}}}]
[2020-08-11 13:51:43,736][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.051Z', 'endTime': '2020-08-11T06:04:54.053Z', 'duration': 2058662, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 115694, 'duration': 1854814}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 1987092, 'duration': 58317}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2012556, 'duration': 5896}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2021769, 'duration': 5545}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2029631, 'duration': 3490}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2035904, 'duration': 3658}]}}}}]
[2020-08-11 13:51:43,763][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.078Z', 'endTime': '2020-08-11T06:04:54.080Z', 'duration': 2175204, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 121043, 'duration': 1962776}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2101104, 'duration': 59998}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2128141, 'duration': 6506}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2137964, 'duration': 5789}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2145968, 'duration': 3645}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2152380, 'duration': 2983}]}}}}]
[2020-08-11 13:51:43,791][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.106Z', 'endTime': '2020-08-11T06:04:54.108Z', 'duration': 2019811, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 114765, 'duration': 1814519}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 1946075, 'duration': 59457}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 1971974, 'duration': 6052}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 1981531, 'duration': 5331}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 1989267, 'duration': 3549}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 1995787, 'duration': 3610}]}}}}]
[2020-08-11 13:51:43,820][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.134Z', 'endTime': '2020-08-11T06:04:54.137Z', 'duration': 2522150, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 135283, 'duration': 2297302}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2448906, 'duration': 60778}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2475432, 'duration': 6161}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2485259, 'duration': 5818}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2493343, 'duration': 3738}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2500063, 'duration': 3253}]}}}}]
[2020-08-11 13:51:43,847][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.162Z', 'endTime': '2020-08-11T06:04:54.164Z', 'duration': 2188468, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 121784, 'duration': 1952260}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2096325, 'duration': 66766}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2128329, 'duration': 6758}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2138707, 'duration': 5746}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2146921, 'duration': 3548}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2153542, 'duration': 3411}]}}}}]
[2020-08-11 13:51:43,875][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.188Z', 'endTime': '2020-08-11T06:04:54.190Z', 'duration': 2332933, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 116063, 'duration': 2118718}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2252240, 'duration': 62127}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2279424, 'duration': 6125}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2288960, 'duration': 5730}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2296906, 'duration': 3948}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2303910, 'duration': 3215}]}}}}]
[2020-08-11 13:51:43,907][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.220Z', 'endTime': '2020-08-11T06:04:54.222Z', 'duration': 2193387, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 130175, 'duration': 1922957}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2075616, 'duration': 99129}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2111708, 'duration': 9284}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2138009, 'duration': 9313}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2150809, 'duration': 5363}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2161001, 'duration': 4870}]}}}}]
[2020-08-11 13:51:43,941][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.254Z', 'endTime': '2020-08-11T06:04:54.257Z', 'duration': 2241652, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 116299, 'duration': 2004765}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2142097, 'duration': 82483}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2175652, 'duration': 8974}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2189951, 'duration': 7706}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2201091, 'duration': 5217}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2210854, 'duration': 5102}]}}}}]
[2020-08-11 13:51:43,971][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.285Z', 'endTime': '2020-08-11T06:04:54.287Z', 'duration': 2088068, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 116931, 'duration': 1860797}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 1993293, 'duration': 79210}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2019487, 'duration': 11232}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2037088, 'duration': 8878}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2049183, 'duration': 5103}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2058774, 'duration': 4750}]}}}}]
[2020-08-11 13:51:44,001][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.315Z', 'endTime': '2020-08-11T06:04:54.316Z', 'duration': 1940459, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 122446, 'duration': 1728138}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 1867313, 'duration': 60043}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 1893545, 'duration': 6440}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 1903361, 'duration': 5901}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 1911564, 'duration': 3857}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 1918308, 'duration': 3277}]}}}}]
[2020-08-11 13:51:44,057][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.371Z', 'endTime': '2020-08-11T06:04:54.373Z', 'duration': 2125796, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 118439, 'duration': 1920304}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2054636, 'duration': 58188}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2079551, 'duration': 5915}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2089266, 'duration': 5539}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2096966, 'duration': 3816}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2103618, 'duration': 3227}]}}}}]
[2020-08-11 13:51:44,170][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.483Z', 'endTime': '2020-08-11T06:04:54.486Z', 'duration': 3245489, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 161930, 'duration': 2927823}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3117223, 'duration': 104583}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3157615, 'duration': 11600}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3175748, 'duration': 9893}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3190245, 'duration': 7400}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3203705, 'duration': 6561}]}}}}]
[2020-08-11 13:51:44,209][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.522Z', 'endTime': '2020-08-11T06:04:54.525Z', 'duration': 2968227, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 149851, 'duration': 2699134}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2870307, 'duration': 80755}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2903661, 'duration': 8138}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2918611, 'duration': 7891}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2929546, 'duration': 4756}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2938669, 'duration': 4299}]}}}}]
[2020-08-11 13:51:44,248][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.560Z', 'endTime': '2020-08-11T06:04:54.563Z', 'duration': 3154633, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 168723, 'duration': 2844575}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3036904, 'duration': 97955}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3082065, 'duration': 12575}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3101663, 'duration': 8360}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3112978, 'duration': 4597}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3122027, 'duration': 4135}]}}}}]
[2020-08-11 13:51:44,285][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.598Z', 'endTime': '2020-08-11T06:04:54.601Z', 'duration': 2921348, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 145763, 'duration': 2664408}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2831434, 'duration': 73373}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2863516, 'duration': 7497}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2874990, 'duration': 7304}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2885250, 'duration': 4314}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2893032, 'duration': 4103}]}}}}]
[2020-08-11 13:51:44,318][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.632Z', 'endTime': '2020-08-11T06:04:54.634Z', 'duration': 2648615, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 152697, 'duration': 2390665}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2563859, 'duration': 69164}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2594036, 'duration': 7389}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2605604, 'duration': 6609}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2614934, 'duration': 3898}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2622300, 'duration': 3553}]}}}}]
[2020-08-11 13:51:44,351][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.665Z', 'endTime': '2020-08-11T06:04:54.667Z', 'duration': 2600148, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 144032, 'duration': 2318189}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2485101, 'duration': 97220}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2531238, 'duration': 13277}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2550066, 'duration': 7565}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2560664, 'duration': 4540}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2569706, 'duration': 4126}]}}}}]
[2020-08-11 13:51:44,385][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.698Z', 'endTime': '2020-08-11T06:04:54.701Z', 'duration': 3708242, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 143145, 'duration': 3442306}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3609081, 'duration': 79920}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3646836, 'duration': 7997}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3658853, 'duration': 6728}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3668295, 'duration': 4473}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3677481, 'duration': 3993}]}}}}]
[2020-08-11 13:51:44,416][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.729Z', 'endTime': '2020-08-11T06:04:54.732Z', 'duration': 2945144, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 129111, 'duration': 2668337}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2823479, 'duration': 102214}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2863741, 'duration': 10338}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2879902, 'duration': 8903}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2892435, 'duration': 5519}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2909747, 'duration': 5659}]}}}}]
[2020-08-11 13:51:44,447][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.760Z', 'endTime': '2020-08-11T06:04:54.763Z', 'duration': 2613582, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 130292, 'duration': 2334565}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2490788, 'duration': 103966}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2533735, 'duration': 11283}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2552115, 'duration': 9852}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2566633, 'duration': 6346}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2578845, 'duration': 5631}]}}}}]
[2020-08-11 13:51:44,477][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.791Z', 'endTime': '2020-08-11T06:04:54.793Z', 'duration': 2459664, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 140216, 'duration': 2178132}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2343247, 'duration': 97526}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2382155, 'duration': 10680}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2398975, 'duration': 9080}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2412411, 'duration': 6575}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2425027, 'duration': 5503}]}}}}]
[2020-08-11 13:51:44,509][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.823Z', 'endTime': '2020-08-11T06:04:54.826Z', 'duration': 2478118, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 143329, 'duration': 2189118}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2357710, 'duration': 100301}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2400042, 'duration': 10954}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2417131, 'duration': 8922}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2430273, 'duration': 6250}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2441978, 'duration': 5506}]}}}}]
[2020-08-11 13:51:44,541][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.854Z', 'endTime': '2020-08-11T06:04:54.857Z', 'duration': 2475457, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 126038, 'duration': 2190487}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2353318, 'duration': 95693}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2391720, 'duration': 10173}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2407721, 'duration': 9381}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2421349, 'duration': 5988}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2432847, 'duration': 5532}]}}}}]
[2020-08-11 13:51:44,573][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.886Z', 'endTime': '2020-08-11T06:04:54.889Z', 'duration': 2484752, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 125905, 'duration': 2223440}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2374804, 'duration': 94112}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2416319, 'duration': 10674}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2433124, 'duration': 8122}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2445092, 'duration': 5715}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2455914, 'duration': 4993}]}}}}]
[2020-08-11 13:51:44,601][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.916Z', 'endTime': '2020-08-11T06:04:54.918Z', 'duration': 2400657, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 127598, 'duration': 2113208}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2279684, 'duration': 100517}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2321927, 'duration': 12353}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2339945, 'duration': 9262}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2353464, 'duration': 6487}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2364885, 'duration': 5439}]}}}}]
[2020-08-11 13:51:44,636][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.948Z', 'endTime': '2020-08-11T06:04:54.952Z', 'duration': 3783005, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 131684, 'duration': 3536391}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3692822, 'duration': 72038}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3727690, 'duration': 6892}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3738696, 'duration': 6053}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3747593, 'duration': 3572}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3754794, 'duration': 3198}]}}}}]
[2020-08-11 13:51:44,666][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:54.980Z', 'endTime': '2020-08-11T06:04:54.982Z', 'duration': 2664900, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 138106, 'duration': 2388758}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2564276, 'duration': 83964}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2595853, 'duration': 10824}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2613607, 'duration': 10038}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2628025, 'duration': 4987}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2636968, 'duration': 3629}]}}}}]
[2020-08-11 13:51:44,701][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.014Z', 'endTime': '2020-08-11T06:04:55.017Z', 'duration': 2434787, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 132648, 'duration': 2195815}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2349292, 'duration': 70763}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2378145, 'duration': 6226}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2387987, 'duration': 6175}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2396472, 'duration': 3492}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2410269, 'duration': 3148}]}}}}]
[2020-08-11 13:51:44,730][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.044Z', 'endTime': '2020-08-11T06:04:55.047Z', 'duration': 2413682, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 140499, 'duration': 2172952}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2333076, 'duration': 65707}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2363537, 'duration': 6295}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2373478, 'duration': 6083}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2382225, 'duration': 3659}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2389064, 'duration': 3392}]}}}}]
[2020-08-11 13:51:44,761][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.074Z', 'endTime': '2020-08-11T06:04:55.078Z', 'duration': 3452378, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 132894, 'duration': 3196288}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3350634, 'duration': 81205}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3382298, 'duration': 5884}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3392002, 'duration': 6389}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3401791, 'duration': 5256}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3411717, 'duration': 10434}]}}}}]
[2020-08-11 13:51:44,792][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.106Z', 'endTime': '2020-08-11T06:04:55.109Z', 'duration': 2669835, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 129861, 'duration': 2409764}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2559778, 'duration': 90365}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2595244, 'duration': 10228}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2611292, 'duration': 9033}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2623803, 'duration': 5448}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2633965, 'duration': 3601}]}}}}]
[2020-08-11 13:51:44,822][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.136Z', 'endTime': '2020-08-11T06:04:55.138Z', 'duration': 2427719, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 143050, 'duration': 2147166}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2319890, 'duration': 90693}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2358438, 'duration': 9619}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2374074, 'duration': 8096}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2385782, 'duration': 5225}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2397837, 'duration': 4977}]}}}}]
[2020-08-11 13:51:44,851][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.165Z', 'endTime': '2020-08-11T06:04:55.168Z', 'duration': 2477653, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 151148, 'duration': 2222843}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2395402, 'duration': 66229}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2426710, 'duration': 6124}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2436520, 'duration': 5710}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2444904, 'duration': 3560}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2451424, 'duration': 3253}]}}}}]
[2020-08-11 13:51:44,881][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.195Z', 'endTime': '2020-08-11T06:04:55.197Z', 'duration': 2398590, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 140565, 'duration': 2135101}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2298622, 'duration': 81720}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2341926, 'duration': 8010}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2353720, 'duration': 6171}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2362393, 'duration': 3848}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2369702, 'duration': 3389}]}}}}]
[2020-08-11 13:51:44,909][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.224Z', 'endTime': '2020-08-11T06:04:55.226Z', 'duration': 2338482, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 122092, 'duration': 2088266}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2229618, 'duration': 93895}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2271969, 'duration': 12275}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2290394, 'duration': 8070}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2302570, 'duration': 5849}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2312336, 'duration': 3395}]}}}}]
[2020-08-11 13:51:44,938][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.252Z', 'endTime': '2020-08-11T06:04:55.255Z', 'duration': 2605640, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 169480, 'duration': 2289392}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2484166, 'duration': 101686}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2530258, 'duration': 10929}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2547026, 'duration': 8222}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2558926, 'duration': 5748}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2569971, 'duration': 5623}]}}}}]
[2020-08-11 13:51:44,969][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.283Z', 'endTime': '2020-08-11T06:04:55.285Z', 'duration': 2667378, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 120671, 'duration': 2413875}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2563978, 'duration': 82390}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2595935, 'duration': 6286}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2605757, 'duration': 6133}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2614180, 'duration': 8371}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2629336, 'duration': 7289}]}}}}]
[2020-08-11 13:51:44,998][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.312Z', 'endTime': '2020-08-11T06:04:55.314Z', 'duration': 2348114, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 123728, 'duration': 2120584}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2264722, 'duration': 67623}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2295901, 'duration': 6435}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2306165, 'duration': 6515}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2315185, 'duration': 4146}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2322538, 'duration': 3394}]}}}}]
[2020-08-11 13:51:45,027][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.342Z', 'endTime': '2020-08-11T06:04:55.344Z', 'duration': 2334923, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 126265, 'duration': 2102355}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2248347, 'duration': 70807}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2279941, 'duration': 6521}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2293366, 'duration': 6190}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2302094, 'duration': 4191}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2309373, 'duration': 3352}]}}}}]
[2020-08-11 13:51:45,060][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.372Z', 'endTime': '2020-08-11T06:04:55.376Z', 'duration': 3822238, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 135362, 'duration': 3565995}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3724872, 'duration': 78552}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3758573, 'duration': 6755}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3769354, 'duration': 7278}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3780318, 'duration': 5299}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3790122, 'duration': 5006}]}}}}]
[2020-08-11 13:51:45,090][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.404Z', 'endTime': '2020-08-11T06:04:55.407Z', 'duration': 2361549, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 129881, 'duration': 2113729}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2268492, 'duration': 77902}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2308191, 'duration': 7926}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2319778, 'duration': 6614}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2328905, 'duration': 3961}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2336345, 'duration': 3590}]}}}}]
[2020-08-11 13:51:45,187][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.499Z', 'endTime': '2020-08-11T06:04:55.502Z', 'duration': 3607928, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 168965, 'duration': 3260806}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3460923, 'duration': 123163}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3510862, 'duration': 13356}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3531253, 'duration': 10133}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3546333, 'duration': 7699}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3560171, 'duration': 11545}]}}}}]
[2020-08-11 13:51:45,230][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.539Z', 'endTime': '2020-08-11T06:04:55.546Z', 'duration': 6871711, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 232052, 'duration': 6513686}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 6773119, 'duration': 76327}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 6810843, 'duration': 6600}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 6821426, 'duration': 6867}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 6830996, 'duration': 4196}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 6838574, 'duration': 3348}]}}}}]
[2020-08-11 13:51:45,267][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.579Z', 'endTime': '2020-08-11T06:04:55.583Z', 'duration': 4351289, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 183318, 'duration': 4000113}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 4216171, 'duration': 110285}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 4265989, 'duration': 11187}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 4283657, 'duration': 9064}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 4297006, 'duration': 6484}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 4310018, 'duration': 5424}]}}}}]
[2020-08-11 13:51:45,307][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.620Z', 'endTime': '2020-08-11T06:04:55.623Z', 'duration': 3183225, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 144738, 'duration': 2910076}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3078760, 'duration': 73824}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3113090, 'duration': 6282}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3125631, 'duration': 6608}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3135030, 'duration': 3558}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3141868, 'duration': 3310}]}}}}]
[2020-08-11 13:51:45,337][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.651Z', 'endTime': '2020-08-11T06:04:55.654Z', 'duration': 2922864, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 138445, 'duration': 2655569}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2814823, 'duration': 90484}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2847756, 'duration': 6090}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2857769, 'duration': 11496}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2874860, 'duration': 7493}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2888123, 'duration': 6344}]}}}}]
[2020-08-11 13:51:45,366][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.681Z', 'endTime': '2020-08-11T06:04:55.683Z', 'duration': 2457139, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 132156, 'duration': 2183551}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2338563, 'duration': 101173}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2369094, 'duration': 6033}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2378848, 'duration': 21566}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2405216, 'duration': 5533}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2420295, 'duration': 8510}]}}}}]
[2020-08-11 13:51:45,397][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.711Z', 'endTime': '2020-08-11T06:04:55.714Z', 'duration': 2547400, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 131803, 'duration': 2299025}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2453858, 'duration': 77096}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2490369, 'duration': 9971}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2504475, 'duration': 6070}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2513141, 'duration': 3442}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2519992, 'duration': 3439}]}}}}]
[2020-08-11 13:51:45,429][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.743Z', 'endTime': '2020-08-11T06:04:55.745Z', 'duration': 2452706, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 138529, 'duration': 2181554}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2341729, 'duration': 91148}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2376543, 'duration': 10759}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2393249, 'duration': 8787}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2405690, 'duration': 5482}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2417008, 'duration': 4924}]}}}}]
[2020-08-11 13:51:45,459][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.773Z', 'endTime': '2020-08-11T06:04:55.775Z', 'duration': 2412877, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 148383, 'duration': 2145551}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2313781, 'duration': 79234}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2356668, 'duration': 6996}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2367399, 'duration': 6210}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2376006, 'duration': 3939}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2383273, 'duration': 3151}]}}}}]
[2020-08-11 13:51:45,488][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.802Z', 'endTime': '2020-08-11T06:04:55.804Z', 'duration': 2367311, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 127527, 'duration': 2142166}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2288706, 'duration': 63787}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2318460, 'duration': 5916}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2328136, 'duration': 5532}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2336030, 'duration': 3570}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2342662, 'duration': 3543}]}}}}]
[2020-08-11 13:51:45,574][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.889Z', 'endTime': '2020-08-11T06:04:55.891Z', 'duration': 2390457, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 127673, 'duration': 2154721}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2301393, 'duration': 74177}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2329352, 'duration': 5556}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2338146, 'duration': 6030}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2358015, 'duration': 4164}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2365672, 'duration': 2981}]}}}}]
[2020-08-11 13:51:45,609][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.924Z', 'endTime': '2020-08-11T06:04:55.926Z', 'duration': 2390883, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 138242, 'duration': 2155919}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2312849, 'duration': 63362}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2342377, 'duration': 6066}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2351918, 'duration': 5969}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2360235, 'duration': 3570}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2366835, 'duration': 3136}]}}}}]
[2020-08-11 13:51:45,644][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.958Z', 'endTime': '2020-08-11T06:04:55.960Z', 'duration': 2501541, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 127773, 'duration': 2270875}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2419285, 'duration': 66095}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2450142, 'duration': 6043}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2460163, 'duration': 5785}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2468384, 'duration': 3616}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2475734, 'duration': 3117}]}}}}]
[2020-08-11 13:51:45,674][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:55.988Z', 'endTime': '2020-08-11T06:04:55.991Z', 'duration': 2609097, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 130913, 'duration': 2334962}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2495398, 'duration': 96875}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2545656, 'duration': 10297}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2561712, 'duration': 8405}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2573051, 'duration': 3712}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2580828, 'duration': 3454}]}}}}]
[2020-08-11 13:51:45,707][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.022Z', 'endTime': '2020-08-11T06:04:56.024Z', 'duration': 2485823, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 134538, 'duration': 2228961}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2383661, 'duration': 82299}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2414369, 'duration': 6182}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2424151, 'duration': 6165}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2433357, 'duration': 10658}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2450478, 'duration': 5770}]}}}}]
[2020-08-11 13:51:45,740][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.054Z', 'endTime': '2020-08-11T06:04:56.056Z', 'duration': 2427815, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 148084, 'duration': 2179968}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2347895, 'duration': 64444}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2378053, 'duration': 6100}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2387750, 'duration': 6030}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2396133, 'duration': 3260}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2402546, 'duration': 3192}]}}}}]
[2020-08-11 13:51:45,769][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.083Z', 'endTime': '2020-08-11T06:04:56.086Z', 'duration': 2479826, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 135115, 'duration': 2234143}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2396745, 'duration': 66829}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2428046, 'duration': 6205}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2438004, 'duration': 5938}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2446345, 'duration': 3648}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2453130, 'duration': 3344}]}}}}]
[2020-08-11 13:51:45,801][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.115Z', 'endTime': '2020-08-11T06:04:56.118Z', 'duration': 2397530, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 130643, 'duration': 2162322}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2313555, 'duration': 67237}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2344973, 'duration': 6269}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2354768, 'duration': 6063}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2363719, 'duration': 3581}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2370835, 'duration': 3144}]}}}}]
[2020-08-11 13:51:45,834][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.148Z', 'endTime': '2020-08-11T06:04:56.151Z', 'duration': 2825551, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 149954, 'duration': 2580103}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2748618, 'duration': 62393}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2776753, 'duration': 6424}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2786417, 'duration': 6219}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2794991, 'duration': 3396}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2801490, 'duration': 3357}]}}}}]
[2020-08-11 13:51:45,865][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.179Z', 'endTime': '2020-08-11T06:04:56.181Z', 'duration': 2691684, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 193818, 'duration': 2359509}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2581677, 'duration': 90694}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2622304, 'duration': 8710}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2636656, 'duration': 8493}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2648666, 'duration': 5230}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2658605, 'duration': 4748}]}}}}]
[2020-08-11 13:51:45,893][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.208Z', 'endTime': '2020-08-11T06:04:56.210Z', 'duration': 2416627, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 136040, 'duration': 2173949}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2332485, 'duration': 67568}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2364235, 'duration': 6132}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2374568, 'duration': 5742}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2382657, 'duration': 3529}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2389868, 'duration': 3149}]}}}}]
[2020-08-11 13:51:45,923][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.238Z', 'endTime': '2020-08-11T06:04:56.240Z', 'duration': 2460043, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 129153, 'duration': 2200884}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2350793, 'duration': 87410}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2382080, 'duration': 9248}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2398888, 'duration': 9895}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2412415, 'duration': 5294}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2422609, 'duration': 5057}]}}}}]
[2020-08-11 13:51:45,956][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.268Z', 'endTime': '2020-08-11T06:04:56.272Z', 'duration': 4187982, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 131116, 'duration': 3886089}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 4047862, 'duration': 112629}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 4096478, 'duration': 12099}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 4115601, 'duration': 9775}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 4130060, 'duration': 6448}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 4142540, 'duration': 6271}]}}}}]
[2020-08-11 13:51:45,985][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.300Z', 'endTime': '2020-08-11T06:04:56.302Z', 'duration': 2285923, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 129660, 'duration': 2053692}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2201375, 'duration': 70623}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2236955, 'duration': 6642}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2247014, 'duration': 6052}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2255483, 'duration': 3983}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2262634, 'duration': 3166}]}}}}]
[2020-08-11 13:51:46,015][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.330Z', 'endTime': '2020-08-11T06:04:56.332Z', 'duration': 2333924, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 129041, 'duration': 2103248}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2255232, 'duration': 63067}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2283895, 'duration': 5936}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2293336, 'duration': 6194}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2301987, 'duration': 3859}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2308814, 'duration': 3173}]}}}}]
[2020-08-11 13:51:46,045][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.359Z', 'endTime': '2020-08-11T06:04:56.362Z', 'duration': 2561584, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 126022, 'duration': 2289254}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2443020, 'duration': 96688}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2481923, 'duration': 10553}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2498416, 'duration': 8811}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2511480, 'duration': 6143}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2523116, 'duration': 5685}]}}}}]
[2020-08-11 13:51:46,076][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.390Z', 'endTime': '2020-08-11T06:04:56.393Z', 'duration': 2344402, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 126045, 'duration': 2110052}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2257252, 'duration': 69957}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2290124, 'duration': 6405}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2300401, 'duration': 6651}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2309494, 'duration': 3821}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2316935, 'duration': 3276}]}}}}]
[2020-08-11 13:51:46,107][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.422Z', 'endTime': '2020-08-11T06:04:56.424Z', 'duration': 2225529, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 127680, 'duration': 2007912}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2152739, 'duration': 59374}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2179869, 'duration': 5897}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2189345, 'duration': 5286}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2196893, 'duration': 3496}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2203289, 'duration': 3009}]}}}}]
[2020-08-11 13:51:46,136][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.451Z', 'endTime': '2020-08-11T06:04:56.453Z', 'duration': 2278801, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 154014, 'duration': 2012609}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2187811, 'duration': 70978}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2217155, 'duration': 6285}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2226925, 'duration': 5904}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2235264, 'duration': 3577}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2241879, 'duration': 4395}]}}}}]
[2020-08-11 13:51:46,166][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.480Z', 'endTime': '2020-08-11T06:04:56.483Z', 'duration': 2344618, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 131864, 'duration': 2081533}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2233167, 'duration': 92403}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2271465, 'duration': 9337}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2288752, 'duration': 7769}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2298850, 'duration': 3446}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2305875, 'duration': 9106}]}}}}]
[2020-08-11 13:51:46,276][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.584Z', 'endTime': '2020-08-11T06:04:56.593Z', 'duration': 8950245, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 150694, 'duration': 5260238}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 5443617, 'duration': 3469214}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 5488306, 'duration': 9451}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 5502729, 'duration': 8338}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 5514456, 'duration': 5220}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 5523964, 'duration': 3362844}]}}}}]
[2020-08-11 13:51:46,308][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.622Z', 'endTime': '2020-08-11T06:04:56.625Z', 'duration': 2893177, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 169007, 'duration': 2558997}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2755615, 'duration': 116430}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2800414, 'duration': 13473}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2821275, 'duration': 11041}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2837639, 'duration': 7553}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2851809, 'duration': 7010}]}}}}]
[2020-08-11 13:51:46,342][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.655Z', 'endTime': '2020-08-11T06:04:56.659Z', 'duration': 3969651, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 165174, 'duration': 3677038}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3872901, 'duration': 75571}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3908234, 'duration': 7107}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3919520, 'duration': 6503}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3928903, 'duration': 3977}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3937129, 'duration': 3414}]}}}}]
[2020-08-11 13:51:46,374][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.688Z', 'endTime': '2020-08-11T06:04:56.691Z', 'duration': 2510262, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 138485, 'duration': 2263517}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2421142, 'duration': 67464}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2450990, 'duration': 6406}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2461687, 'duration': 6257}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2470656, 'duration': 3736}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2478185, 'duration': 3307}]}}}}]
[2020-08-11 13:51:46,403][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.717Z', 'endTime': '2020-08-11T06:04:56.720Z', 'duration': 2706363, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 125118, 'duration': 2430766}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2576901, 'duration': 104317}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2632127, 'duration': 8722}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2644822, 'duration': 6236}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2653486, 'duration': 3603}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2660877, 'duration': 3145}]}}}}]
[2020-08-11 13:51:46,433][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.747Z', 'endTime': '2020-08-11T06:04:56.749Z', 'duration': 2728405, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 141300, 'duration': 2484909}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2647081, 'duration': 65814}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2678296, 'duration': 5966}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2687891, 'duration': 6074}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2696476, 'duration': 3372}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2703056, 'duration': 3004}]}}}}]
[2020-08-11 13:51:46,466][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.778Z', 'endTime': '2020-08-11T06:04:56.783Z', 'duration': 5027314, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 136218, 'duration': 4742125}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 4908799, 'duration': 95911}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 4952566, 'duration': 9265}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 4967491, 'duration': 8283}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 4979394, 'duration': 5253}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 4989820, 'duration': 4953}]}}}}]
[2020-08-11 13:51:46,496][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.810Z', 'endTime': '2020-08-11T06:04:56.812Z', 'duration': 2552503, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 131551, 'duration': 2312230}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2466553, 'duration': 69478}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2499740, 'duration': 6436}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2510153, 'duration': 6137}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2518757, 'duration': 3665}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2525612, 'duration': 3220}]}}}}]
[2020-08-11 13:51:46,527][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.839Z', 'endTime': '2020-08-11T06:04:56.844Z', 'duration': 4379903, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 127485, 'duration': 4124034}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 4274534, 'duration': 86953}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 4311140, 'duration': 9460}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 4326182, 'duration': 8011}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 4337845, 'duration': 5138}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 4347634, 'duration': 4901}]}}}}]
[2020-08-11 13:51:46,555][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.870Z', 'endTime': '2020-08-11T06:04:56.872Z', 'duration': 2376562, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 129489, 'duration': 2141180}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2290063, 'duration': 62554}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2319003, 'duration': 5967}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2328413, 'duration': 5677}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2336412, 'duration': 3596}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2343144, 'duration': 3191}]}}}}]
[2020-08-11 13:51:46,585][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.900Z', 'endTime': '2020-08-11T06:04:56.902Z', 'duration': 2292075, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 131970, 'duration': 2058083}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2209185, 'duration': 63733}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2238412, 'duration': 6013}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2247960, 'duration': 5769}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2255941, 'duration': 3544}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2262596, 'duration': 3248}]}}}}]
[2020-08-11 13:51:46,614][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.928Z', 'endTime': '2020-08-11T06:04:56.931Z', 'duration': 2378017, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 130680, 'duration': 2149525}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2302043, 'duration': 61528}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2330479, 'duration': 5892}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2339817, 'duration': 5517}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2347692, 'duration': 3481}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2354225, 'duration': 3103}]}}}}]
[2020-08-11 13:51:46,643][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.957Z', 'endTime': '2020-08-11T06:04:56.960Z', 'duration': 2511220, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 156562, 'duration': 2231157}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2411819, 'duration': 81006}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2451803, 'duration': 9951}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2466398, 'duration': 6397}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2475231, 'duration': 3660}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2482353, 'duration': 3196}]}}}}]
[2020-08-11 13:51:46,671][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:56.985Z', 'endTime': '2020-08-11T06:04:56.988Z', 'duration': 2495866, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 147655, 'duration': 2209880}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2375944, 'duration': 101194}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2415057, 'duration': 11189}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2432956, 'duration': 8573}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2445270, 'duration': 11491}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2462090, 'duration': 4965}]}}}}]
[2020-08-11 13:51:46,702][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.016Z', 'endTime': '2020-08-11T06:04:57.019Z', 'duration': 2390718, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 168588, 'duration': 2123206}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2312304, 'duration': 62899}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2341727, 'duration': 6126}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2351526, 'duration': 5759}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2359677, 'duration': 3526}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2366056, 'duration': 2992}]}}}}]
[2020-08-11 13:51:46,773][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.083Z', 'endTime': '2020-08-11T06:04:57.089Z', 'duration': 5527288, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 149526, 'duration': 5202014}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 5378839, 'duration': 119670}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 5426287, 'duration': 15115}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 5449367, 'duration': 11069}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 5465004, 'duration': 7227}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 5478575, 'duration': 6503}]}}}}]
[2020-08-11 13:51:46,812][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.125Z', 'endTime': '2020-08-11T06:04:57.128Z', 'duration': 2822696, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 141272, 'duration': 2542843}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2712513, 'duration': 89854}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2755258, 'duration': 8378}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2769016, 'duration': 7785}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2780155, 'duration': 4748}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2789151, 'duration': 4265}]}}}}]
[2020-08-11 13:51:46,843][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.157Z', 'endTime': '2020-08-11T06:04:57.160Z', 'duration': 2551204, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 140421, 'duration': 2307270}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2467465, 'duration': 67760}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2498017, 'duration': 6361}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2509928, 'duration': 6239}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2518692, 'duration': 3737}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2525574, 'duration': 3053}]}}}}]
[2020-08-11 13:51:46,874][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.188Z', 'endTime': '2020-08-11T06:04:57.191Z', 'duration': 2961382, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 162162, 'duration': 2639492}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2833587, 'duration': 104622}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2877676, 'duration': 9020}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2892843, 'duration': 14092}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2911077, 'duration': 5778}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2921802, 'duration': 5862}]}}}}]
[2020-08-11 13:51:46,905][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.219Z', 'endTime': '2020-08-11T06:04:57.221Z', 'duration': 2405562, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 145230, 'duration': 2164280}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2328216, 'duration': 63322}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2356444, 'duration': 6300}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2366512, 'duration': 5946}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2374858, 'duration': 3847}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2381778, 'duration': 3265}]}}}}]
[2020-08-11 13:51:46,934][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.248Z', 'endTime': '2020-08-11T06:04:57.251Z', 'duration': 2367678, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 123874, 'duration': 2150399}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2290846, 'duration': 62643}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2319230, 'duration': 6055}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2329100, 'duration': 5640}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2337230, 'duration': 3574}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2343784, 'duration': 3371}]}}}}]
[2020-08-11 13:51:46,966][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.280Z', 'endTime': '2020-08-11T06:04:57.283Z', 'duration': 2369249, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 129151, 'duration': 2139458}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2289251, 'duration': 64587}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2319692, 'duration': 6016}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2329418, 'duration': 5718}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2337501, 'duration': 3529}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2344031, 'duration': 3107}]}}}}]
[2020-08-11 13:51:46,997][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.311Z', 'endTime': '2020-08-11T06:04:57.313Z', 'duration': 2360447, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 132849, 'duration': 2112736}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2275534, 'duration': 66470}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2307424, 'duration': 6356}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2317406, 'duration': 5706}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2325513, 'duration': 3481}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2332665, 'duration': 3139}]}}}}]
[2020-08-11 13:51:47,026][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.340Z', 'endTime': '2020-08-11T06:04:57.343Z', 'duration': 2315793, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 125889, 'duration': 2093554}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2238064, 'duration': 63656}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2268051, 'duration': 6073}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2277659, 'duration': 5657}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2285732, 'duration': 3559}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2292325, 'duration': 3306}]}}}}]
[2020-08-11 13:51:47,057][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.369Z', 'endTime': '2020-08-11T06:04:57.374Z', 'duration': 4306106, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 134689, 'duration': 4023116}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 4186813, 'duration': 100391}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 4229900, 'duration': 10948}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 4247061, 'duration': 9243}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 4260549, 'duration': 6159}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 4272650, 'duration': 5236}]}}}}]
[2020-08-11 13:51:47,089][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.403Z', 'endTime': '2020-08-11T06:04:57.405Z', 'duration': 2497144, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 134055, 'duration': 2242724}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2397749, 'duration': 83005}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2435307, 'duration': 10309}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2451504, 'duration': 8290}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2462434, 'duration': 3888}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2469910, 'duration': 3260}]}}}}]
[2020-08-11 13:51:47,119][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.433Z', 'endTime': '2020-08-11T06:04:57.435Z', 'duration': 2361006, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 143890, 'duration': 2094642}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2257219, 'duration': 86009}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2286943, 'duration': 12075}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2305311, 'duration': 8696}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2317981, 'duration': 5108}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2328306, 'duration': 4865}]}}}}]
[2020-08-11 13:51:47,150][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.464Z', 'endTime': '2020-08-11T06:04:57.466Z', 'duration': 2241893, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 127976, 'duration': 1992485}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2138908, 'duration': 78161}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2167437, 'duration': 6063}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2176786, 'duration': 5997}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2186044, 'duration': 9422}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2201367, 'duration': 5787}]}}}}]
[2020-08-11 13:51:47,180][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.493Z', 'endTime': '2020-08-11T06:04:57.496Z', 'duration': 3016264, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 138701, 'duration': 2735568}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2898015, 'duration': 97858}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2938587, 'duration': 9690}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2954035, 'duration': 8124}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2965992, 'duration': 9192}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2980436, 'duration': 5362}]}}}}]
[2020-08-11 13:51:47,212][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.526Z', 'endTime': '2020-08-11T06:04:57.528Z', 'duration': 2278461, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 132111, 'duration': 2045066}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2197068, 'duration': 66384}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2226131, 'duration': 9486}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2239317, 'duration': 5662}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2247362, 'duration': 3351}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2253692, 'duration': 3186}]}}}}]
[2020-08-11 13:51:47,241][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.555Z', 'endTime': '2020-08-11T06:04:57.557Z', 'duration': 2378822, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 134285, 'duration': 2138223}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2291646, 'duration': 67225}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2320027, 'duration': 6258}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2329962, 'duration': 5664}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2338040, 'duration': 3404}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2344599, 'duration': 3066}]}}}}]
[2020-08-11 13:51:47,269][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.583Z', 'endTime': '2020-08-11T06:04:57.586Z', 'duration': 2421869, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 132508, 'duration': 2169604}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2321257, 'duration': 84747}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2350626, 'duration': 6029}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2360769, 'duration': 5833}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2368958, 'duration': 8990}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2388184, 'duration': 8022}]}}}}]
[2020-08-11 13:51:47,299][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.612Z', 'endTime': '2020-08-11T06:04:57.615Z', 'duration': 2407431, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 123095, 'duration': 2153740}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2294667, 'duration': 93848}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2322146, 'duration': 5891}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2332151, 'duration': 11074}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2353307, 'duration': 7678}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2369443, 'duration': 8228}]}}}}]
[2020-08-11 13:51:47,330][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.644Z', 'endTime': '2020-08-11T06:04:57.646Z', 'duration': 2226046, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 128192, 'duration': 2004602}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2150516, 'duration': 61702}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2178817, 'duration': 6004}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2188253, 'duration': 5937}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2196446, 'duration': 3423}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2203042, 'duration': 3102}]}}}}]
[2020-08-11 13:51:47,361][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.675Z', 'endTime': '2020-08-11T06:04:57.677Z', 'duration': 2416047, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 131041, 'duration': 2185348}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2334591, 'duration': 67011}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2361827, 'duration': 5976}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2371659, 'duration': 5625}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2379734, 'duration': 3609}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2386647, 'duration': 3031}]}}}}]
[2020-08-11 13:51:47,393][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.706Z', 'endTime': '2020-08-11T06:04:57.710Z', 'duration': 3393675, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 193736, 'duration': 3104082}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3317008, 'duration': 61932}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3345806, 'duration': 6000}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3355449, 'duration': 5483}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3363275, 'duration': 3483}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3369715, 'duration': 3192}]}}}}]
[2020-08-11 13:51:47,426][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.740Z', 'endTime': '2020-08-11T06:04:57.742Z', 'duration': 2651244, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 134053, 'duration': 2389484}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2544726, 'duration': 84251}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2578285, 'duration': 9042}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2592783, 'duration': 7928}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2604428, 'duration': 5180}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2614226, 'duration': 4638}]}}}}]
[2020-08-11 13:51:47,455][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.769Z', 'endTime': '2020-08-11T06:04:57.772Z', 'duration': 2406035, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 132267, 'duration': 2150827}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2328041, 'duration': 62520}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2356574, 'duration': 5873}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2366278, 'duration': 5700}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2374447, 'duration': 3591}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2381381, 'duration': 3094}]}}}}]
[2020-08-11 13:51:47,484][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.798Z', 'endTime': '2020-08-11T06:04:57.800Z', 'duration': 2773622, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 129851, 'duration': 2530468}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2679078, 'duration': 79824}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2708824, 'duration': 13127}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2729079, 'duration': 8559}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2740458, 'duration': 3717}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2748223, 'duration': 3190}]}}}}]
[2020-08-11 13:51:47,537][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.851Z', 'endTime': '2020-08-11T06:04:57.854Z', 'duration': 3044267, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 129841, 'duration': 2796970}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2952241, 'duration': 69561}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2986113, 'duration': 5943}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2996128, 'duration': 6117}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3004651, 'duration': 3672}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3012109, 'duration': 3200}]}}}}]
[2020-08-11 13:51:47,569][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.882Z', 'endTime': '2020-08-11T06:04:57.885Z', 'duration': 2512335, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 272649, 'duration': 2142166}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2433544, 'duration': 63112}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2462550, 'duration': 6517}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2472770, 'duration': 5709}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2480870, 'duration': 3634}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2487441, 'duration': 3009}]}}}}]
[2020-08-11 13:51:47,599][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.913Z', 'endTime': '2020-08-11T06:04:57.916Z', 'duration': 2623714, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 189008, 'duration': 2302873}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2515192, 'duration': 89143}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2552365, 'duration': 8249}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2566367, 'duration': 8664}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2578814, 'duration': 5419}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2589686, 'duration': 4812}]}}}}]
[2020-08-11 13:51:47,631][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.945Z', 'endTime': '2020-08-11T06:04:57.948Z', 'duration': 2908236, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 126014, 'duration': 2682413}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2828398, 'duration': 64553}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2858308, 'duration': 6100}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2868145, 'duration': 5878}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2876517, 'duration': 3524}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2883361, 'duration': 2943}]}}}}]
[2020-08-11 13:51:47,661][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:57.975Z', 'endTime': '2020-08-11T06:04:57.977Z', 'duration': 2243833, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 124836, 'duration': 2029144}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2171531, 'duration': 58969}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2197909, 'duration': 6116}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2207707, 'duration': 5343}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2215323, 'duration': 3356}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2221526, 'duration': 2901}]}}}}]
[2020-08-11 13:51:47,691][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.005Z', 'endTime': '2020-08-11T06:04:58.008Z', 'duration': 2846715, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 125196, 'duration': 2589090}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2739212, 'duration': 87777}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2777801, 'duration': 8648}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2791738, 'duration': 8208}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2803753, 'duration': 4880}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2813256, 'duration': 4381}]}}}}]
[2020-08-11 13:51:47,721][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.035Z', 'endTime': '2020-08-11T06:04:58.037Z', 'duration': 2481762, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 131782, 'duration': 2209483}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2364428, 'duration': 94062}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2395052, 'duration': 16868}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2418627, 'duration': 8967}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2431220, 'duration': 5582}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2442524, 'duration': 4996}]}}}}]
[2020-08-11 13:51:47,749][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.063Z', 'endTime': '2020-08-11T06:04:58.065Z', 'duration': 2413639, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 129061, 'duration': 2184673}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2334273, 'duration': 63599}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2363942, 'duration': 6276}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2374003, 'duration': 5760}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2381949, 'duration': 3411}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2388245, 'duration': 3093}]}}}}]
[2020-08-11 13:51:47,778][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.092Z', 'endTime': '2020-08-11T06:04:58.094Z', 'duration': 2321386, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 128485, 'duration': 2071488}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2221115, 'duration': 79654}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2252305, 'duration': 6448}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2263783, 'duration': 7597}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2275253, 'duration': 5687}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2285914, 'duration': 5087}]}}}}]
[2020-08-11 13:51:47,808][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.122Z', 'endTime': '2020-08-11T06:04:58.125Z', 'duration': 2499814, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 134880, 'duration': 2226372}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2385866, 'duration': 94091}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2424666, 'duration': 9707}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2440359, 'duration': 8579}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2452921, 'duration': 5800}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2463689, 'duration': 5542}]}}}}]
[2020-08-11 13:51:47,837][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.151Z', 'endTime': '2020-08-11T06:04:58.153Z', 'duration': 2443465, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 127415, 'duration': 2193329}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2344762, 'duration': 79284}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2379189, 'duration': 6350}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2389019, 'duration': 6419}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2398369, 'duration': 5250}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2408234, 'duration': 5313}]}}}}]
[2020-08-11 13:51:47,867][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.180Z', 'endTime': '2020-08-11T06:04:58.183Z', 'duration': 2888994, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 131044, 'duration': 2227976}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2760427, 'duration': 105964}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2811036, 'duration': 11783}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2829093, 'duration': 8047}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2841022, 'duration': 4896}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2851271, 'duration': 4988}]}}}}]
[2020-08-11 13:51:47,896][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.210Z', 'endTime': '2020-08-11T06:04:58.213Z', 'duration': 2337930, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 127196, 'duration': 2117805}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2263377, 'duration': 60579}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2292105, 'duration': 5836}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2301131, 'duration': 5527}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2308752, 'duration': 3135}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2314600, 'duration': 2635}]}}}}]
[2020-08-11 13:51:47,926][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.239Z', 'endTime': '2020-08-11T06:04:58.242Z', 'duration': 3567782, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 131562, 'duration': 3339871}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3490456, 'duration': 61928}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3519769, 'duration': 5870}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3528903, 'duration': 5778}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3536779, 'duration': 3320}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3543157, 'duration': 2738}]}}}}]
[2020-08-11 13:51:47,956][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.270Z', 'endTime': '2020-08-11T06:04:58.273Z', 'duration': 2479765, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 181479, 'duration': 2177691}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2379266, 'duration': 83819}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2419675, 'duration': 10761}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2434257, 'duration': 9481}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2445839, 'duration': 3460}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2452764, 'duration': 2791}]}}}}]
[2020-08-11 13:51:47,984][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.299Z', 'endTime': '2020-08-11T06:04:58.301Z', 'duration': 2407537, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 138896, 'duration': 2139106}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2302169, 'duration': 89951}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2340687, 'duration': 10435}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2356833, 'duration': 8243}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2368951, 'duration': 5501}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2379415, 'duration': 5042}]}}}}]
[2020-08-11 13:51:48,015][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.329Z', 'endTime': '2020-08-11T06:04:58.332Z', 'duration': 2250711, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 119650, 'duration': 2002189}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2145660, 'duration': 89722}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2183375, 'duration': 10266}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2198968, 'duration': 7945}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2210186, 'duration': 5320}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2220460, 'duration': 5216}]}}}}]
[2020-08-11 13:51:48,044][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.358Z', 'endTime': '2020-08-11T06:04:58.360Z', 'duration': 2234799, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 121215, 'duration': 1982154}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2128947, 'duration': 89140}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2166902, 'duration': 9865}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2181943, 'duration': 8111}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2193400, 'duration': 5455}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2203641, 'duration': 4573}]}}}}]
[2020-08-11 13:51:48,072][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.386Z', 'endTime': '2020-08-11T06:04:58.389Z', 'duration': 2226664, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 113759, 'duration': 1987167}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2122856, 'duration': 84631}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2158088, 'duration': 8991}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2172336, 'duration': 8002}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2183607, 'duration': 5408}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2193452, 'duration': 4618}]}}}}]
[2020-08-11 13:51:48,100][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.415Z', 'endTime': '2020-08-11T06:04:58.417Z', 'duration': 2255292, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 123740, 'duration': 2005890}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2151707, 'duration': 85124}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2188075, 'duration': 9174}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2202426, 'duration': 7983}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2213490, 'duration': 4845}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2222756, 'duration': 4513}]}}}}]
[2020-08-11 13:51:48,129][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.443Z', 'endTime': '2020-08-11T06:04:58.446Z', 'duration': 2177825, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 115985, 'duration': 1940769}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2077690, 'duration': 81520}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2113861, 'duration': 9049}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2127798, 'duration': 7161}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2137855, 'duration': 4373}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2146133, 'duration': 4007}]}}}}]
[2020-08-11 13:51:48,159][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.473Z', 'endTime': '2020-08-11T06:04:58.475Z', 'duration': 2516331, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 112943, 'duration': 2290772}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2421378, 'duration': 77361}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2450406, 'duration': 5691}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2459465, 'duration': 8750}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2472443, 'duration': 6809}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2483900, 'duration': 5224}]}}}}]
[2020-08-11 13:51:48,189][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.503Z', 'endTime': '2020-08-11T06:04:58.505Z', 'duration': 2616812, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 158415, 'duration': 2354248}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2533132, 'duration': 66520}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2565494, 'duration': 5907}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2574741, 'duration': 6502}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2584122, 'duration': 3231}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2590446, 'duration': 2747}]}}}}]
[2020-08-11 13:51:48,217][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.531Z', 'endTime': '2020-08-11T06:04:58.534Z', 'duration': 2150243, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 113847, 'duration': 1918346}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2053327, 'duration': 78746}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2088280, 'duration': 8323}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2101204, 'duration': 7078}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2111140, 'duration': 4307}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2119101, 'duration': 3951}]}}}}]
[2020-08-11 13:51:48,334][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.647Z', 'endTime': '2020-08-11T06:04:58.651Z', 'duration': 3348716, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 171271, 'duration': 2999001}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3201234, 'duration': 120879}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3251088, 'duration': 13535}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3271484, 'duration': 11160}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3287261, 'duration': 7397}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3300944, 'duration': 7462}]}}}}]
[2020-08-11 13:51:48,376][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.689Z', 'endTime': '2020-08-11T06:04:58.692Z', 'duration': 3072587, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 199475, 'duration': 2754473}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2975142, 'duration': 79558}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3010652, 'duration': 7903}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3023042, 'duration': 7368}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3033110, 'duration': 4862}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3041687, 'duration': 4308}]}}}}]
[2020-08-11 13:51:48,413][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.726Z', 'endTime': '2020-08-11T06:04:58.730Z', 'duration': 3170895, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 148781, 'duration': 2907315}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3078285, 'duration': 73450}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3112390, 'duration': 7311}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3123439, 'duration': 6544}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3132462, 'duration': 4298}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3140207, 'duration': 3764}]}}}}]
[2020-08-11 13:51:48,453][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.766Z', 'endTime': '2020-08-11T06:04:58.769Z', 'duration': 2653070, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 142993, 'duration': 2388247}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2552134, 'duration': 83213}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2585373, 'duration': 7617}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2596664, 'duration': 6697}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2605956, 'duration': 4245}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2613530, 'duration': 3540}]}}}}]
[2020-08-11 13:51:48,488][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.801Z', 'endTime': '2020-08-11T06:04:58.804Z', 'duration': 2960458, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 359701, 'duration': 2486081}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2869366, 'duration': 72013}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2903541, 'duration': 7115}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2914396, 'duration': 6264}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2923128, 'duration': 3774}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2930244, 'duration': 3520}]}}}}]
[2020-08-11 13:51:48,521][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.834Z', 'endTime': '2020-08-11T06:04:58.837Z', 'duration': 2656021, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 131134, 'duration': 2392777}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2560613, 'duration': 74015}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2595262, 'duration': 6931}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2605640, 'duration': 5865}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2613629, 'duration': 3373}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2620763, 'duration': 4170}]}}}}]
[2020-08-11 13:51:48,552][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.865Z', 'endTime': '2020-08-11T06:04:58.868Z', 'duration': 3143174, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 151853, 'duration': 2844714}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 3018200, 'duration': 85721}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3049999, 'duration': 6667}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3060077, 'duration': 10596}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3075655, 'duration': 7780}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3088277, 'duration': 5416}]}}}}]
[2020-08-11 13:51:48,585][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.899Z', 'endTime': '2020-08-11T06:04:58.902Z', 'duration': 2562101, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 128729, 'duration': 2320691}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2467864, 'duration': 73772}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2495736, 'duration': 5689}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2505834, 'duration': 7542}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2516507, 'duration': 5038}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2525552, 'duration': 4682}]}}}}]
[2020-08-11 13:51:48,617][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.930Z', 'endTime': '2020-08-11T06:04:58.933Z', 'duration': 2818821, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 183669, 'duration': 2476250}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2688859, 'duration': 96401}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2732063, 'duration': 7943}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2744189, 'duration': 7805}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2754666, 'duration': 3725}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2766161, 'duration': 7851}]}}}}]
[2020-08-11 13:51:48,646][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.960Z', 'endTime': '2020-08-11T06:04:58.963Z', 'duration': 2756389, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 176004, 'duration': 2448965}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2650264, 'duration': 85395}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2689256, 'duration': 8457}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2702632, 'duration': 8270}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2713957, 'duration': 4577}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2722237, 'duration': 4283}]}}}}]
[2020-08-11 13:51:48,679][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:58.992Z', 'endTime': '2020-08-11T06:04:58.995Z', 'duration': 2901953, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 127616, 'duration': 2632460}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2785530, 'duration': 96078}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2823547, 'duration': 9033}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2837187, 'duration': 8080}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2848945, 'duration': 12449}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2866646, 'duration': 5074}]}}}}]
[2020-08-11 13:51:48,709][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.023Z', 'endTime': '2020-08-11T06:04:59.025Z', 'duration': 2497137, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 123657, 'duration': 2259807}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2401460, 'duration': 77546}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2429070, 'duration': 5733}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2438589, 'duration': 10943}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2454190, 'duration': 6121}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2464739, 'duration': 4868}]}}}}]
[2020-08-11 13:51:48,745][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.053Z', 'endTime': '2020-08-11T06:04:59.062Z', 'duration': 8377420, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 124854, 'duration': 8095026}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 8255160, 'duration': 96003}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 8299264, 'duration': 10056}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 8314553, 'duration': 8692}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 8326273, 'duration': 5140}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 8335594, 'duration': 4764}]}}}}]
[2020-08-11 13:51:48,775][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.089Z', 'endTime': '2020-08-11T06:04:59.092Z', 'duration': 2459897, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 162306, 'duration': 2171240}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2356525, 'duration': 83706}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2392264, 'duration': 9013}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2405932, 'duration': 7378}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2416504, 'duration': 4687}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2425226, 'duration': 4239}]}}}}]
[2020-08-11 13:51:48,806][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.121Z', 'endTime': '2020-08-11T06:04:59.123Z', 'duration': 2240640, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 124962, 'duration': 2014842}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2160485, 'duration': 61652}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2190130, 'duration': 5766}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2199281, 'duration': 5237}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2207004, 'duration': 3146}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2212660, 'duration': 3223}]}}}}]
[2020-08-11 13:51:48,834][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.149Z', 'endTime': '2020-08-11T06:04:59.151Z', 'duration': 2453396, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 285940, 'duration': 2065823}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2371814, 'duration': 64967}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2401731, 'duration': 5824}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2410468, 'duration': 5550}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2417999, 'duration': 3330}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2423910, 'duration': 6322}]}}}}]
[2020-08-11 13:51:48,864][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.178Z', 'endTime': '2020-08-11T06:04:59.181Z', 'duration': 2836388, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 590484, 'duration': 2133308}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2750973, 'duration': 65456}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2785462, 'duration': 6066}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2794308, 'duration': 5417}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2801507, 'duration': 3209}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2807034, 'duration': 2662}]}}}}]
[2020-08-11 13:51:48,891][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.206Z', 'endTime': '2020-08-11T06:04:59.208Z', 'duration': 2190093, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 112684, 'duration': 1968018}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2099868, 'duration': 71328}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2131483, 'duration': 8727}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2144582, 'duration': 7488}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2154675, 'duration': 4619}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2162187, 'duration': 2758}]}}}}]
[2020-08-11 13:51:48,923][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.237Z', 'endTime': '2020-08-11T06:04:59.240Z', 'duration': 2376663, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 110834, 'duration': 2138266}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2306554, 'duration': 56568}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2333586, 'duration': 5657}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2342135, 'duration': 5268}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2349055, 'duration': 2660}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2354420, 'duration': 2386}]}}}}]
[2020-08-11 13:51:48,950][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.265Z', 'endTime': '2020-08-11T06:04:59.267Z', 'duration': 2199323, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 120221, 'duration': 1964724}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2105459, 'duration': 76828}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2138937, 'duration': 8416}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2150414, 'duration': 8483}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2161278, 'duration': 4340}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2169106, 'duration': 4265}]}}}}]
[2020-08-11 13:51:48,980][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.294Z', 'endTime': '2020-08-11T06:04:59.296Z', 'duration': 2212396, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 112662, 'duration': 1984444}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2116944, 'duration': 77678}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2150606, 'duration': 8930}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2163938, 'duration': 6878}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2173285, 'duration': 4495}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2181459, 'duration': 4224}]}}}}]
[2020-08-11 13:51:49,008][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.323Z', 'endTime': '2020-08-11T06:04:59.325Z', 'duration': 2133707, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 109676, 'duration': 1943637}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2067907, 'duration': 52945}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2092334, 'duration': 5313}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2100193, 'duration': 5413}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2107282, 'duration': 3141}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2112662, 'duration': 2550}]}}}}]
[2020-08-11 13:51:49,037][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.352Z', 'endTime': '2020-08-11T06:04:59.354Z', 'duration': 2080689, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 112062, 'duration': 1888335}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2015559, 'duration': 52259}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2038912, 'duration': 5550}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2047201, 'duration': 5315}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2054197, 'duration': 2833}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2059699, 'duration': 2665}]}}}}]
[2020-08-11 13:51:49,065][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.380Z', 'endTime': '2020-08-11T06:04:59.382Z', 'duration': 2080330, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 138700, 'duration': 1856778}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2015152, 'duration': 52785}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2039872, 'duration': 5702}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2048296, 'duration': 4781}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2054673, 'duration': 2826}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2059792, 'duration': 2665}]}}}}]
[2020-08-11 13:51:49,094][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.408Z', 'endTime': '2020-08-11T06:04:59.410Z', 'duration': 2191405, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 112152, 'duration': 1970099}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2100922, 'duration': 71927}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2132318, 'duration': 7450}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2143743, 'duration': 6223}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2152398, 'duration': 4212}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2160060, 'duration': 4203}]}}}}]
[2020-08-11 13:51:49,125][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.439Z', 'endTime': '2020-08-11T06:04:59.442Z', 'duration': 2250630, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 110874, 'duration': 2023182}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2154803, 'duration': 79026}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2189173, 'duration': 9054}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2202706, 'duration': 7344}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2212712, 'duration': 4413}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2220626, 'duration': 3961}]}}}}]
[2020-08-11 13:51:49,155][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.469Z', 'endTime': '2020-08-11T06:04:59.471Z', 'duration': 2115939, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 112688, 'duration': 1893710}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2026957, 'duration': 71754}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2057923, 'duration': 8330}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2070330, 'duration': 6706}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2079385, 'duration': 4030}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2086899, 'duration': 3555}]}}}}]
[2020-08-11 13:51:49,183][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.497Z', 'endTime': '2020-08-11T06:04:59.500Z', 'duration': 2195723, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 119103, 'duration': 1985068}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2119375, 'duration': 59125}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2143625, 'duration': 5280}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2151859, 'duration': 5020}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2158570, 'duration': 2922}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2163824, 'duration': 3216}]}}}}]
[2020-08-11 13:51:49,210][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.524Z', 'endTime': '2020-08-11T06:04:59.527Z', 'duration': 2161331, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 119046, 'duration': 1954344}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2090982, 'duration': 55747}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2116889, 'duration': 5464}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2125035, 'duration': 5356}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2132150, 'duration': 3442}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2137886, 'duration': 2561}]}}}}]
[2020-08-11 13:51:49,238][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.553Z', 'endTime': '2020-08-11T06:04:59.555Z', 'duration': 2125469, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 116514, 'duration': 1920708}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2055894, 'duration': 55600}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2081662, 'duration': 6177}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2090539, 'duration': 5556}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2097773, 'duration': 2997}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2103012, 'duration': 2407}]}}}}]
[2020-08-11 13:51:49,267][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.581Z', 'endTime': '2020-08-11T06:04:59.583Z', 'duration': 2151356, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 114770, 'duration': 1950257}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2081158, 'duration': 55835}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2107711, 'duration': 5818}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2116219, 'duration': 5317}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2123186, 'duration': 2894}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2128679, 'duration': 2410}]}}}}]
[2020-08-11 13:51:49,294][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.609Z', 'endTime': '2020-08-11T06:04:59.611Z', 'duration': 2119570, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 110295, 'duration': 1906727}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2032527, 'duration': 72361}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2058531, 'duration': 10573}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2074393, 'duration': 8410}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2085564, 'duration': 5182}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2094714, 'duration': 3013}]}}}}]
[2020-08-11 13:51:49,322][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.637Z', 'endTime': '2020-08-11T06:04:59.640Z', 'duration': 2190881, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 116306, 'duration': 1992896}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2124476, 'duration': 53601}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2149165, 'duration': 5350}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2157176, 'duration': 5303}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2164125, 'duration': 3229}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2169791, 'duration': 2526}]}}}}]
[2020-08-11 13:51:49,351][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.666Z', 'endTime': '2020-08-11T06:04:59.669Z', 'duration': 2161296, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 123916, 'duration': 1935198}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2075588, 'duration': 71383}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2108179, 'duration': 10197}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2122615, 'duration': 6107}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2130505, 'duration': 3400}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2136778, 'duration': 3103}]}}}}]
[2020-08-11 13:51:49,380][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.695Z', 'endTime': '2020-08-11T06:04:59.697Z', 'duration': 2127001, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 118847, 'duration': 1911222}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2049818, 'duration': 58089}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2078521, 'duration': 5710}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2086987, 'duration': 5613}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2094309, 'duration': 3111}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2099808, 'duration': 2355}]}}}}]
[2020-08-11 13:51:49,408][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.722Z', 'endTime': '2020-08-11T06:04:59.724Z', 'duration': 2080667, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 114147, 'duration': 1879302}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2011467, 'duration': 54664}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2038007, 'duration': 5481}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2046101, 'duration': 4936}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2052652, 'duration': 2896}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2057769, 'duration': 2540}]}}}}]
[2020-08-11 13:51:49,439][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.750Z', 'endTime': '2020-08-11T06:04:59.756Z', 'duration': 5891968, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 144776, 'duration': 5610053}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 5781035, 'duration': 85503}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 5817756, 'duration': 6760}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 5828000, 'duration': 10689}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 5842180, 'duration': 5793}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 5852075, 'duration': 4702}]}}}}]
[2020-08-11 13:51:49,468][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.783Z', 'endTime': '2020-08-11T06:04:59.785Z', 'duration': 2137139, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 124230, 'duration': 1888053}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2034785, 'duration': 75408}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2067109, 'duration': 8342}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2079442, 'duration': 6789}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2088882, 'duration': 4520}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2097227, 'duration': 4366}]}}}}]
[2020-08-11 13:51:49,496][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.811Z', 'endTime': '2020-08-11T06:04:59.813Z', 'duration': 2543761, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 153989, 'duration': 2296337}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2468171, 'duration': 58558}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2497419, 'duration': 5497}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2505601, 'duration': 5377}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2512658, 'duration': 2775}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2518028, 'duration': 2450}]}}}}]
[2020-08-11 13:51:49,524][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.839Z', 'endTime': '2020-08-11T06:04:59.842Z', 'duration': 2106181, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 117118, 'duration': 1900832}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2033708, 'duration': 58275}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2062222, 'duration': 5523}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2071089, 'duration': 5230}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2078318, 'duration': 2865}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2083532, 'duration': 2512}]}}}}]
[2020-08-11 13:51:49,552][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.866Z', 'endTime': '2020-08-11T06:04:59.869Z', 'duration': 2326362, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 169125, 'duration': 2053290}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2240948, 'duration': 67470}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2271929, 'duration': 6550}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2282009, 'duration': 5951}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2290116, 'duration': 4031}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2297060, 'duration': 3691}]}}}}]
[2020-08-11 13:51:49,580][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.895Z', 'endTime': '2020-08-11T06:04:59.897Z', 'duration': 2055568, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 116653, 'duration': 1840047}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 1971924, 'duration': 66316}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 1996710, 'duration': 5241}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2004589, 'duration': 4995}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2011610, 'duration': 8729}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2025139, 'duration': 4805}]}}}}]
[2020-08-11 13:51:49,607][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.922Z', 'endTime': '2020-08-11T06:04:59.924Z', 'duration': 2164599, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 126234, 'duration': 1950705}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2092451, 'duration': 53625}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2117990, 'duration': 5349}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2126202, 'duration': 5032}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2132823, 'duration': 2818}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2137802, 'duration': 2544}]}}}}]
[2020-08-11 13:51:49,637][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.952Z', 'endTime': '2020-08-11T06:04:59.954Z', 'duration': 2056121, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 111177, 'duration': 1842183}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 1969540, 'duration': 68023}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 1995148, 'duration': 5679}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2003598, 'duration': 5342}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2010601, 'duration': 3019}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2020349, 'duration': 7760}]}}}}]
[2020-08-11 13:51:49,668][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:04:59.983Z', 'endTime': '2020-08-11T06:04:59.985Z', 'duration': 2182914, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 115543, 'duration': 1944398}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2083308, 'duration': 79293}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2119683, 'duration': 8899}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2132842, 'duration': 6939}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2142282, 'duration': 4094}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2149654, 'duration': 4205}]}}}}]
[2020-08-11 13:51:49,699][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:05:00.014Z', 'endTime': '2020-08-11T06:05:00.016Z', 'duration': 2277003, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 261625, 'duration': 1932996}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2210028, 'duration': 52608}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2234616, 'duration': 5236}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2242525, 'duration': 4963}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2249024, 'duration': 2872}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2254169, 'duration': 2601}]}}}}]
[2020-08-11 13:51:49,729][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:05:00.042Z', 'endTime': '2020-08-11T06:05:00.045Z', 'duration': 3387151, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 113512, 'duration': 1966712}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2095489, 'duration': 1275431}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 3337300, 'duration': 7260}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 3348111, 'duration': 5398}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 3355235, 'duration': 3004}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 3361478, 'duration': 2530}]}}}}]
[2020-08-11 13:51:49,758][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:05:00.072Z', 'endTime': '2020-08-11T06:05:00.075Z', 'duration': 2323963, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 110414, 'duration': 2133431}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2260592, 'duration': 47425}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2283414, 'duration': 3877}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2289881, 'duration': 4152}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2295885, 'duration': 2107}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2300118, 'duration': 1766}]}}}}]
[2020-08-11 13:51:49,790][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:05:00.105Z', 'endTime': '2020-08-11T06:05:00.107Z', 'duration': 1923141, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 113438, 'duration': 1733058}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 1862214, 'duration': 46674}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 1883894, 'duration': 4079}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 1890893, 'duration': 4194}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 1896736, 'duration': 2499}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 1901574, 'duration': 1703}]}}}}]
[2020-08-11 13:51:49,817][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:05:00.132Z', 'endTime': '2020-08-11T06:05:00.134Z', 'duration': 1986610, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 108545, 'duration': 1793343}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 1921064, 'duration': 48306}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 1943723, 'duration': 5001}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 1951422, 'duration': 4690}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 1957812, 'duration': 2160}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 1962263, 'duration': 1824}]}}}}]
[2020-08-11 13:51:49,845][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:05:00.160Z', 'endTime': '2020-08-11T06:05:00.162Z', 'duration': 2388612, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 118921, 'duration': 2152295}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2294839, 'duration': 72094}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2326777, 'duration': 7280}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2338149, 'duration': 6053}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2347050, 'duration': 3541}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2354438, 'duration': 3084}]}}}}]
[2020-08-11 13:51:49,920][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:05:00.235Z', 'endTime': '2020-08-11T06:05:00.237Z', 'duration': 2003928, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 122084, 'duration': 1801152}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 1940351, 'duration': 48816}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 1963011, 'duration': 4349}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 1970040, 'duration': 4502}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 1976540, 'duration': 2280}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 1981227, 'duration': 1951}]}}}}]
[2020-08-11 13:51:49,949][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:05:00.265Z', 'endTime': '2020-08-11T06:05:00.267Z', 'duration': 2074200, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 109925, 'duration': 1883230}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2014615, 'duration': 46301}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2036638, 'duration': 4229}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2043637, 'duration': 4249}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2049393, 'duration': 2276}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2053820, 'duration': 1726}]}}}}]
[2020-08-11 13:51:49,976][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:05:00.291Z', 'endTime': '2020-08-11T06:05:00.294Z', 'duration': 2272970, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 111012, 'duration': 2070855}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2196399, 'duration': 58395}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2218178, 'duration': 5246}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2227184, 'duration': 5980}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2235408, 'duration': 3413}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2241511, 'duration': 2097}]}}}}]
[2020-08-11 13:51:50,004][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:05:00.319Z', 'endTime': '2020-08-11T06:05:00.321Z', 'duration': 2107346, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 175902, 'duration': 1825765}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2021166, 'duration': 69462}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2050579, 'duration': 5620}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2059157, 'duration': 4820}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2066292, 'duration': 3163}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2072925, 'duration': 3069}]}}}}]
[2020-08-11 13:51:50,033][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:05:00.348Z', 'endTime': '2020-08-11T06:05:00.350Z', 'duration': 1991210, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 112353, 'duration': 1769708}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 1902012, 'duration': 65956}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 1931377, 'duration': 6477}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 1942468, 'duration': 5683}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 1950358, 'duration': 2938}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 1956516, 'duration': 2925}]}}}}]
[2020-08-11 13:51:50,063][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:05:00.377Z', 'endTime': '2020-08-11T06:05:00.380Z', 'duration': 2908376, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 113879, 'duration': 2009466}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2800752, 'duration': 85780}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2843453, 'duration': 7892}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2855608, 'duration': 6839}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2865086, 'duration': 3750}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2872621, 'duration': 3250}]}}}}]
[2020-08-11 13:51:50,090][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:05:00.406Z', 'endTime': '2020-08-11T06:05:00.408Z', 'duration': 1972295, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 114451, 'duration': 1785063}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 1913818, 'duration': 45760}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 1934597, 'duration': 3774}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 1941234, 'duration': 3945}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 1947289, 'duration': 2300}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 1951858, 'duration': 1717}]}}}}]
[2020-08-11 13:51:50,118][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:05:00.433Z', 'endTime': '2020-08-11T06:05:00.435Z', 'duration': 2210262, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 124742, 'duration': 1974066}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2120766, 'duration': 70986}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2152425, 'duration': 6615}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2163886, 'duration': 5787}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2172301, 'duration': 3449}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2179487, 'duration': 3239}]}}}}]
[2020-08-11 13:51:50,146][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:05:00.461Z', 'endTime': '2020-08-11T06:05:00.464Z', 'duration': 2339286, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 116077, 'duration': 2142889}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2275810, 'duration': 49163}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2299221, 'duration': 4067}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2306574, 'duration': 4254}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2312532, 'duration': 2250}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2317034, 'duration': 1848}]}}}}]
[2020-08-11 13:51:50,247][Thread-4:4920][task_id:root][graphql_utils.py:37][INFO][{'data': {'ai_biomind': {'pprediction': {}, 'preport': [], 'pcontour': None, 'pmodels': {}, 'pstudy_uid': ''}}, 'extensions': {'tracing': {'version': 1, 'startTime': '2020-08-11T06:05:00.562Z', 'endTime': '2020-08-11T06:05:00.564Z', 'duration': 2374937, 'execution': {'resolvers': [{'path': ['ai_biomind'], 'parentType': 'Query', 'fieldName': 'ai_biomind', 'returnType': 'Protocol', 'startOffset': 126396, 'duration': 2171595}, {'path': ['ai_biomind', 'pprediction'], 'parentType': 'Protocol', 'fieldName': 'pprediction', 'returnType': 'JSON', 'startOffset': 2313916, 'duration': 46801}, {'path': ['ai_biomind', 'preport'], 'parentType': 'Protocol', 'fieldName': 'preport', 'returnType': '[JSON]', 'startOffset': 2335797, 'duration': 4233}, {'path': ['ai_biomind', 'pcontour'], 'parentType': 'Protocol', 'fieldName': 'pcontour', 'returnType': 'JSON', 'startOffset': 2342696, 'duration': 4376}, {'path': ['ai_biomind', 'pmodels'], 'parentType': 'Protocol', 'fieldName': 'pmodels', 'returnType': 'JSON', 'startOffset': 2348856, 'duration': 2044}, {'path': ['ai_biomind', 'pstudy_uid'], 'parentType': 'Protocol', 'fieldName': 'pstudy_uid', 'returnType': 'String', 'startOffset': 2353353, 'duration': 1724}]}}}}]
[2020-08-11 16:36:35,842][Thread-4:7820][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 16:36:35,845][Thread-4:7820][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 16:36:35,842][Thread-3:9392][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 16:36:35,847][Thread-3:9392][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 16:36:36,088][Thread-5:8480][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 16:36:36,088][Thread-5:8480][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 16:36:36,088][Thread-5:8480][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 17.94373492634596s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 16:36:38,343][Thread-4:7820][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 16:36:38,345][Thread-3:9392][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 16:36:38,345][Thread-4:7820][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 16:36:38,346][Thread-3:9392][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 16:36:54,266][Thread-5:8480][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 16:36:54,266][Thread-5:8480][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 16:36:54,266][Thread-5:8480][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 2.576492686419747s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 16:36:56,121][Thread-4:7820][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 16:36:56,122][Thread-3:9392][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 16:36:56,123][Thread-4:7820][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 16:36:56,124][Thread-3:9392][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 16:36:58,091][Thread-5:8480][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 16:36:58,091][Thread-5:8480][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 16:36:58,091][Thread-5:8480][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 49.53817173992837s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 16:36:59,595][Thread-3:9392][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 16:36:59,595][Thread-3:9392][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 16:36:59,595][Thread-3:9392][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 18.072317080566233s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 16:37:16,341][Thread-4:7820][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 16:37:16,341][Thread-4:7820][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 16:37:16,341][Thread-4:7820][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 2.782318558203447s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 16:37:17,905][Thread-3:9392][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 16:37:17,905][Thread-3:9392][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 16:37:17,906][Thread-3:9392][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 24.992888880489886s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 16:37:19,368][Thread-4:7820][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 16:37:19,368][Thread-4:7820][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 16:37:19,368][Thread-4:7820][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 37.41783578062049s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 16:37:43,233][Thread-3:9392][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 16:37:43,234][Thread-3:9392][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 16:37:43,234][Thread-3:9392][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 33.895154186382946s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 16:37:48,906][Thread-5:8480][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 16:37:48,906][Thread-5:8480][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "C:\Python\Python37\lib\http\client.py", line 1344, in getresponse
    response.begin()
  File "C:\Python\Python37\lib\http\client.py", line 306, in begin
    version, status, reason = self._read_status()
  File "C:\Python\Python37\lib\http\client.py", line 267, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "C:\Python\Python37\lib\socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 449, in send
    timeout=timeout
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "D:\workspace\venv\lib\site-packages\urllib3\util\retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\common\jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 472, in __init__
    si = self.server_info()
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 146, in __verb
    raise exception
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))
[2020-08-11 16:37:48,912][Thread-5:8480][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-08-11 16:37:58,029][Thread-4:7820][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 16:37:58,030][Thread-4:7820][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 16:37:58,030][Thread-4:7820][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 22.977116093873533s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 16:38:10,975][Thread-5:8480][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 16:38:10,976][Thread-5:8480][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 16:38:10,983][Thread-6:9288][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 16:38:10,984][Thread-6:9288][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 16:38:11,218][Thread-7:7112][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 16:38:11,218][Thread-7:7112][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 16:38:11,219][Thread-7:7112][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 12.165456371484769s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 16:38:11,835][Thread-6:9288][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 16:38:11,836][Thread-6:9288][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 16:38:11,843][Thread-5:8480][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 16:38:11,844][Thread-5:8480][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 16:38:17,357][Thread-3:9392][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 16:38:17,357][Thread-3:9392][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "C:\Python\Python37\lib\http\client.py", line 1344, in getresponse
    response.begin()
  File "C:\Python\Python37\lib\http\client.py", line 306, in begin
    version, status, reason = self._read_status()
  File "C:\Python\Python37\lib\http\client.py", line 267, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "C:\Python\Python37\lib\socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 449, in send
    timeout=timeout
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "D:\workspace\venv\lib\site-packages\urllib3\util\retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\common\jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 472, in __init__
    si = self.server_info()
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 146, in __verb
    raise exception
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))
[2020-08-11 16:38:21,237][Thread-4:7820][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 16:38:21,238][Thread-4:7820][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "C:\Python\Python37\lib\http\client.py", line 1344, in getresponse
    response.begin()
  File "C:\Python\Python37\lib\http\client.py", line 306, in begin
    version, status, reason = self._read_status()
  File "C:\Python\Python37\lib\http\client.py", line 267, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "C:\Python\Python37\lib\socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 449, in send
    timeout=timeout
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "D:\workspace\venv\lib\site-packages\urllib3\util\retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\common\jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 472, in __init__
    si = self.server_info()
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 146, in __verb
    raise exception
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))
[2020-08-11 16:38:24,646][Thread-7:7112][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 16:38:24,647][Thread-7:7112][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 16:38:24,647][Thread-7:7112][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 2.0046271245070857s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 16:38:26,986][Thread-7:7112][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 16:38:26,987][Thread-7:7112][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 16:38:26,987][Thread-7:7112][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 34.332023235664565s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 16:38:32,067][Thread-5:8480][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 16:38:32,067][Thread-5:8480][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 16:38:32,067][Thread-5:8480][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 19.949638731512287s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 16:38:52,285][Thread-5:8480][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 16:38:52,285][Thread-5:8480][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 16:38:52,285][Thread-5:8480][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 14.461403641699171s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 16:39:01,647][Thread-7:7112][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 16:39:01,648][Thread-7:7112][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "C:\Python\Python37\lib\http\client.py", line 1344, in getresponse
    response.begin()
  File "C:\Python\Python37\lib\http\client.py", line 306, in begin
    version, status, reason = self._read_status()
  File "C:\Python\Python37\lib\http\client.py", line 267, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "C:\Python\Python37\lib\socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 449, in send
    timeout=timeout
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "D:\workspace\venv\lib\site-packages\urllib3\util\retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\common\jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 472, in __init__
    si = self.server_info()
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 146, in __verb
    raise exception
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))
[2020-08-11 16:39:01,650][Thread-7:7112][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-08-11 16:39:07,993][Thread-5:8480][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 16:39:07,993][Thread-5:8480][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 16:39:07,993][Thread-5:8480][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 36.65761745741018s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 16:39:44,886][Thread-5:8480][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 16:39:44,887][Thread-5:8480][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "C:\Python\Python37\lib\http\client.py", line 1344, in getresponse
    response.begin()
  File "C:\Python\Python37\lib\http\client.py", line 306, in begin
    version, status, reason = self._read_status()
  File "C:\Python\Python37\lib\http\client.py", line 267, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "C:\Python\Python37\lib\socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 449, in send
    timeout=timeout
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "D:\workspace\venv\lib\site-packages\urllib3\util\retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\common\jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 472, in __init__
    si = self.server_info()
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 146, in __verb
    raise exception
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))
[2020-08-11 16:39:44,889][Thread-5:8480][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-08-11 16:43:01,350][Thread-5:8480][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 16:43:01,351][Thread-5:8480][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 16:43:01,353][Thread-8:300][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 16:43:01,354][Thread-8:300][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 16:43:02,822][Thread-8:300][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/global/host_total]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\global_parameter.py", line 34, in get
    if not project_id.isdecimal():
AttributeError: 'NoneType' object has no attribute 'isdecimal'
[2020-08-11 16:43:02,845][Thread-8:300][task_id:django.server][basehttp.py:154][ERROR]["GET /api/global/host_total?page=1&name= HTTP/1.1" 500 27]
[2020-08-11 16:43:03,924][Thread-6:9288][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\common\jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 472, in __init__
    si = self.server_info()
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 147, in __verb
    raise_on_error(response, verb=verb, **kwargs)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 57, in raise_on_error
    r.status_code, error, r.url, request=request, response=r, **kwargs)
jira.exceptions.JIRAError: JiraError HTTP 462 url: https://www.test.com
	text: <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>462 Forbidden Region - DOSarrest Internet Security</title>
<link href="/DOAError/assets/css/core.css" rel="stylesheet" type="text/css" />
<link rel="shortcut icon" href="/DOAError/assets/images/favicon.ico" /><link rel="apple-touch-icon" href="/DOAError/assets/images/icon-protection.png" />
<script>
function id_process(n){for(var t=n+"=",r=document.cookie.split(";"),e=0;e<r.length;e++){for(var g=r[e];" "==g.charAt(0);)g=g.substring(1,g.length);if(0==g.indexOf(t))return g.substring(t.length,g.length)}return null};
</script>
</head>

<body onload="myFunction(), myFunction2(), myFunction3()">
<div id="apDiv1">
  <table width="100%" border="0" cellspacing="0" cellpadding="0" bgcolor="#444444">
    <tr>
      <td colspan="3" bg background="/DOAError/assets/images/bottom_separator.png"><img src="/DOAError/assets/images/bottom_separator.png" width="5" height="9" /></td>
    </tr>
    <tr>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="18" /></td>
      <td><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="18" /></td>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="18" /></td>
    </tr>
    <tr>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="55" /></td>
      <td width="148" align="left" valign="top"><table width="960" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr>
          <td align="left" valign="top" class="bottomtext">DOSarrest Internet Security is a cloud based fully managed DDoS protection service.  This request has been blocked by DOSarrest due to the above violation.  If you believe you are getting blocked in error please contact the administrator of 
<span id="host"></span><script>
function myFunction() {
    var x = location.host;
    document.getElementById("host").innerHTML = x;
}
</script><noscript>this website</noscript>
            </span> to resolve this issue.</td>
          <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="55" /></td>
          <td align="right" valign="bottom"><img src="/DOAError/assets/images/da_logo.png" width="148" height="50"  alt="DOSarrest Internet Security | DDoS Protection" title="DOSarrest Internet Security | DDoS Protection" /></a></td>
        </tr>
      </table></td>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="55" /></td>
    </tr>
    <tr>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="18" /></td>
      <td><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="18" /></td>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="18" /></td>
    </tr>
  </table>
</div>
<div id="apDiv2">
  <table width="100%" height="100%" border="0" align="center" cellpadding="0" cellspacing="0">
    <tr>
      <td align="center" valign="middle"><table width="760" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr></tr>
        <tr>
          <td align="center"><table width="730" border="0" cellspacing="0" cellpadding="0">
            <tbody>
              <tr>
                <td width="1"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="1" height="340" alt=""/></td>
                <td width="728" align="center"><table width="728" border="0" cellspacing="0" cellpadding="0">
                  <tbody>
                    <tr>
                      <td width="121" align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="10" height="120" alt=""/></td>
                      <td width="500" align="center" class="errortitle">462</td>
                      <td width="109" align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="10" height="120" alt=""/></td>
                    </tr>
                  </tbody>
                </table>
                  <table width="720" border="0" cellpadding="0" cellspacing="0" background="/DOAError/assets/images/462.png">
                    <tbody>
                      <tr>
                        <td colspan="5"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="62" height="172" alt=""/></td>
                      </tr>
                      <tr>
                        <td width="114" align="center" valign="top" class="imagetext">You</td>
                        <td width="197" align="center" valign="top"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="36" alt=""/></td>
                        <td width="120" align="center" valign="top" class="imagetext">DOSarrest<br />
                          <span style="font-size: small">Protection</span></td>
                        <td width="187" align="center" valign="top">&nbsp;</td>
                        <td width="102" align="center" valign="top" class="imagetext">Host<br />
<span style="font-size: x-small" id="host2"></span><script>
function myFunction2() {
    var x = location.host;
    document.getElementById("host2").innerHTML = x;
}
</script></td>
                      </tr>
                    </tbody>
                  </table></td>
                <td width="1"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="1" height="340" alt=""/></td>
              </tr>
            </tbody>
          </table></td>
        </tr>
        <tr>
          <td align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="8" /></td>
        </tr>
        <tr>
          <td align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
            <tbody>
              <tr>
                <td width="30%" align="left"><table border="0" cellpadding="0" cellspacing="0">
                  <tbody>
                    <tr>
                      <td nowrap="nowrap"><div id="idtext">ID: </div></td>
                      <td nowrap="nowrap"><div id="id_finish"></div>
                        <script>document.getElementById("id_finish").innerHTML=id_process("dis-request-id");</script></td>
                    </tr>
                  </tbody>
                </table></td>
                <td align="center">|</td>
                <td width="30%" align="center"><table border="0" cellpadding="0" cellspacing="0">
                  <tbody>
                    <tr>
                      <td nowrap="nowrap"><div id="idtext"> Your IP Address: </div></td>
                      <td nowrap="nowrap"><div id="addr_finish"></div>
                        <script>document.getElementById("addr_finish").innerHTML=id_process("dis-remote-addr");</script></td>
                    </tr>
                  </tbody>
                </table></td>
                <td align="center">|</td>
                <td width="30%" align="right"><table border="0" cellpadding="0" cellspacing="0">
                  <tbody>
                    <tr>
                      <td nowrap="nowrap"><div id="idtext"> Timestamp: </div></td>
                      <td nowrap="nowrap"><div id="ts_finish"></div>
                        <script>document.getElementById("ts_finish").innerHTML=id_process("dis-timestamp");</script></td>
                    </tr>
                  </tbody>
                </table></td>
              </tr>
            </tbody>
          </table></td>
        </tr>
        <tr>
          <td align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="8" /></td>
        </tr>
        <tr>
          <td align="left" valign="top"><p class="bodytext"><strong>462 Forbidden Region: </strong>Your request for this resource had been blocked.  This resource is not available in your region.</p>
            <p class="bodytext">DOSarrest Internet Security is a cloud based fully managed DDoS protection service.  This request has been blocked by DOSarrest due to the above violation.  If you believe you are getting blocked in error please contact the administrator of 
<span id="host3"></span><script>
function myFunction3() {
    var x = location.host;
    document.getElementById("host3").innerHTML = x;
}
</script><noscript>this website</noscript>
            </span> to resolve this issue.</p></td>
        </tr>
        <tr></tr>
      </table></td>
    </tr>
  </table>
</div>
</body>
</html>

	
	response headers = {'Server': 'nginx/1.16.1', 'Date': 'Tue, 11 Aug 2020 08:56:14 GMT', 'Content-Type': 'text/html', 'Content-Length': '8859', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=20', 'ETag': '"5e5304fc-229b"', 'X-DIS-Request-ID': '9d89f0fb1b60b0ed30c325f95a540fa4', 'Set-Cookie': 'dis-request-id=9d89f0fb1b60b0ed30c325f95a540fa4; secure, dis-timestamp=2020-08-11T01:56:14-07:00; secure, dis-remote-addr=223.71.127.50; secure', 'X-Frame-Options': 'sameorigin'}
	response text = <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>462 Forbidden Region - DOSarrest Internet Security</title>
<link href="/DOAError/assets/css/core.css" rel="stylesheet" type="text/css" />
<link rel="shortcut icon" href="/DOAError/assets/images/favicon.ico" /><link rel="apple-touch-icon" href="/DOAError/assets/images/icon-protection.png" />
<script>
function id_process(n){for(var t=n+"=",r=document.cookie.split(";"),e=0;e<r.length;e++){for(var g=r[e];" "==g.charAt(0);)g=g.substring(1,g.length);if(0==g.indexOf(t))return g.substring(t.length,g.length)}return null};
</script>
</head>

<body onload="myFunction(), myFunction2(), myFunction3()">
<div id="apDiv1">
  <table width="100%" border="0" cellspacing="0" cellpadding="0" bgcolor="#444444">
    <tr>
      <td colspan="3" bg background="/DOAError/assets/images/bottom_separator.png"><img src="/DOAError/assets/images/bottom_separator.png" width="5" height="9" /></td>
    </tr>
    <tr>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="18" /></td>
      <td><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="18" /></td>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="18" /></td>
    </tr>
    <tr>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="55" /></td>
      <td width="148" align="left" valign="top"><table width="960" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr>
          <td align="left" valign="top" class="bottomtext">DOSarrest Internet Security is a cloud based fully managed DDoS protection service.  This request has been blocked by DOSarrest due to the above violation.  If you believe you are getting blocked in error please contact the administrator of 
<span id="host"></span><script>
function myFunction() {
    var x = location.host;
    document.getElementById("host").innerHTML = x;
}
</script><noscript>this website</noscript>
            </span> to resolve this issue.</td>
          <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" alt="" width="18" height="55" /></td>
          <td align="right" valign="bottom"><img src="/DOAError/assets/images/da_logo.png" width="148" height="50"  alt="DOSarrest Internet Security | DDoS Protection" title="DOSarrest Internet Security | DDoS Protection" /></a></td>
        </tr>
      </table></td>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="55" /></td>
    </tr>
    <tr>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="18" /></td>
      <td><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="18" /></td>
      <td width="18"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="18" /></td>
    </tr>
  </table>
</div>
<div id="apDiv2">
  <table width="100%" height="100%" border="0" align="center" cellpadding="0" cellspacing="0">
    <tr>
      <td align="center" valign="middle"><table width="760" border="0" align="center" cellpadding="0" cellspacing="0">
        <tr></tr>
        <tr>
          <td align="center"><table width="730" border="0" cellspacing="0" cellpadding="0">
            <tbody>
              <tr>
                <td width="1"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="1" height="340" alt=""/></td>
                <td width="728" align="center"><table width="728" border="0" cellspacing="0" cellpadding="0">
                  <tbody>
                    <tr>
                      <td width="121" align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="10" height="120" alt=""/></td>
                      <td width="500" align="center" class="errortitle">462</td>
                      <td width="109" align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="10" height="120" alt=""/></td>
                    </tr>
                  </tbody>
                </table>
                  <table width="720" border="0" cellpadding="0" cellspacing="0" background="/DOAError/assets/images/462.png">
                    <tbody>
                      <tr>
                        <td colspan="5"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="62" height="172" alt=""/></td>
                      </tr>
                      <tr>
                        <td width="114" align="center" valign="top" class="imagetext">You</td>
                        <td width="197" align="center" valign="top"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="36" alt=""/></td>
                        <td width="120" align="center" valign="top" class="imagetext">DOSarrest<br />
                          <span style="font-size: small">Protection</span></td>
                        <td width="187" align="center" valign="top">&nbsp;</td>
                        <td width="102" align="center" valign="top" class="imagetext">Host<br />
<span style="font-size: x-small" id="host2"></span><script>
function myFunction2() {
    var x = location.host;
    document.getElementById("host2").innerHTML = x;
}
</script></td>
                      </tr>
                    </tbody>
                  </table></td>
                <td width="1"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="1" height="340" alt=""/></td>
              </tr>
            </tbody>
          </table></td>
        </tr>
        <tr>
          <td align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="8" /></td>
        </tr>
        <tr>
          <td align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
            <tbody>
              <tr>
                <td width="30%" align="left"><table border="0" cellpadding="0" cellspacing="0">
                  <tbody>
                    <tr>
                      <td nowrap="nowrap"><div id="idtext">ID: </div></td>
                      <td nowrap="nowrap"><div id="id_finish"></div>
                        <script>document.getElementById("id_finish").innerHTML=id_process("dis-request-id");</script></td>
                    </tr>
                  </tbody>
                </table></td>
                <td align="center">|</td>
                <td width="30%" align="center"><table border="0" cellpadding="0" cellspacing="0">
                  <tbody>
                    <tr>
                      <td nowrap="nowrap"><div id="idtext"> Your IP Address: </div></td>
                      <td nowrap="nowrap"><div id="addr_finish"></div>
                        <script>document.getElementById("addr_finish").innerHTML=id_process("dis-remote-addr");</script></td>
                    </tr>
                  </tbody>
                </table></td>
                <td align="center">|</td>
                <td width="30%" align="right"><table border="0" cellpadding="0" cellspacing="0">
                  <tbody>
                    <tr>
                      <td nowrap="nowrap"><div id="idtext"> Timestamp: </div></td>
                      <td nowrap="nowrap"><div id="ts_finish"></div>
                        <script>document.getElementById("ts_finish").innerHTML=id_process("dis-timestamp");</script></td>
                    </tr>
                  </tbody>
                </table></td>
              </tr>
            </tbody>
          </table></td>
        </tr>
        <tr>
          <td align="center"><img src="/DOAError/assets/images/bottom_trans_spacer.png" width="18" height="8" /></td>
        </tr>
        <tr>
          <td align="left" valign="top"><p class="bodytext"><strong>462 Forbidden Region: </strong>Your request for this resource had been blocked.  This resource is not available in your region.</p>
            <p class="bodytext">DOSarrest Internet Security is a cloud based fully managed DDoS protection service.  This request has been blocked by DOSarrest due to the above violation.  If you believe you are getting blocked in error please contact the administrator of 
<span id="host3"></span><script>
function myFunction3() {
    var x = location.host;
    document.getElementById("host3").innerHTML = x;
}
</script><noscript>this website</noscript>
            </span> to resolve this issue.</p></td>
        </tr>
        <tr></tr>
      </table></td>
    </tr>
  </table>
</div>
</body>
</html>

[2020-08-11 16:43:03,926][Thread-6:9288][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
[2020-08-11 16:47:07,307][Thread-6:9288][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/global/host_total]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\global_parameter.py", line 34, in get
    if not project_id.isdecimal():
AttributeError: 'NoneType' object has no attribute 'isdecimal'
[2020-08-11 16:47:07,309][Thread-6:9288][task_id:django.server][basehttp.py:154][ERROR]["GET /api/global/host_total?page=1&name= HTTP/1.1" 500 27]
[2020-08-11 16:51:25,724][Thread-6:9288][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/global/host_total]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\global_parameter.py", line 34, in get
    if not project_id.isdecimal():
AttributeError: 'NoneType' object has no attribute 'isdecimal'
[2020-08-11 16:51:25,726][Thread-6:9288][task_id:django.server][basehttp.py:154][ERROR]["GET /api/global/host_total?page=1&name=Global HTTP/1.1" 500 27]
[2020-08-11 16:51:43,459][Thread-6:9288][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/global/host_total]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\global_parameter.py", line 34, in get
    if not project_id.isdecimal():
AttributeError: 'NoneType' object has no attribute 'isdecimal'
[2020-08-11 16:51:43,460][Thread-6:9288][task_id:django.server][basehttp.py:154][ERROR]["GET /api/global/host_total?page=1&name=Global HTTP/1.1" 500 27]
[2020-08-11 16:52:23,450][Thread-6:9288][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/global/host_total]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\global_parameter.py", line 34, in get
    if not project_id.isdecimal():
AttributeError: 'NoneType' object has no attribute 'isdecimal'
[2020-08-11 16:52:23,451][Thread-6:9288][task_id:django.server][basehttp.py:154][ERROR]["GET /api/global/host_total?page=1&name= HTTP/1.1" 500 27]
[2020-08-11 16:52:29,888][Thread-6:9288][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/global/host_total]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\global_parameter.py", line 34, in get
    if not project_id.isdecimal():
AttributeError: 'NoneType' object has no attribute 'isdecimal'
[2020-08-11 16:52:29,889][Thread-6:9288][task_id:django.server][basehttp.py:154][ERROR]["GET /api/global/host_total?page=1&name=all HTTP/1.1" 500 27]
[2020-08-11 16:54:16,654][Thread-6:9288][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/global/host_total]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\global_parameter.py", line 34, in get
    if not project_id.isdecimal():
AttributeError: 'NoneType' object has no attribute 'isdecimal'
[2020-08-11 16:54:16,655][Thread-6:9288][task_id:django.server][basehttp.py:154][ERROR]["GET /api/global/host_total?page=1&name= HTTP/1.1" 500 27]
[2020-08-11 17:00:54,206][Thread-3:9188][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 17:00:54,207][Thread-2:5708][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/jira/figure]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 68, in post
    d = test_report.objects.get(type=1)
  File "D:\workspace\venv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\db\models\query.py", line 399, in get
    self.model._meta.object_name
TestPlatform.models.test_report.DoesNotExist: test_report matching query does not exist.
[2020-08-11 17:00:54,211][Thread-3:9188][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 17:00:54,212][Thread-2:5708][task_id:django.server][basehttp.py:154][ERROR]["POST /api/jira/figure HTTP/1.1" 500 27]
[2020-08-11 17:00:54,535][Thread-4:11184][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 17:00:54,535][Thread-4:11184][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 17:00:54,535][Thread-4:11184][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [1/3] in 1.6072233135534297s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 17:00:56,640][Thread-4:11184][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 17:00:56,640][Thread-4:11184][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 17:00:56,640][Thread-4:11184][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [2/3] in 25.283806334245206s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 17:01:23,176][Thread-4:11184][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 17:01:23,177][Thread-4:11184][task_id:root][resilientsession.py:87][WARNING][Got ConnectionError [HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))] errno:None on GET http://jira.test.com/rest/api/2/serverInfo
{'response': None, 'request': <PreparedRequest [GET]>}\{'response': None, 'request': <PreparedRequest [GET]>}]
[2020-08-11 17:01:23,177][Thread-4:11184][task_id:root][resilientsession.py:103][WARNING][Got recoverable error from GET http://jira.test.com/rest/api/2/serverInfo, will retry [3/3] in 41.70933376017885s. Err: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))]
[2020-08-11 17:02:05,131][Thread-4:11184][task_id:root][resilientsession.py:130][WARNING][HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None))) while doing GET http://jira.test.com/rest/api/2/serverInfo [{'params': None, 'headers': {'User-Agent': 'python-requests/2.21.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json,*.*;q=0.9', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'Content-Type': 'application/json', 'X-Atlassian-Token': 'no-check'}}]]
[2020-08-11 17:02:05,132][Thread-4:11184][task_id:django.request][log.py:228][ERROR][Internal Server Error: /api/todo ]
Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 600, in urlopen
    chunked=chunked)
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 384, in _make_request
    six.raise_from(e, None)
  File "<string>", line 2, in raise_from
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 380, in _make_request
    httplib_response = conn.getresponse()
  File "C:\Python\Python37\lib\http\client.py", line 1344, in getresponse
    response.begin()
  File "C:\Python\Python37\lib\http\client.py", line 306, in begin
    version, status, reason = self._read_status()
  File "C:\Python\Python37\lib\http\client.py", line 267, in _read_status
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "C:\Python\Python37\lib\socket.py", line 589, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [WinError 10054] 远程主机强迫关闭了一个现有的连接。

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 449, in send
    timeout=timeout
  File "D:\workspace\venv\lib\site-packages\urllib3\connectionpool.py", line 638, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "D:\workspace\venv\lib\site-packages\urllib3\util\retry.py", line 398, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\exception.py", line 34, in inner
    response = get_response(request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 126, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "D:\workspace\venv\lib\site-packages\django\core\handlers\base.py", line 124, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\django\views\generic\base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\workspace\venv\lib\site-packages\rest_framework\views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\api\Jiradata.py", line 159, in get
    data = Jiradata().Pending(user)
  File "D:\workspace\Biomind_Test_Platform\TestPlatform\common\jiraData.py", line 18, in __init__
    self.jira = JIRA(settings.SITE_JIRAURL, basic_auth=('yinhang', '123456'))
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 472, in __init__
    si = self.server_info()
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2133, in server_info
    j = self._get_json('serverInfo')
  File "D:\workspace\venv\lib\site-packages\jira\client.py", line 2549, in _get_json
    r = self._session.get(url, params=params)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 151, in get
    return self.__verb('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 146, in __verb
    raise exception
  File "D:\workspace\venv\lib\site-packages\jira\resilientsession.py", line 125, in __verb
    response = method(url, timeout=self.timeout, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 546, in get
    return self.request('GET', url, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 533, in request
    resp = self.send(prep, **send_kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\sessions.py", line 646, in send
    r = adapter.send(request, **kwargs)
  File "D:\workspace\venv\lib\site-packages\requests\adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='jira.test.com', port=80): Max retries exceeded with url: /rest/api/2/serverInfo (Caused by ProtocolError('Connection aborted.', ConnectionResetError(10054, '远程主机强迫关闭了一个现有的连接。', None, 10054, None)))
[2020-08-11 17:02:05,137][Thread-4:11184][task_id:django.server][basehttp.py:154][ERROR]["GET /api/todo%20?user=yinhang HTTP/1.1" 500 27]
